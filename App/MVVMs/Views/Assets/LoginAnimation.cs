//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//       LottieGen version:
//           8.1.240821.1+077322fa26
//       
//       Command:
//           LottieGen -Language CSharp -Public -WinUIVersion 3.0 -InputFile LoginAnimation.json
//       
//       Input file:
//           LoginAnimation.json (186303 bytes created 17:45+07:00 Sep 8 2024)
//       
//       LottieGen source:
//           http://aka.ms/Lottie
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
// ____________________________________
// |       Object stats       | Count |
// |__________________________|_______|
// | All CompositionObjects   |   300 |
// |--------------------------+-------|
// | Expression animators     |     5 |
// | KeyFrame animators       |    19 |
// | Reference parameters     |     6 |
// | Expression operations    |     0 |
// |--------------------------+-------|
// | Animated brushes         |     - |
// | Animated gradient stops  |     - |
// | ExpressionAnimations     |     1 |
// | PathKeyFrameAnimations   |     - |
// |--------------------------+-------|
// | ContainerVisuals         |     9 |
// | ShapeVisuals             |     6 |
// |--------------------------+-------|
// | ContainerShapes          |     7 |
// | CompositionSpriteShapes  |    42 |
// |--------------------------+-------|
// | Brushes                  |    15 |
// | Gradient stops           |     - |
// | CompositionVisualSurface |     2 |
// ------------------------------------
using Microsoft.Graphics;
using Microsoft.Graphics.Canvas;
using Microsoft.Graphics.Canvas.Effects;
using Microsoft.Graphics.Canvas.Geometry;
using Microsoft.UI.Composition;
using System;
using System.Collections.Generic;
using System.Numerics;
using Windows.UI;

namespace AnimatedVisuals
{
    // Name:        Pincode password protection
    // Frame rate:  60 fps
    // Frame count: 240
    // Duration:    4000.0 mS
    public sealed class LoginAnimation
        : Microsoft.UI.Xaml.Controls.IAnimatedVisualSource
        , Microsoft.UI.Xaml.Controls.IAnimatedVisualSource2
    {
        // Animation duration: 4.000 seconds.
        internal const long c_durationTicks = 40000000;

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor)
        {
            object ignored = null;
            return TryCreateAnimatedVisual(compositor, out ignored);
        }

        public Microsoft.UI.Xaml.Controls.IAnimatedVisual TryCreateAnimatedVisual(Compositor compositor, out object diagnostics)
        {
            diagnostics = null;

            var res = 
                new LoginAnimation_AnimatedVisual(
                    compositor
                    );
                res.CreateAnimations();
                return res;
        }

        /// <summary>
        /// Gets the number of frames in the animation.
        /// </summary>
        public double FrameCount => 240d;

        /// <summary>
        /// Gets the frame rate of the animation.
        /// </summary>
        public double Framerate => 60d;

        /// <summary>
        /// Gets the duration of the animation.
        /// </summary>
        public TimeSpan Duration => TimeSpan.FromTicks(40000000);

        /// <summary>
        /// Converts a zero-based frame number to the corresponding progress value denoting the
        /// start of the frame.
        /// </summary>
        public double FrameToProgress(double frameNumber)
        {
            return frameNumber / 240d;
        }

        /// <summary>
        /// Returns a map from marker names to corresponding progress values.
        /// </summary>
        public IReadOnlyDictionary<string, double> Markers =>
            new Dictionary<string, double>
            {
            };

        /// <summary>
        /// Sets the color property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetColorProperty(string propertyName, Color value)
        {
        }

        /// <summary>
        /// Sets the scalar property with the given name, or does nothing if no such property
        /// exists.
        /// </summary>
        public void SetScalarProperty(string propertyName, double value)
        {
        }

        sealed class LoginAnimation_AnimatedVisual
            : Microsoft.UI.Xaml.Controls.IAnimatedVisual
            , Microsoft.UI.Xaml.Controls.IAnimatedVisual2
        {
            const long c_durationTicks = 40000000;
            readonly Compositor _c;
            readonly ExpressionAnimation _reusableExpressionAnimation;
            AnimationController _animationController_0;
            CanvasGeometry _geometry_56;
            CompositionColorBrush _colorBrush_AlmostBlack_FF101111;
            CompositionColorBrush _colorBrush_AlmostCrimson_FFF52B37;
            CompositionColorBrush _colorBrush_AlmostDarkViolet_FF8613CC;
            CompositionColorBrush _colorBrush_AlmostFuchsia_FFF600FA;
            CompositionColorBrush _colorBrush_AlmostGold_FFFFC500;
            CompositionColorBrush _colorBrush_White;
            CompositionContainerShape _containerShape_0;
            CompositionContainerShape _containerShape_1;
            CompositionContainerShape _containerShape_2;
            CompositionContainerShape _containerShape_3;
            CompositionContainerShape _containerShape_4;
            CompositionContainerShape _containerShape_5;
            CompositionContainerShape _containerShape_6;
            CompositionPathGeometry _pathGeometry_10;
            CompositionSpriteShape _spriteShape_00;
            CompositionSpriteShape _spriteShape_01;
            CompositionSpriteShape _spriteShape_02;
            CompositionSpriteShape _spriteShape_03;
            ContainerVisual _containerVisual_0;
            ContainerVisual _containerVisual_2;
            ContainerVisual _containerVisual_4;
            ContainerVisual _root;
            CubicBezierEasingFunction _cubicBezierEasingFunction_0;
            CubicBezierEasingFunction _cubicBezierEasingFunction_1;
            CubicBezierEasingFunction _cubicBezierEasingFunction_2;
            CubicBezierEasingFunction _cubicBezierEasingFunction_3;
            InsetClip _insetClip_0;
            StepEasingFunction _holdThenStepEasingFunction;
            StepEasingFunction _stepThenHoldEasingFunction;
            Vector2KeyFrameAnimation _scaleVector2Animation_0;

            void BindProperty(
                CompositionObject target,
                string animatedPropertyName,
                string expression,
                string referenceParameterName,
                CompositionObject referencedObject)
            {
                _reusableExpressionAnimation.ClearAllParameters();
                _reusableExpressionAnimation.Expression = expression;
                _reusableExpressionAnimation.SetReferenceParameter(referenceParameterName, referencedObject);
                target.StartAnimation(animatedPropertyName, _reusableExpressionAnimation);
            }

            ScalarKeyFrameAnimation CreateScalarKeyFrameAnimation(float initialProgress, float initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateScalarKeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector2KeyFrameAnimation CreateVector2KeyFrameAnimation(float initialProgress, Vector2 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector2KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            Vector3KeyFrameAnimation CreateVector3KeyFrameAnimation(float initialProgress, Vector3 initialValue, CompositionEasingFunction initialEasingFunction)
            {
                var result = _c.CreateVector3KeyFrameAnimation();
                result.Duration = TimeSpan.FromTicks(c_durationTicks);
                result.InsertKeyFrame(initialProgress, initialValue, initialEasingFunction);
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                return result;
            }

            CompositionSpriteShape CreateSpriteShape(CompositionGeometry geometry, Matrix3x2 transformMatrix, CompositionBrush fillBrush)
            {
                var result = _c.CreateSpriteShape(geometry);
                result.TransformMatrix = transformMatrix;
                result.FillBrush = fillBrush;
                return result;
            }

            AnimationController AnimationController_0()
            {
                if (_animationController_0 != null) { return _animationController_0; }
                var result = _animationController_0 = _c.CreateAnimationController();
                result.Pause();
                BindProperty(_animationController_0, "Progress", "_.Progress", "_", _root);
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<71.746, 156.55103>
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_00()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_01(), Geometry_02() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Offset:<71.746, 156.55103>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_01()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00100000005F, 30.9309998F));
                    builder.AddCubicBezier(new Vector2(-17.0550003F, 30.9309998F), new Vector2(-30.9309998F, 17.0550003F), new Vector2(-30.9309998F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(-30.9309998F, -17.0559998F), new Vector2(-17.0550003F, -30.9309998F), new Vector2(0.00100000005F, -30.9309998F));
                    builder.AddCubicBezier(new Vector2(17.0559998F, -30.9309998F), new Vector2(30.9309998F, -17.0559998F), new Vector2(30.9309998F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(30.9309998F, 17.0550003F), new Vector2(17.0559998F, 30.9309998F), new Vector2(0.00100000005F, 30.9309998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Offset:<71.746, 156.55103>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_02()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00100000005F, -25.5979996F));
                    builder.AddCubicBezier(new Vector2(-14.1140003F, -25.5979996F), new Vector2(-25.5970001F, -14.1149998F), new Vector2(-25.5970001F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(-25.5970001F, 14.1140003F), new Vector2(-14.1140003F, 25.5979996F), new Vector2(0.00100000005F, 25.5979996F));
                    builder.AddCubicBezier(new Vector2(14.1149998F, 25.5979996F), new Vector2(25.5970001F, 14.1140003F), new Vector2(25.5970001F, -0.00100000005F));
                    builder.AddCubicBezier(new Vector2(25.5970001F, -14.1149998F), new Vector2(14.1149998F, -25.5979996F), new Vector2(0.00100000005F, -25.5979996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<71.746, 156.55103>
            CanvasGeometry Geometry_03()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(14.3640003F, -1.17499995F));
                    builder.AddCubicBezier(new Vector2(15.0129995F, 6.75899982F), new Vector2(9.1079998F, 13.7159996F), new Vector2(1.17499995F, 14.3640003F));
                    builder.AddCubicBezier(new Vector2(-6.75899982F, 15.0129995F), new Vector2(-13.7159996F, 9.10900021F), new Vector2(-14.3640003F, 1.17400002F));
                    builder.AddCubicBezier(new Vector2(-15.0129995F, -6.75899982F), new Vector2(-9.10900021F, -13.7150002F), new Vector2(-1.17499995F, -14.3640003F));
                    builder.AddCubicBezier(new Vector2(6.7579999F, -15.0129995F), new Vector2(13.7150002F, -9.1079998F), new Vector2(14.3640003F, -1.17499995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<71.746, 156.55103>
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_04()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_05(), Geometry_06() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Offset:<71.746, 156.55103>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_05()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2.27200007F, 29.1879997F));
                    builder.AddCubicBezier(new Vector2(-8.24699974F, 28.7259998F), new Vector2(-13.9099998F, 26.4069996F), new Vector2(-18.5669994F, 22.4540005F));
                    builder.AddCubicBezier(new Vector2(-24.4090004F, 17.4950008F), new Vector2(-27.9710007F, 10.5579996F), new Vector2(-28.5960007F, 2.91899991F));
                    builder.AddCubicBezier(new Vector2(-29.8850002F, -12.849F), new Vector2(-18.1060009F, -26.7269993F), new Vector2(-2.33800006F, -28.0160007F));
                    builder.AddCubicBezier(new Vector2(13.4300003F, -29.3059998F), new Vector2(27.3059998F, -17.5259991F), new Vector2(28.5960007F, -1.75800002F));
                    builder.AddCubicBezier(new Vector2(29.8850002F, 14.0100002F), new Vector2(18.1070004F, 27.8869991F), new Vector2(2.33899999F, 29.177F));
                    builder.AddCubicBezier(new Vector2(0.788999975F, 29.3040009F), new Vector2(-0.751999974F, 29.3050003F), new Vector2(-2.27200007F, 29.1879997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Offset:<71.746, 156.55103>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_06()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(1.81400001F, -22.7099991F));
                    builder.AddCubicBezier(new Vector2(0.595000029F, -22.8040009F), new Vector2(-0.647000015F, -22.8029995F), new Vector2(-1.903F, -22.7010002F));
                    builder.AddCubicBezier(new Vector2(-14.7399998F, -21.6509991F), new Vector2(-24.3299999F, -10.3520002F), new Vector2(-23.2800007F, 2.48399997F));
                    builder.AddCubicBezier(new Vector2(-22.7719994F, 8.70300007F), new Vector2(-19.8719997F, 14.3509998F), new Vector2(-15.1160002F, 18.3880005F));
                    builder.AddCubicBezier(new Vector2(-10.3590002F, 22.4260006F), new Vector2(-4.31400013F, 24.3700008F), new Vector2(1.90499997F, 23.8600006F));
                    builder.AddCubicBezier(new Vector2(14.7410002F, 22.8110008F), new Vector2(24.3299999F, 11.5129995F), new Vector2(23.2800007F, -1.32500005F));
                    builder.AddCubicBezier(new Vector2(22.3330002F, -12.9049997F), new Vector2(13.0469999F, -21.8419991F), new Vector2(1.81400001F, -22.7099991F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<71.746, 156.55103>
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_07()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_08(), Geometry_09() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Offset:<71.746, 156.55103>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_08()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00100000005F, 16.2800007F));
                    builder.AddCubicBezier(new Vector2(-8.97599983F, 16.2800007F), new Vector2(-16.2800007F, 8.97599983F), new Vector2(-16.2800007F, 0F));
                    builder.AddCubicBezier(new Vector2(-16.2800007F, -8.97700024F), new Vector2(-8.97599983F, -16.2800007F), new Vector2(0.00100000005F, -16.2800007F));
                    builder.AddCubicBezier(new Vector2(8.97799969F, -16.2800007F), new Vector2(16.2800007F, -8.97700024F), new Vector2(16.2800007F, 0F));
                    builder.AddCubicBezier(new Vector2(16.2800007F, 8.97599983F), new Vector2(8.97799969F, 16.2800007F), new Vector2(0.00100000005F, 16.2800007F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - -  Offset:<71.746, 156.55103>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_09()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.00100000005F, -12.0129995F));
                    builder.AddCubicBezier(new Vector2(-6.62300014F, -12.0129995F), new Vector2(-12.0120001F, -6.62400007F), new Vector2(-12.0120001F, 0F));
                    builder.AddCubicBezier(new Vector2(-12.0120001F, 6.62400007F), new Vector2(-6.62300014F, 12.0129995F), new Vector2(0.00100000005F, 12.0129995F));
                    builder.AddCubicBezier(new Vector2(6.625F, 12.0129995F), new Vector2(12.0129995F, 6.62400007F), new Vector2(12.0129995F, 0F));
                    builder.AddCubicBezier(new Vector2(12.0129995F, -6.62400007F), new Vector2(6.625F, -12.0129995F), new Vector2(0.00100000005F, -12.0129995F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<71.746, 156.55103>
            CanvasGeometry Geometry_10()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-316.394989F, -244.699005F));
                    builder.AddCubicBezier(new Vector2(-391.259003F, -188.304001F), new Vector2(-453.96701F, -119.977997F), new Vector2(-477.110992F, -37.0789986F));
                    builder.AddCubicBezier(new Vector2(-506.28299F, 67.4100037F), new Vector2(-471.937012F, 180.910004F), new Vector2(-404.372009F, 265.626007F));
                    builder.AddCubicBezier(new Vector2(-279.501007F, 422.195007F), new Vector2(-39.0480003F, 481.743011F), new Vector2(153.169006F, 403.699005F));
                    builder.AddCubicBezier(new Vector2(347.165009F, 324.932007F), new Vector2(458.815002F, 114.704002F), new Vector2(483.984009F, -76.9990005F));
                    builder.AddCubicBezier(new Vector2(494.362F, -156.050995F), new Vector2(483.054993F, -239.647003F), new Vector2(438.092987F, -305.585999F));
                    builder.AddCubicBezier(new Vector2(383.660004F, -385.412994F), new Vector2(284.497986F, -430.725006F), new Vector2(184.591003F, -437.028992F));
                    builder.AddCubicBezier(new Vector2(84.6839981F, -443.334015F), new Vector2(-15.5760002F, -414.209015F), new Vector2(-105.283997F, -369.598999F));
                    builder.AddCubicBezier(new Vector2(-172.242996F, -336.303009F), new Vector2(-249.214005F, -295.304993F), new Vector2(-316.394989F, -244.699005F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 5 Offset:<307.943, 43.448>
            CanvasGeometry Geometry_11()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.21599996F, -42.526001F));
                    builder.AddCubicBezier(new Vector2(22.2700005F, -43.1980019F), new Vector2(41.8549995F, -24.7029991F), new Vector2(42.526001F, -1.21700001F));
                    builder.AddCubicBezier(new Vector2(43.1980019F, 22.2700005F), new Vector2(24.7029991F, 41.8540001F), new Vector2(1.21700001F, 42.526001F));
                    builder.AddCubicBezier(new Vector2(-22.2700005F, 43.1980019F), new Vector2(-41.8549995F, 24.7029991F), new Vector2(-42.526001F, 1.21599996F));
                    builder.AddCubicBezier(new Vector2(-43.1980019F, -22.2700005F), new Vector2(-24.7019997F, -41.8540001F), new Vector2(-1.21599996F, -42.526001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 4 Offset:<308.608, 28.985>
            CanvasGeometry Geometry_12()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(1.52499998F, -9.44900036F));
                    builder.AddLine(new Vector2(1.51699996F, -9.44900036F));
                    builder.AddLine(new Vector2(-1.51800001F, -9.44900036F));
                    builder.AddLine(new Vector2(-1.52499998F, -9.44900036F));
                    builder.AddCubicBezier(new Vector2(-7.93400002F, -9.44900036F), new Vector2(-13.1479998F, -4.6500001F), new Vector2(-13.1479998F, 1.24899995F));
                    builder.AddLine(new Vector2(-13.1400003F, 1.24899995F));
                    builder.AddLine(new Vector2(-13.1400003F, 9.44900036F));
                    builder.AddLine(new Vector2(-7.71400023F, 9.44900036F));
                    builder.AddLine(new Vector2(-7.71400023F, 1.24899995F));
                    builder.AddCubicBezier(new Vector2(-7.71400023F, -1.89600003F), new Vector2(-4.93499994F, -4.45499992F), new Vector2(-1.51800001F, -4.45499992F));
                    builder.AddLine(new Vector2(1.51699996F, -4.45499992F));
                    builder.AddCubicBezier(new Vector2(4.93400002F, -4.45499992F), new Vector2(7.71400023F, -1.89600003F), new Vector2(7.71400023F, 1.24899995F));
                    builder.AddLine(new Vector2(7.71400023F, 9.44900036F));
                    builder.AddLine(new Vector2(13.1400003F, 9.44900036F));
                    builder.AddLine(new Vector2(13.1400003F, 1.24899995F));
                    builder.AddLine(new Vector2(13.1479998F, 1.24899995F));
                    builder.AddCubicBezier(new Vector2(13.1479998F, -4.6500001F), new Vector2(7.93400002F, -9.44900036F), new Vector2(1.52499998F, -9.44900036F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 3 Offset:<308.604, 52.345>
            CanvasGeometry Geometry_13()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(18.5970001F, 11.6020002F));
                    builder.AddCubicBezier(new Vector2(18.5970001F, 13.4759998F), new Vector2(16.9589996F, 14.9940004F), new Vector2(14.9379997F, 14.9940004F));
                    builder.AddLine(new Vector2(-14.9379997F, 14.9940004F));
                    builder.AddCubicBezier(new Vector2(-16.9589996F, 14.9940004F), new Vector2(-18.5970001F, 13.4759998F), new Vector2(-18.5970001F, 11.6020002F));
                    builder.AddLine(new Vector2(-18.5970001F, -11.6020002F));
                    builder.AddCubicBezier(new Vector2(-18.5970001F, -13.4759998F), new Vector2(-16.9589996F, -14.9940004F), new Vector2(-14.9379997F, -14.9940004F));
                    builder.AddLine(new Vector2(14.9379997F, -14.9940004F));
                    builder.AddCubicBezier(new Vector2(16.9589996F, -14.9940004F), new Vector2(18.5970001F, -13.4759998F), new Vector2(18.5970001F, -11.6020002F));
                    builder.AddLine(new Vector2(18.5970001F, 11.6020002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 2 Offset:<308.609, 52.336>
            CanvasGeometry Geometry_14()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-2.54999995F, -1.79400003F));
                    builder.AddCubicBezier(new Vector2(-2.54999995F, -0.698000014F), new Vector2(-1.79499996F, 0.0850000009F), new Vector2(-1.55900002F, 0.303000003F));
                    builder.AddCubicBezier(new Vector2(-1.51100004F, 0.34799999F), new Vector2(-1.46300006F, 0.393999994F), new Vector2(-1.41700006F, 0.442000002F));
                    builder.AddCubicBezier(new Vector2(-1.33500004F, 0.52700001F), new Vector2(-1.255F, 0.601999998F), new Vector2(-1.22099996F, 0.624000013F));
                    builder.AddCubicBezier(new Vector2(-1.176F, 0.65200001F), new Vector2(-1.16199994F, 0.80400002F), new Vector2(-1.19000006F, 0.959999979F));
                    builder.AddLine(new Vector2(-1.773F, 4.26399994F));
                    builder.AddCubicBezier(new Vector2(-1.79999995F, 4.42000008F), new Vector2(-1.70200002F, 4.54799986F), new Vector2(-1.55499995F, 4.54799986F));
                    builder.AddLine(new Vector2(1.55499995F, 4.54799986F));
                    builder.AddCubicBezier(new Vector2(1.70299995F, 4.54799986F), new Vector2(1.801F, 4.42000008F), new Vector2(1.773F, 4.26399994F));
                    builder.AddLine(new Vector2(1.19000006F, 0.959999979F));
                    builder.AddCubicBezier(new Vector2(1.16199994F, 0.80400002F), new Vector2(1.17700005F, 0.65200001F), new Vector2(1.22099996F, 0.624000013F));
                    builder.AddCubicBezier(new Vector2(1.25100005F, 0.603999972F), new Vector2(1.31500006F, 0.545000017F), new Vector2(1.38600004F, 0.47299999F));
                    builder.AddCubicBezier(new Vector2(1.45000005F, 0.407000005F), new Vector2(1.51699996F, 0.344000012F), new Vector2(1.58599997F, 0.282999992F));
                    builder.AddCubicBezier(new Vector2(1.84899998F, 0.0489999987F), new Vector2(2.54999995F, -0.680000007F), new Vector2(2.54999995F, -1.79400003F));
                    builder.AddCubicBezier(new Vector2(2.54999995F, -3.31299996F), new Vector2(1.40499997F, -4.54799986F), new Vector2(-0.00100000005F, -4.54799986F));
                    builder.AddCubicBezier(new Vector2(-1.40699995F, -4.54799986F), new Vector2(-2.54999995F, -3.31299996F), new Vector2(-2.54999995F, -1.79400003F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<308.608, 52.335>
            // - Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_15()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_16(), Geometry_17(), Geometry_18(), Geometry_19(), Geometry_20(), Geometry_21() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - Layer aggregator
            // - - - ShapeGroup: Group 1 Offset:<308.608, 52.335>
            // - - Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_16()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(1.55499995F, 5.19500017F));
                    builder.AddLine(new Vector2(-1.55499995F, 5.19500017F));
                    builder.AddCubicBezier(new Vector2(-1.81299996F, 5.19500017F), new Vector2(-2.05599999F, 5.08199978F), new Vector2(-2.2190001F, 4.88700008F));
                    builder.AddCubicBezier(new Vector2(-2.38800001F, 4.68599987F), new Vector2(-2.45700002F, 4.41900015F), new Vector2(-2.41000009F, 4.15199995F));
                    builder.AddLine(new Vector2(-1.84200001F, 0.931999981F));
                    builder.AddCubicBezier(new Vector2(-1.85500002F, 0.91900003F), new Vector2(-1.86899996F, 0.904999971F), new Vector2(-1.88300002F, 0.889999986F));
                    builder.AddCubicBezier(new Vector2(-1.91999996F, 0.851999998F), new Vector2(-1.95799994F, 0.81400001F), new Vector2(-1.99699998F, 0.777999997F));
                    builder.AddCubicBezier(new Vector2(-2.27800012F, 0.518000007F), new Vector2(-3.19700003F, -0.433999985F), new Vector2(-3.19700003F, -1.79400003F));
                    builder.AddCubicBezier(new Vector2(-3.19700003F, -3.66899991F), new Vector2(-1.76300001F, -5.19500017F), new Vector2(0F, -5.19500017F));
                    builder.AddCubicBezier(new Vector2(1.76300001F, -5.19500017F), new Vector2(3.19700003F, -3.66899991F), new Vector2(3.19700003F, -1.79400003F));
                    builder.AddCubicBezier(new Vector2(3.19700003F, -0.432999998F), new Vector2(2.37199998F, 0.449999988F), new Vector2(2.01699996F, 0.765999973F));
                    builder.AddCubicBezier(new Vector2(1.95500004F, 0.82099998F), new Vector2(1.89999998F, 0.871999979F), new Vector2(1.84800005F, 0.925000012F));
                    builder.AddCubicBezier(new Vector2(1.84599996F, 0.926999986F), new Vector2(1.84399998F, 0.930000007F), new Vector2(1.84200001F, 0.931999981F));
                    builder.AddLine(new Vector2(2.41000009F, 4.15199995F));
                    builder.AddCubicBezier(new Vector2(2.45700002F, 4.41900015F), new Vector2(2.38800001F, 4.6869998F), new Vector2(2.2190001F, 4.88700008F));
                    builder.AddCubicBezier(new Vector2(2.05500007F, 5.08199978F), new Vector2(1.81299996F, 5.19500017F), new Vector2(1.55499995F, 5.19500017F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - ShapeGroup: Group 1 Offset:<308.608, 52.335>
            // - - Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_17()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.05200005F, 3.9000001F));
                    builder.AddLine(new Vector2(1.05200005F, 3.9000001F));
                    builder.AddLine(new Vector2(0.552999973F, 1.07200003F));
                    builder.AddCubicBezier(new Vector2(0.474999994F, 0.630999982F), new Vector2(0.578000009F, 0.287F), new Vector2(0.842000008F, 0.0979999974F));
                    builder.AddCubicBezier(new Vector2(0.855000019F, 0.0869999975F), new Vector2(0.883000016F, 0.061999999F), new Vector2(0.925000012F, 0.0199999996F));
                    builder.AddCubicBezier(new Vector2(0.996999979F, -0.0540000014F), new Vector2(1.07299995F, -0.126000002F), new Vector2(1.15699995F, -0.201000005F));
                    builder.AddCubicBezier(new Vector2(1.33200002F, -0.356999993F), new Vector2(1.903F, -0.933000028F), new Vector2(1.903F, -1.79400003F));
                    builder.AddCubicBezier(new Vector2(1.903F, -2.95600009F), new Vector2(1.04999995F, -3.9000001F), new Vector2(0F, -3.9000001F));
                    builder.AddCubicBezier(new Vector2(-1.04900002F, -3.9000001F), new Vector2(-1.903F, -2.95600009F), new Vector2(-1.903F, -1.79400003F));
                    builder.AddCubicBezier(new Vector2(-1.903F, -0.959999979F), new Vector2(-1.30400002F, -0.342999995F), new Vector2(-1.12F, -0.173999995F));
                    builder.AddCubicBezier(new Vector2(-1.06099999F, -0.119999997F), new Vector2(-1.00399995F, -0.061999999F), new Vector2(-0.949000001F, -0.00600000005F));
                    builder.AddCubicBezier(new Vector2(-0.896000028F, 0.0489999987F), new Vector2(-0.859000027F, 0.0829999968F), new Vector2(-0.842999995F, 0.0970000029F));
                    builder.AddCubicBezier(new Vector2(-0.486000001F, 0.34799999F), new Vector2(-0.507000029F, 0.81400001F), new Vector2(-0.552999973F, 1.07200003F));
                    builder.AddLine(new Vector2(-1.05200005F, 3.9000001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - ShapeGroup: Group 1 Offset:<308.608, 52.335>
            // - - Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_18()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-1.57500005F, 1.16499996F));
                    builder.AddCubicBezier(new Vector2(-1.57299995F, 1.16700006F), new Vector2(-1.57200003F, 1.16799998F), new Vector2(-1.57000005F, 1.16900003F));
                    builder.AddCubicBezier(new Vector2(-1.57200003F, 1.16799998F), new Vector2(-1.57299995F, 1.16700006F), new Vector2(-1.57500005F, 1.16499996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - ShapeGroup: Group 1 Offset:<308.608, 52.335>
            // - - Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_19()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(1.58599997F, 1.15799999F));
                    builder.AddCubicBezier(new Vector2(1.58099997F, 1.16100001F), new Vector2(1.57700002F, 1.16299999F), new Vector2(1.57299995F, 1.16600001F));
                    builder.AddCubicBezier(new Vector2(1.57799995F, 1.16299999F), new Vector2(1.58200002F, 1.15999997F), new Vector2(1.58599997F, 1.15799999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - ShapeGroup: Group 1 Offset:<308.608, 52.335>
            // - - Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_20()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0.862999976F, 0.0839999989F));
                    builder.AddCubicBezier(new Vector2(0.861000001F, 0.0860000029F), new Vector2(0.85799998F, 0.0879999995F), new Vector2(0.855000019F, 0.0900000036F));
                    builder.AddCubicBezier(new Vector2(0.856999993F, 0.0879999995F), new Vector2(0.861000001F, 0.0860000029F), new Vector2(0.862999976F, 0.0839999989F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - Layer aggregator
            // - - - ShapeGroup: Group 1 Offset:<308.608, 52.335>
            // - - Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_21()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.862999976F, 0.0839999989F));
                    builder.AddLine(new Vector2(-0.860000014F, 0.0869999975F));
                    builder.AddCubicBezier(new Vector2(-0.861000001F, 0.0860000029F), new Vector2(-0.861999989F, 0.0839999989F), new Vector2(-0.862999976F, 0.0839999989F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - Layer aggregator
            // - -  Offset:<600, 600>
            CanvasGeometry Geometry_22()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.BeginFigure(new Vector2(189.375F, 507.875F));
                    builder.AddCubicBezier(new Vector2(189.375F, 507.875F), new Vector2(203.25F, 506.75F), new Vector2(218.625F, 488.125F));
                    builder.AddCubicBezier(new Vector2(221.25F, 484F), new Vector2(244F, 487F), new Vector2(253.25F, 482.5F));
                    builder.AddCubicBezier(new Vector2(262.5F, 478F), new Vector2(284.5F, 451.5F), new Vector2(289.5F, 447.25F));
                    builder.AddCubicBezier(new Vector2(294.5F, 443F), new Vector2(312F, 433.25F), new Vector2(332.25F, 446F));
                    builder.AddCubicBezier(new Vector2(352.5F, 458.75F), new Vector2(395F, 443.75F), new Vector2(393.5F, 408.5F));
                    builder.AddCubicBezier(new Vector2(392F, 373.25F), new Vector2(332.25F, 367.75F), new Vector2(330.25F, 410F));
                    builder.AddCubicBezier(new Vector2(328.25F, 452.25F), new Vector2(398.64801F, 460.60199F), new Vector2(422F, 425F));
                    builder.AddCubicBezier(new Vector2(437.25F, 401.75F), new Vector2(473F, 388.5F), new Vector2(477F, 383.75F));
                    builder.AddCubicBezier(new Vector2(481F, 379F), new Vector2(494F, 369.5F), new Vector2(499F, 325F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - ShapeGroup: Group 3 Offset:<155.12, 152.58>
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_23()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_24(), Geometry_25() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - PreComp layer: lock
            // - - - - - Layer aggregator
            // - - - ShapeGroup: Group 3 Offset:<155.12, 152.58>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_24()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(17.75F, -152.330002F));
                    builder.AddLine(new Vector2(-17.7399998F, -152.330002F));
                    builder.AddCubicBezier(new Vector2(-93.3499985F, -152.330002F), new Vector2(-154.869995F, -95.6500015F), new Vector2(-154.869995F, -25.9699993F));
                    builder.AddLine(new Vector2(-154.779999F, 69.4599991F));
                    builder.AddCubicBezier(new Vector2(-154.779999F, 70.4899979F), new Vector2(-153.940002F, 71.3300018F), new Vector2(-152.910004F, 71.3300018F));
                    builder.AddLine(new Vector2(-89.7699966F, 71.3300018F));
                    builder.AddCubicBezier(new Vector2(-88.7399979F, 71.3300018F), new Vector2(-87.9000015F, 70.4899979F), new Vector2(-87.9000015F, 69.4599991F));
                    builder.AddLine(new Vector2(-87.9000015F, -25.9699993F));
                    builder.AddCubicBezier(new Vector2(-87.9000015F, -61.5400009F), new Vector2(-56.3899994F, -90.4800034F), new Vector2(-17.6599998F, -90.4800034F));
                    builder.AddLine(new Vector2(17.6599998F, -90.4800034F));
                    builder.AddCubicBezier(new Vector2(56.4000015F, -90.4800034F), new Vector2(87.9100037F, -61.5400009F), new Vector2(87.9100037F, -25.9699993F));
                    builder.AddLine(new Vector2(87.9100037F, 150.460007F));
                    builder.AddCubicBezier(new Vector2(87.9100037F, 151.490005F), new Vector2(88.7399979F, 152.330002F), new Vector2(89.7699966F, 152.330002F));
                    builder.AddLine(new Vector2(152.919998F, 152.330002F));
                    builder.AddCubicBezier(new Vector2(153.949997F, 152.330002F), new Vector2(154.779999F, 151.490005F), new Vector2(154.779999F, 150.460007F));
                    builder.AddLine(new Vector2(154.779999F, -25.3999996F));
                    builder.AddCubicBezier(new Vector2(154.839996F, -25.5799999F), new Vector2(154.869995F, -25.7700005F), new Vector2(154.869995F, -25.9699993F));
                    builder.AddCubicBezier(new Vector2(154.869995F, -95.6500015F), new Vector2(93.3600006F, -152.330002F), new Vector2(17.75F, -152.330002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - PreComp layer: lock
            // - - - - - Layer aggregator
            // - - - ShapeGroup: Group 3 Offset:<155.12, 152.58>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_25()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(151.050003F, -25.9699993F));
                    builder.AddLine(new Vector2(151.050003F, 148.600006F));
                    builder.AddLine(new Vector2(91.6399994F, 148.600006F));
                    builder.AddLine(new Vector2(91.6399994F, -25.9699993F));
                    builder.AddCubicBezier(new Vector2(91.6399994F, -63.5999985F), new Vector2(58.4500008F, -94.2099991F), new Vector2(17.6599998F, -94.2099991F));
                    builder.AddLine(new Vector2(-17.6599998F, -94.2099991F));
                    builder.AddCubicBezier(new Vector2(-58.4500008F, -94.2099991F), new Vector2(-91.6299973F, -63.5999985F), new Vector2(-91.6299973F, -25.9699993F));
                    builder.AddLine(new Vector2(-91.6299973F, 67.5999985F));
                    builder.AddLine(new Vector2(-151.039993F, 67.5999985F));
                    builder.AddCubicBezier(new Vector2(-151.039993F, 67.5999985F), new Vector2(-151.070007F, -26.3600006F), new Vector2(-151.130005F, -26.5400009F));
                    builder.AddCubicBezier(new Vector2(-150.800003F, -93.8899994F), new Vector2(-91.0899963F, -148.600006F), new Vector2(-17.7399998F, -148.600006F));
                    builder.AddLine(new Vector2(17.75F, -148.600006F));
                    builder.AddCubicBezier(new Vector2(91.0899963F, -148.600006F), new Vector2(150.800003F, -93.8899994F), new Vector2(151.139999F, -26.5400009F));
                    builder.AddCubicBezier(new Vector2(151.080002F, -26.3600006F), new Vector2(151.050003F, -26.1700001F), new Vector2(151.050003F, -25.9699993F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - ShapeGroup: Group 2 Offset:<155.125, 152.58>
            CanvasGeometry Geometry_26()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(151.134995F, -26.5400009F));
                    builder.AddCubicBezier(new Vector2(151.074997F, -26.3600006F), new Vector2(151.044998F, -26.1700001F), new Vector2(151.044998F, -25.9699993F));
                    builder.AddLine(new Vector2(151.044998F, 148.600006F));
                    builder.AddLine(new Vector2(91.6350021F, 148.600006F));
                    builder.AddLine(new Vector2(91.6350021F, -25.9699993F));
                    builder.AddCubicBezier(new Vector2(91.6350021F, -63.5999985F), new Vector2(58.4449997F, -94.2099991F), new Vector2(17.6550007F, -94.2099991F));
                    builder.AddLine(new Vector2(-17.6650009F, -94.2099991F));
                    builder.AddCubicBezier(new Vector2(-58.4550018F, -94.2099991F), new Vector2(-91.6350021F, -63.5999985F), new Vector2(-91.6350021F, -25.9699993F));
                    builder.AddLine(new Vector2(-91.6350021F, 67.5999985F));
                    builder.AddLine(new Vector2(-151.044998F, 67.5999985F));
                    builder.AddCubicBezier(new Vector2(-151.044998F, 67.5999985F), new Vector2(-151.074997F, -26.3600006F), new Vector2(-151.134995F, -26.5400009F));
                    builder.AddCubicBezier(new Vector2(-150.804993F, -93.8899994F), new Vector2(-91.0950012F, -148.600006F), new Vector2(-17.7450008F, -148.600006F));
                    builder.AddLine(new Vector2(17.7450008F, -148.600006F));
                    builder.AddCubicBezier(new Vector2(91.0849991F, -148.600006F), new Vector2(150.794998F, -93.8899994F), new Vector2(151.134995F, -26.5400009F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - ShapeGroup: Group 1 Offset:<229.344, 75.241>
            CanvasGeometry Geometry_27()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(65.6520004F, 64.9789963F));
                    builder.AddCubicBezier(new Vector2(65.5979996F, 64.9789963F), new Vector2(65.5429993F, 64.9779968F), new Vector2(65.487999F, 64.9729996F));
                    builder.AddCubicBezier(new Vector2(64.4609985F, 64.8830032F), new Vector2(63.7000008F, 63.9780006F), new Vector2(63.7890015F, 62.9510002F));
                    builder.AddCubicBezier(new Vector2(65.1240005F, 47.618F), new Vector2(63.0149994F, 32.4300003F), new Vector2(57.5200005F, 17.8099995F));
                    builder.AddCubicBezier(new Vector2(52.1980019F, 3.648F), new Vector2(43.9780006F, -9.29500008F), new Vector2(33.0870018F, -20.6590004F));
                    builder.AddCubicBezier(new Vector2(7.79199982F, -47.0499992F), new Vector2(-28.6389999F, -61.2130013F), new Vector2(-66.8560028F, -59.5130005F));
                    builder.AddCubicBezier(new Vector2(-66.8830032F, -59.512001F), new Vector2(-66.9110031F, -59.512001F), new Vector2(-66.939003F, -59.512001F));
                    builder.AddLine(new Vector2(-67.0270004F, -59.512001F));
                    builder.AddCubicBezier(new Vector2(-68.0579987F, -59.512001F), new Vector2(-68.8929977F, -60.3470001F), new Vector2(-68.8929977F, -61.3779984F));
                    builder.AddCubicBezier(new Vector2(-68.8929977F, -62.4090004F), new Vector2(-68.0579987F, -63.2449989F), new Vector2(-67.0270004F, -63.2449989F));
                    builder.AddLine(new Vector2(-66.9800034F, -63.2449989F));
                    builder.AddCubicBezier(new Vector2(-27.7019997F, -64.9789963F), new Vector2(9.75199986F, -50.3979988F), new Vector2(35.7809982F, -23.2409992F));
                    builder.AddCubicBezier(new Vector2(47.0239983F, -11.5109997F), new Vector2(55.5139999F, 1.85899997F), new Vector2(61.0149994F, 16.4960003F));
                    builder.AddCubicBezier(new Vector2(66.7070007F, 31.6429996F), new Vector2(68.8919983F, 47.3810005F), new Vector2(67.5090027F, 63.2750015F));
                    builder.AddCubicBezier(new Vector2(67.4240036F, 64.2470016F), new Vector2(66.6100006F, 64.9789963F), new Vector2(65.6520004F, 64.9789963F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            CanvasGeometry Geometry_28()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(235.921005F, 147.190002F));
                    builder.AddCubicBezier(new Vector2(235.921005F, 170.957993F), new Vector2(215.139008F, 190.223999F), new Vector2(189.503998F, 190.223999F));
                    builder.AddLine(new Vector2(-189.505997F, 190.223999F));
                    builder.AddCubicBezier(new Vector2(-215.141006F, 190.223999F), new Vector2(-235.921005F, 170.957993F), new Vector2(-235.921005F, 147.190002F));
                    builder.AddLine(new Vector2(-235.921005F, -147.190994F));
                    builder.AddCubicBezier(new Vector2(-235.921005F, -170.957001F), new Vector2(-215.141006F, -190.223999F), new Vector2(-189.505997F, -190.223999F));
                    builder.AddLine(new Vector2(189.503998F, -190.223999F));
                    builder.AddCubicBezier(new Vector2(215.139008F, -190.223999F), new Vector2(235.921005F, -170.957001F), new Vector2(235.921005F, -147.190994F));
                    builder.AddLine(new Vector2(235.921005F, 147.190002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_29()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_30(), Geometry_31() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - -  Offset:<368.62503, 449.718>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_30()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(189.503006F, 192.089996F));
                    builder.AddLine(new Vector2(-189.505997F, 192.089996F));
                    builder.AddCubicBezier(new Vector2(-216.128006F, 192.089996F), new Vector2(-237.787003F, 171.947006F), new Vector2(-237.787003F, 147.188995F));
                    builder.AddLine(new Vector2(-237.787003F, -147.192001F));
                    builder.AddCubicBezier(new Vector2(-237.787003F, -171.949997F), new Vector2(-216.128006F, -192.089996F), new Vector2(-189.505997F, -192.089996F));
                    builder.AddLine(new Vector2(189.503006F, -192.089996F));
                    builder.AddCubicBezier(new Vector2(216.126999F, -192.089996F), new Vector2(237.787003F, -171.949997F), new Vector2(237.787003F, -147.192001F));
                    builder.AddLine(new Vector2(237.787003F, 147.188995F));
                    builder.AddCubicBezier(new Vector2(237.787003F, 171.947006F), new Vector2(216.126999F, 192.089996F), new Vector2(189.503006F, 192.089996F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - -  Offset:<368.62503, 449.718>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_31()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-189.505997F, -188.358002F));
                    builder.AddCubicBezier(new Vector2(-214.070007F, -188.358002F), new Vector2(-234.054001F, -169.891006F), new Vector2(-234.054001F, -147.192001F));
                    builder.AddLine(new Vector2(-234.054001F, 147.188995F));
                    builder.AddCubicBezier(new Vector2(-234.054001F, 169.889008F), new Vector2(-214.070007F, 188.356003F), new Vector2(-189.505997F, 188.356003F));
                    builder.AddLine(new Vector2(189.503006F, 188.356003F));
                    builder.AddCubicBezier(new Vector2(214.067993F, 188.356003F), new Vector2(234.054993F, 169.889008F), new Vector2(234.054993F, 147.188995F));
                    builder.AddLine(new Vector2(234.054993F, -147.192001F));
                    builder.AddCubicBezier(new Vector2(234.054993F, -169.891006F), new Vector2(214.067993F, -188.358002F), new Vector2(189.503006F, -188.358002F));
                    builder.AddLine(new Vector2(-189.505997F, -188.358002F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            CanvasGeometry Geometry_32()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-29.6779995F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(-29.6779995F, -8.11400032F), new Vector2(-20.8859997F, 0.985000014F), new Vector2(-18.1380005F, 3.51699996F));
                    builder.AddCubicBezier(new Vector2(-17.5709991F, 4.03999996F), new Vector2(-17.0179996F, 4.579F), new Vector2(-16.4820004F, 5.13800001F));
                    builder.AddCubicBezier(new Vector2(-15.5310001F, 6.12900019F), new Vector2(-14.6070004F, 6.99499989F), new Vector2(-14.2080002F, 7.25299978F));
                    builder.AddCubicBezier(new Vector2(-13.6920004F, 7.58500004F), new Vector2(-13.5319996F, 9.34899998F), new Vector2(-13.8540001F, 11.1680002F));
                    builder.AddLine(new Vector2(-20.6350002F, 49.6110001F));
                    builder.AddCubicBezier(new Vector2(-20.9559994F, 51.4339981F), new Vector2(-19.8129997F, 52.9210014F), new Vector2(-18.0960007F, 52.9210014F));
                    builder.AddLine(new Vector2(18.0919991F, 52.9210014F));
                    builder.AddCubicBezier(new Vector2(19.8110008F, 52.9210014F), new Vector2(20.9519997F, 51.4339981F), new Vector2(20.6329994F, 49.6110001F));
                    builder.AddLine(new Vector2(13.8520002F, 11.1680002F));
                    builder.AddCubicBezier(new Vector2(13.5310001F, 9.34899998F), new Vector2(13.6899996F, 7.58500004F), new Vector2(14.2080002F, 7.25299978F));
                    builder.AddCubicBezier(new Vector2(14.5570002F, 7.02699995F), new Vector2(15.3109999F, 6.33199978F), new Vector2(16.132F, 5.49599981F));
                    builder.AddCubicBezier(new Vector2(16.8859997F, 4.72900009F), new Vector2(17.6650009F, 3.9920001F), new Vector2(18.4650002F, 3.27999997F));
                    builder.AddCubicBezier(new Vector2(21.5230007F, 0.558000028F), new Vector2(29.6779995F, -7.91400003F), new Vector2(29.6779995F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(29.6779995F, -38.5449982F), new Vector2(16.3640003F, -52.9210014F), new Vector2(-0.00100000005F, -52.9210014F));
                    builder.AddCubicBezier(new Vector2(-16.368F, -52.9210014F), new Vector2(-29.6779995F, -38.5449982F), new Vector2(-29.6779995F, -20.8729992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            // - Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_33()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_34(), Geometry_35(), Geometry_36(), Geometry_37() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - -  Offset:<368.62503, 449.718>
            // - - Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_34()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(18.0919991F, 54.7879982F));
                    builder.AddLine(new Vector2(-18.0949993F, 54.7879982F));
                    builder.AddCubicBezier(new Vector2(-19.4440002F, 54.7879982F), new Vector2(-20.6499996F, 54.2369995F), new Vector2(-21.4909992F, 53.2350006F));
                    builder.AddCubicBezier(new Vector2(-22.3719997F, 52.1850014F), new Vector2(-22.7299995F, 50.7459984F), new Vector2(-22.4729996F, 49.2869987F));
                    builder.AddLine(new Vector2(-15.6920004F, 10.8439999F));
                    builder.AddCubicBezier(new Vector2(-15.507F, 9.80099964F), new Vector2(-15.5380001F, 8.93900013F), new Vector2(-15.6099997F, 8.53499985F));
                    builder.AddCubicBezier(new Vector2(-16.3659992F, 7.93100023F), new Vector2(-17.3780003F, 6.9000001F), new Vector2(-17.8290005F, 6.43100023F));
                    builder.AddCubicBezier(new Vector2(-18.3239994F, 5.91400003F), new Vector2(-18.8530006F, 5.39599991F), new Vector2(-19.4020004F, 4.88999987F));
                    builder.AddCubicBezier(new Vector2(-22.2509995F, 2.2650001F), new Vector2(-31.5450001F, -7.3499999F), new Vector2(-31.5450001F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(-31.5450001F, -39.5740013F), new Vector2(-17.3950005F, -54.7879982F), new Vector2(-0.00100000005F, -54.7879982F));
                    builder.AddCubicBezier(new Vector2(17.3929996F, -54.7879982F), new Vector2(31.5459995F, -39.5740013F), new Vector2(31.5459995F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(31.5459995F, -7.32399988F), new Vector2(23.2660007F, 1.50699997F), new Vector2(19.7070007F, 4.67500019F));
                    builder.AddCubicBezier(new Vector2(18.9090004F, 5.38399982F), new Vector2(18.1529999F, 6.10099983F), new Vector2(17.4629993F, 6.8039999F));
                    builder.AddCubicBezier(new Vector2(16.9039993F, 7.37300014F), new Vector2(16.1790009F, 8.08199978F), new Vector2(15.6099997F, 8.5369997F));
                    builder.AddCubicBezier(new Vector2(15.5380001F, 8.93999958F), new Vector2(15.507F, 9.80099964F), new Vector2(15.691F, 10.8430004F));
                    builder.AddLine(new Vector2(22.4720001F, 49.2869987F));
                    builder.AddCubicBezier(new Vector2(22.7280006F, 50.7480011F), new Vector2(22.368F, 52.1870003F), new Vector2(21.4860001F, 53.2369995F));
                    builder.AddCubicBezier(new Vector2(20.6459999F, 54.2369995F), new Vector2(19.441F, 54.7879982F), new Vector2(18.0919991F, 54.7879982F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - -  Offset:<368.62503, 449.718>
            // - - Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_35()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.00100000005F, -51.0550003F));
                    builder.AddCubicBezier(new Vector2(-15.3369999F, -51.0550003F), new Vector2(-27.8129997F, -37.5149994F), new Vector2(-27.8129997F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(-27.8129997F, -8.86900043F), new Vector2(-19.4400005F, -0.219999999F), new Vector2(-16.8729992F, 2.14499998F));
                    builder.AddCubicBezier(new Vector2(-16.2679996F, 2.7019999F), new Vector2(-15.6820002F, 3.2750001F), new Vector2(-15.1339998F, 3.84599996F));
                    builder.AddCubicBezier(new Vector2(-14.0410004F, 4.98400021F), new Vector2(-13.3520002F, 5.579F), new Vector2(-13.1890001F, 5.68900013F));
                    builder.AddCubicBezier(new Vector2(-11.3549995F, 6.86800003F), new Vector2(-11.8269997F, 10.4309998F), new Vector2(-12.0159998F, 11.4940004F));
                    builder.AddLine(new Vector2(-18.7959995F, 49.9350014F));
                    builder.AddCubicBezier(new Vector2(-18.8610001F, 50.3040009F), new Vector2(-18.8010006F, 50.632F), new Vector2(-18.6310005F, 50.8349991F));
                    builder.AddCubicBezier(new Vector2(-18.507F, 50.9830017F), new Vector2(-18.3320007F, 51.0550003F), new Vector2(-18.0949993F, 51.0550003F));
                    builder.AddLine(new Vector2(18.0919991F, 51.0550003F));
                    builder.AddCubicBezier(new Vector2(18.3290005F, 51.0550003F), new Vector2(18.5049992F, 50.9830017F), new Vector2(18.6289997F, 50.8349991F));
                    builder.AddCubicBezier(new Vector2(18.7989998F, 50.632F), new Vector2(18.8600006F, 50.3030014F), new Vector2(18.7950001F, 49.9329987F));
                    builder.AddLine(new Vector2(12.0139999F, 11.4919996F));
                    builder.AddCubicBezier(new Vector2(11.8260002F, 10.4280005F), new Vector2(11.3559999F, 6.86399984F), new Vector2(13.2019997F, 5.68200016F));
                    builder.AddCubicBezier(new Vector2(13.3459997F, 5.58400011F), new Vector2(13.9200001F, 5.08300018F), new Vector2(14.7989998F, 4.1880002F));
                    builder.AddCubicBezier(new Vector2(15.5480003F, 3.42600012F), new Vector2(16.3649998F, 2.65100002F), new Vector2(17.2250004F, 1.88499999F));
                    builder.AddCubicBezier(new Vector2(20.4080009F, -0.947000027F), new Vector2(27.8110008F, -8.83600044F), new Vector2(27.8110008F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(27.8110008F, -37.5149994F), new Vector2(15.335F, -51.0550003F), new Vector2(-0.00100000005F, -51.0550003F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - -  Offset:<368.62503, 449.718>
            // - - Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_36()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-15.2360001F, 8.81099987F));
                    builder.AddCubicBezier(new Vector2(-15.2299995F, 8.81499958F), new Vector2(-15.2229996F, 8.81999969F), new Vector2(-15.217F, 8.82400036F));
                    builder.AddCubicBezier(new Vector2(-15.2229996F, 8.81999969F), new Vector2(-15.2299995F, 8.81499958F), new Vector2(-15.2360001F, 8.81099987F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - -  Offset:<368.62503, 449.718>
            // - - Path 4+Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_37()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(15.2480001F, 8.8039999F));
                    builder.AddCubicBezier(new Vector2(15.2399998F, 8.80900002F), new Vector2(15.2309999F, 8.81400013F), new Vector2(15.2229996F, 8.81999969F));
                    builder.AddCubicBezier(new Vector2(15.2309999F, 8.81400013F), new Vector2(15.2399998F, 8.80900002F), new Vector2(15.2480001F, 8.8039999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            CanvasGeometry Geometry_38()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(18.0919991F, 54.9070015F));
                    builder.AddLine(new Vector2(-18.0949993F, 54.9070015F));
                    builder.AddCubicBezier(new Vector2(-19.4599991F, 54.9070015F), new Vector2(-20.7310009F, 54.3250008F), new Vector2(-21.5820007F, 53.3120003F));
                    builder.AddCubicBezier(new Vector2(-22.4860001F, 52.2340012F), new Vector2(-22.8530006F, 50.7599983F), new Vector2(-22.5900002F, 49.2659988F));
                    builder.AddLine(new Vector2(-15.8109999F, 10.823F));
                    builder.AddCubicBezier(new Vector2(-15.6350002F, 9.83300018F), new Vector2(-15.6560001F, 9.00500011F), new Vector2(-15.7200003F, 8.59899998F));
                    builder.AddCubicBezier(new Vector2(-16.4799995F, 7.98500013F), new Vector2(-17.4699993F, 6.97700024F), new Vector2(-17.9150009F, 6.51300001F));
                    builder.AddCubicBezier(new Vector2(-18.4069996F, 6F), new Vector2(-18.934F, 5.48400021F), new Vector2(-19.4829998F, 4.97700024F));
                    builder.AddCubicBezier(new Vector2(-22.3409996F, 2.3440001F), new Vector2(-31.6650009F, -7.30100012F), new Vector2(-31.6650009F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(-31.6650009F, -39.6399994F), new Vector2(-17.4599991F, -54.9070015F), new Vector2(-0.00100000005F, -54.9070015F));
                    builder.AddCubicBezier(new Vector2(17.4599991F, -54.9070015F), new Vector2(31.6650009F, -39.6399994F), new Vector2(31.6650009F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(31.6650009F, -7.27600002F), new Vector2(23.3560009F, 1.58500004F), new Vector2(19.7849998F, 4.76300001F));
                    builder.AddCubicBezier(new Vector2(18.9890003F, 5.47100019F), new Vector2(18.2380009F, 6.18599987F), new Vector2(17.5480003F, 6.88700008F));
                    builder.AddCubicBezier(new Vector2(16.9990005F, 7.44700003F), new Vector2(16.2900009F, 8.14000034F), new Vector2(15.7200003F, 8.60099983F));
                    builder.AddCubicBezier(new Vector2(15.6560001F, 9.00699997F), new Vector2(15.632F, 9.83399963F), new Vector2(15.8070002F, 10.823F));
                    builder.AddLine(new Vector2(22.5879993F, 49.2659988F));
                    builder.AddCubicBezier(new Vector2(22.8500004F, 50.762001F), new Vector2(22.4829998F, 52.2369995F), new Vector2(21.5790005F, 53.3129997F));
                    builder.AddCubicBezier(new Vector2(20.7150002F, 54.3409996F), new Vector2(19.4769993F, 54.9070015F), new Vector2(18.0919991F, 54.9070015F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_39()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_40(), Geometry_41() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - -  Offset:<368.62503, 449.718>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_40()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(18.0919991F, 56.7729988F));
                    builder.AddLine(new Vector2(-18.0960007F, 56.7729988F));
                    builder.AddCubicBezier(new Vector2(-20.0139999F, 56.7729988F), new Vector2(-21.8059998F, 55.9490013F), new Vector2(-23.0119991F, 54.5110016F));
                    builder.AddCubicBezier(new Vector2(-24.2719994F, 53.0110016F), new Vector2(-24.7880001F, 50.980999F), new Vector2(-24.4290009F, 48.9420013F));
                    builder.AddLine(new Vector2(-17.6480007F, 10.4980001F));
                    builder.AddCubicBezier(new Vector2(-17.5790005F, 10.1070004F), new Vector2(-17.5499992F, 9.76399994F), new Vector2(-17.5429993F, 9.49199963F));
                    builder.AddCubicBezier(new Vector2(-18.1970005F, 8.89799976F), new Vector2(-18.8640003F, 8.21899986F), new Vector2(-19.2609997F, 7.80499983F));
                    builder.AddCubicBezier(new Vector2(-19.7259998F, 7.3210001F), new Vector2(-20.2259998F, 6.83199978F), new Vector2(-20.7490005F, 6.35099983F));
                    builder.AddCubicBezier(new Vector2(-23.7469997F, 3.58800006F), new Vector2(-33.5309982F, -6.53999996F), new Vector2(-33.5309982F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(-33.5309982F, -40.6679993F), new Vector2(-18.4899998F, -56.7729988F), new Vector2(-0.00100000005F, -56.7729988F));
                    builder.AddCubicBezier(new Vector2(18.4890003F, -56.7729988F), new Vector2(33.5309982F, -40.6679993F), new Vector2(33.5309982F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(33.5309982F, -6.51900005F), new Vector2(24.7859993F, 2.81299996F), new Vector2(21.0259991F, 6.15799999F));
                    builder.AddCubicBezier(new Vector2(20.2609997F, 6.84000015F), new Vector2(19.5389996F, 7.52400017F), new Vector2(18.8799992F, 8.19499969F));
                    builder.AddCubicBezier(new Vector2(18.3829994F, 8.70100021F), new Vector2(17.9349995F, 9.13599968F), new Vector2(17.5410004F, 9.49400043F));
                    builder.AddCubicBezier(new Vector2(17.5489998F, 9.76500034F), new Vector2(17.5769997F, 10.1079998F), new Vector2(17.6459999F, 10.4980001F));
                    builder.AddLine(new Vector2(24.427F, 48.9410019F));
                    builder.AddCubicBezier(new Vector2(24.7840004F, 50.9840012F), new Vector2(24.2670002F, 53.0139999F), new Vector2(23.007F, 54.5130005F));
                    builder.AddCubicBezier(new Vector2(21.7830009F, 55.9710007F), new Vector2(20.0370007F, 56.7729988F), new Vector2(18.0919991F, 56.7729988F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: lock
            // - - - - Layer aggregator
            // - - -  Offset:<368.62503, 449.718>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_41()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-0.00100000005F, -53.0410004F));
                    builder.AddCubicBezier(new Vector2(-16.4309998F, -53.0410004F), new Vector2(-29.7980003F, -38.6100006F), new Vector2(-29.7980003F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(-29.7980003F, -8.05900002F), new Vector2(-20.9349995F, 1.10099995F), new Vector2(-18.2189999F, 3.60400009F));
                    builder.AddCubicBezier(new Vector2(-17.6399994F, 4.13800001F), new Vector2(-17.0839996F, 4.68200016F), new Vector2(-16.5669994F, 5.22100019F));
                    builder.AddCubicBezier(new Vector2(-16.1889992F, 5.61499977F), new Vector2(-15.2349997F, 6.59200001F), new Vector2(-14.5469999F, 7.14799976F));
                    builder.AddCubicBezier(new Vector2(-14.1879997F, 7.43900013F), new Vector2(-13.9490004F, 7.85099983F), new Vector2(-13.8769999F, 8.30799961F));
                    builder.AddCubicBezier(new Vector2(-13.7559996F, 9.07199955F), new Vector2(-13.7919998F, 10.1339998F), new Vector2(-13.9720001F, 11.1490002F));
                    builder.AddLine(new Vector2(-20.7530003F, 49.5900002F));
                    builder.AddCubicBezier(new Vector2(-20.9200001F, 50.5390015F), new Vector2(-20.7010002F, 51.4580002F), new Vector2(-20.1529999F, 52.1110001F));
                    builder.AddCubicBezier(new Vector2(-19.6569996F, 52.7010002F), new Vector2(-18.9069996F, 53.0400009F), new Vector2(-18.0960007F, 53.0400009F));
                    builder.AddLine(new Vector2(18.0919991F, 53.0400009F));
                    builder.AddCubicBezier(new Vector2(18.927F, 53.0400009F), new Vector2(19.6389999F, 52.7190018F), new Vector2(20.1490002F, 52.1119995F));
                    builder.AddCubicBezier(new Vector2(20.6970005F, 51.4589996F), new Vector2(20.9160004F, 50.5390015F), new Vector2(20.75F, 49.5870018F));
                    builder.AddLine(new Vector2(13.9689999F, 11.1479998F));
                    builder.AddCubicBezier(new Vector2(13.7910004F, 10.1339998F), new Vector2(13.7559996F, 9.07400036F), new Vector2(13.875F, 8.31200027F));
                    builder.AddCubicBezier(new Vector2(13.9469995F, 7.85500002F), new Vector2(14.1859999F, 7.43900013F), new Vector2(14.5459995F, 7.14900017F));
                    builder.AddCubicBezier(new Vector2(14.9540005F, 6.81899977F), new Vector2(15.5310001F, 6.27699995F), new Vector2(16.2159996F, 5.57999992F));
                    builder.AddCubicBezier(new Vector2(16.9330006F, 4.8499999F), new Vector2(17.7169991F, 4.10599995F), new Vector2(18.5450001F, 3.36899996F));
                    builder.AddCubicBezier(new Vector2(21.9279995F, 0.35800001F), new Vector2(29.7970009F, -8.03100014F), new Vector2(29.7970009F, -20.8729992F));
                    builder.AddCubicBezier(new Vector2(29.7970009F, -38.6100006F), new Vector2(16.4300003F, -53.0410004F), new Vector2(-0.00100000005F, -53.0410004F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            CanvasGeometry Geometry_42()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(232.895004F, 240.876007F));
                    builder.AddLine(new Vector2(253.195999F, 240.876007F));
                    builder.EndFigure(CanvasFigureLoop.Open);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            CanvasGeometry Geometry_43()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(10.1499996F, 1.86600006F));
                    builder.AddLine(new Vector2(-10.151F, 1.86600006F));
                    builder.AddCubicBezier(new Vector2(-11.1820002F, 1.86600006F), new Vector2(-12.0170002F, 1.03100002F), new Vector2(-12.0170002F, 0F));
                    builder.AddCubicBezier(new Vector2(-12.0170002F, -1.03100002F), new Vector2(-11.1820002F, -1.86600006F), new Vector2(-10.151F, -1.86600006F));
                    builder.AddLine(new Vector2(10.1499996F, -1.86600006F));
                    builder.AddCubicBezier(new Vector2(11.1809998F, -1.86600006F), new Vector2(12.0170002F, -1.03100002F), new Vector2(12.0170002F, 0F));
                    builder.AddCubicBezier(new Vector2(12.0170002F, 1.03100002F), new Vector2(11.1809998F, 1.86600006F), new Vector2(10.1499996F, 1.86600006F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            CanvasGeometry Geometry_44()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(15.7150002F, -15.0299997F));
                    builder.AddCubicBezier(new Vector2(15.7150002F, -14F), new Vector2(14.875F, -13.1599998F), new Vector2(13.8450003F, -13.1599998F));
                    builder.AddCubicBezier(new Vector2(13.2449999F, -13.1599998F), new Vector2(12.6450005F, -13.1400003F), new Vector2(12.0450001F, -13.0799999F));
                    builder.AddCubicBezier(new Vector2(-0.714999974F, -12.1300001F), new Vector2(-10.9549999F, -1F), new Vector2(-11.8950005F, 12.9200001F));
                    builder.AddCubicBezier(new Vector2(-11.9549999F, 13.6199999F), new Vector2(-11.9750004F, 14.3199997F), new Vector2(-11.9750004F, 15.0299997F));
                    builder.AddCubicBezier(new Vector2(-11.9750004F, 16.0599995F), new Vector2(-12.8149996F, 16.8999996F), new Vector2(-13.8450003F, 16.8999996F));
                    builder.AddCubicBezier(new Vector2(-14.875F, 16.8999996F), new Vector2(-15.7150002F, 16.0599995F), new Vector2(-15.7150002F, 15.0299997F));
                    builder.AddCubicBezier(new Vector2(-15.7150002F, -2.56999993F), new Vector2(-2.45499992F, -16.8999996F), new Vector2(13.8450003F, -16.8999996F));
                    builder.AddCubicBezier(new Vector2(14.875F, -16.8999996F), new Vector2(15.7150002F, -16.0599995F), new Vector2(15.7150002F, -15.0299997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            CanvasGeometry Geometry_45()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(0F, 107.723999F));
                    builder.AddCubicBezier(new Vector2(-1.03100002F, 107.723999F), new Vector2(-1.86699998F, 106.888F), new Vector2(-1.86699998F, 105.857002F));
                    builder.AddLine(new Vector2(-1.86699998F, -105.857002F));
                    builder.AddCubicBezier(new Vector2(-1.86699998F, -106.888F), new Vector2(-1.03100002F, -107.723999F), new Vector2(0F, -107.723999F));
                    builder.AddCubicBezier(new Vector2(1.03100002F, -107.723999F), new Vector2(1.86699998F, -106.888F), new Vector2(1.86699998F, -105.857002F));
                    builder.AddLine(new Vector2(1.86699998F, 105.857002F));
                    builder.AddCubicBezier(new Vector2(1.86699998F, 106.888F), new Vector2(1.03100002F, 107.723999F), new Vector2(0F, 107.723999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: lock
            // - - - Layer aggregator
            // - -  Offset:<368.62503, 449.718>
            CanvasGeometry Geometry_46()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-53.4080009F, 60.4410019F));
                    builder.AddCubicBezier(new Vector2(-54.4389992F, 60.4410019F), new Vector2(-55.2750015F, 59.6049995F), new Vector2(-55.2750015F, 58.5740013F));
                    builder.AddLine(new Vector2(-55.2750015F, -15.5419998F));
                    builder.AddCubicBezier(new Vector2(-55.2750015F, -40.2989998F), new Vector2(-33.6160011F, -60.4410019F), new Vector2(-6.99399996F, -60.4410019F));
                    builder.AddLine(new Vector2(53.4080009F, -60.4410019F));
                    builder.AddCubicBezier(new Vector2(54.4389992F, -60.4410019F), new Vector2(55.2750015F, -59.6049995F), new Vector2(55.2750015F, -58.5740013F));
                    builder.AddCubicBezier(new Vector2(55.2750015F, -57.5429993F), new Vector2(54.4389992F, -56.7070007F), new Vector2(53.4080009F, -56.7070007F));
                    builder.AddLine(new Vector2(-6.99399996F, -56.7070007F));
                    builder.AddCubicBezier(new Vector2(-31.5569992F, -56.7070007F), new Vector2(-51.5419998F, -38.2410011F), new Vector2(-51.5419998F, -15.5419998F));
                    builder.AddLine(new Vector2(-51.5419998F, 58.5740013F));
                    builder.AddCubicBezier(new Vector2(-51.5419998F, 59.6049995F), new Vector2(-52.3769989F, 60.4410019F), new Vector2(-53.4080009F, 60.4410019F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: pin
            // - - - Layer aggregator
            // - -  Offset:<386.154, 648.788>
            CanvasGeometry Geometry_47()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(246.444F, 24.934F));
                    builder.AddLine(new Vector2(-212.048004F, 128.031006F));
                    builder.AddCubicBezier(new Vector2(-254.289001F, 137.529007F), new Vector2(-296.230988F, 110.987F), new Vector2(-305.729004F, 68.7470016F));
                    builder.AddCubicBezier(new Vector2(-315.22699F, 26.507F), new Vector2(-288.68399F, -15.4350004F), new Vector2(-246.442993F, -24.934F));
                    builder.AddLine(new Vector2(212.046997F, -128.031006F));
                    builder.AddCubicBezier(new Vector2(254.287003F, -137.529007F), new Vector2(296.229004F, -110.987F), new Vector2(305.72699F, -68.7470016F));
                    builder.AddLine(new Vector2(305.72699F, -68.7460022F));
                    builder.AddCubicBezier(new Vector2(315.226013F, -26.5060005F), new Vector2(288.68399F, 15.4359999F), new Vector2(246.444F, 24.934F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: pin
            // - - - Layer aggregator
            // - -  Offset:<386.154, 648.788>
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_48()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_49(), Geometry_50() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - -  Offset:<386.154, 648.788>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_49()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-229.403F, 133.195999F));
                    builder.AddCubicBezier(new Vector2(-244.421997F, 133.195999F), new Vector2(-259.162994F, 128.955002F), new Vector2(-272.164001F, 120.727997F));
                    builder.AddCubicBezier(new Vector2(-290.278992F, 109.263F), new Vector2(-302.846008F, 91.4309998F), new Vector2(-307.549011F, 70.5159988F));
                    builder.AddCubicBezier(new Vector2(-312.252014F, 49.5999985F), new Vector2(-308.529999F, 28.1049995F), new Vector2(-297.06601F, 9.98900032F));
                    builder.AddCubicBezier(new Vector2(-285.60199F, -8.1260004F), new Vector2(-267.769989F, -20.6930008F), new Vector2(-246.854004F, -25.3959999F));
                    builder.AddLine(new Vector2(211.638F, -128.492996F));
                    builder.AddCubicBezier(new Vector2(232.552994F, -133.195999F), new Vector2(254.048004F, -129.473007F), new Vector2(272.164001F, -118.009003F));
                    builder.AddCubicBezier(new Vector2(290.278992F, -106.544998F), new Vector2(302.846008F, -88.711998F), new Vector2(307.549011F, -67.7969971F));
                    builder.AddCubicBezier(new Vector2(312.252991F, -46.8810005F), new Vector2(308.528992F, -25.3859997F), new Vector2(297.065002F, -7.27099991F));
                    builder.AddCubicBezier(new Vector2(285.601013F, 10.8439999F), new Vector2(267.768005F, 23.4109993F), new Vector2(246.852005F, 28.1140003F));
                    builder.AddLine(new Vector2(246.442993F, 26.2929993F));
                    builder.AddLine(new Vector2(246.852005F, 28.1140003F));
                    builder.AddLine(new Vector2(-211.639008F, 131.212006F));
                    builder.AddCubicBezier(new Vector2(-217.542999F, 132.539001F), new Vector2(-223.494995F, 133.195999F), new Vector2(-229.403F, 133.195999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - -  Offset:<386.154, 648.788>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_50()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(229.393997F, -126.741997F));
                    builder.AddCubicBezier(new Vector2(223.759995F, -126.741997F), new Vector2(218.087006F, -126.116997F), new Vector2(212.457001F, -124.850998F));
                    builder.AddLine(new Vector2(-246.035004F, -21.7530003F));
                    builder.AddCubicBezier(new Vector2(-265.977997F, -17.2689991F), new Vector2(-282.980988F, -5.28700018F), new Vector2(-293.911011F, 11.9860001F));
                    builder.AddCubicBezier(new Vector2(-304.84201F, 29.2579994F), new Vector2(-308.391998F, 49.7540016F), new Vector2(-303.90799F, 69.6959991F));
                    builder.AddCubicBezier(new Vector2(-299.423004F, 89.6389999F), new Vector2(-287.44101F, 106.641998F), new Vector2(-270.169006F, 117.572998F));
                    builder.AddCubicBezier(new Vector2(-252.895996F, 128.503998F), new Vector2(-232.401001F, 132.054001F), new Vector2(-212.457993F, 127.569F));
                    builder.AddLine(new Vector2(246.033997F, 24.4720001F));
                    builder.AddCubicBezier(new Vector2(265.976013F, 19.9880009F), new Vector2(282.979004F, 8.00599957F), new Vector2(293.910004F, -9.2670002F));
                    builder.AddCubicBezier(new Vector2(304.839996F, -26.5400009F), new Vector2(308.390991F, -47.0349998F), new Vector2(303.906006F, -66.9779968F));
                    builder.AddCubicBezier(new Vector2(299.421997F, -86.9209976F), new Vector2(287.440002F, -103.922997F), new Vector2(270.166992F, -114.853996F));
                    builder.AddCubicBezier(new Vector2(257.772003F, -122.698997F), new Vector2(243.714005F, -126.741997F), new Vector2(229.393997F, -126.741997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: pin
            // - - - Layer aggregator
            // - -  Offset:<386.154, 648.788>
            CanvasGeometry Geometry_51()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-170.438995F, 79.4240036F));
                    builder.AddCubicBezier(new Vector2(-171.294006F, 79.4240036F), new Vector2(-172.065002F, 78.8330002F), new Vector2(-172.259003F, 77.9629974F));
                    builder.AddCubicBezier(new Vector2(-172.483994F, 76.9570007F), new Vector2(-171.848999F, 75.9589996F), new Vector2(-170.843002F, 75.7350006F));
                    builder.AddLine(new Vector2(103.705002F, 14.533F));
                    builder.AddCubicBezier(new Vector2(129.839005F, 8.74199963F), new Vector2(148.852005F, -3.51900005F), new Vector2(158.690994F, -20.9260006F));
                    builder.AddCubicBezier(new Vector2(167.582993F, -36.6570015F), new Vector2(168.598007F, -55.9539986F), new Vector2(161.626007F, -76.7320023F));
                    builder.AddCubicBezier(new Vector2(161.298004F, -77.7089996F), new Vector2(161.824997F, -78.7679977F), new Vector2(162.802002F, -79.0960007F));
                    builder.AddCubicBezier(new Vector2(163.779007F, -79.4240036F), new Vector2(164.837006F, -78.8970032F), new Vector2(165.164993F, -77.9199982F));
                    builder.AddCubicBezier(new Vector2(172.483994F, -56.1110001F), new Vector2(171.369003F, -35.7669983F), new Vector2(161.940994F, -19.0890007F));
                    builder.AddCubicBezier(new Vector2(151.565994F, -0.735000014F), new Vector2(131.709F, 12.151F), new Vector2(104.514999F, 18.177F));
                    builder.AddLine(new Vector2(-170.031006F, 79.3789978F));
                    builder.AddCubicBezier(new Vector2(-170.167999F, 79.4089966F), new Vector2(-170.304001F, 79.4240036F), new Vector2(-170.438995F, 79.4240036F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - - Layer: pin 1 Outlines
            // - -  Offset:<512.136, 778.472>
            CanvasGeometry Geometry_52()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-12.4980001F, 25.1299992F));
                    builder.AddCubicBezier(new Vector2(-14.4809999F, 27.9260006F), new Vector2(-17.132F, 29.698F), new Vector2(-20.4449997F, 30.4430008F));
                    builder.AddCubicBezier(new Vector2(-23.0979996F, 31.0400009F), new Vector2(-25.6200008F, 30.4759998F), new Vector2(-28.0079994F, 28.7490005F));
                    builder.AddCubicBezier(new Vector2(-30.3990002F, 27.0259991F), new Vector2(-31.8910007F, 24.8349991F), new Vector2(-32.4869995F, 22.1819992F));
                    builder.AddCubicBezier(new Vector2(-33.0089989F, 19.8630009F), new Vector2(-32.3919983F, 17.1989994F), new Vector2(-30.6280003F, 14.1899996F));
                    builder.AddCubicBezier(new Vector2(-28.868F, 11.1829996F), new Vector2(-24.0020008F, 7.65299988F), new Vector2(-16.0340004F, 3.59599996F));
                    builder.AddCubicBezier(new Vector2(-24.8449993F, 3.14100003F), new Vector2(-30.7210007F, 1.98099995F), new Vector2(-33.6619987F, 0.116999999F));
                    builder.AddCubicBezier(new Vector2(-36.605999F, -1.74300003F), new Vector2(-38.3380013F, -3.83599997F), new Vector2(-38.8600006F, -6.15799999F));
                    builder.AddCubicBezier(new Vector2(-39.4560013F, -8.80799961F), new Vector2(-39.0449982F, -11.4250002F), new Vector2(-37.6220016F, -14.0100002F));
                    builder.AddCubicBezier(new Vector2(-36.2029991F, -16.5900002F), new Vector2(-34.1660004F, -18.1819992F), new Vector2(-31.5130005F, -18.7789993F));
                    builder.AddCubicBezier(new Vector2(-28.2000008F, -19.5240002F), new Vector2(-25.0559998F, -19.0970001F), new Vector2(-22.0860004F, -17.5039997F));
                    builder.AddCubicBezier(new Vector2(-19.1149998F, -15.9069996F), new Vector2(-15.4910002F, -14.1110001F), new Vector2(-11.2110004F, -12.1149998F));
                    builder.AddCubicBezier(new Vector2(-12.2159996F, -15.0229998F), new Vector2(-13.2329998F, -17.6210003F), new Vector2(-14.2709999F, -19.9139996F));
                    builder.AddCubicBezier(new Vector2(-15.3070002F, -22.2029991F), new Vector2(-16.0310001F, -24.2600002F), new Vector2(-16.4419994F, -26.0849991F));
                    builder.AddCubicBezier(new Vector2(-17.1870003F, -29.3990002F), new Vector2(-16.9220009F, -32.2869987F), new Vector2(-15.6479998F, -34.7529984F));
                    builder.AddCubicBezier(new Vector2(-14.3739996F, -37.2150002F), new Vector2(-12.1639996F, -38.7999992F), new Vector2(-9.01299953F, -39.5079994F));
                    builder.AddCubicBezier(new Vector2(-5.69999981F, -40.2529984F), new Vector2(-2.90799999F, -39.8359985F), new Vector2(-0.63499999F, -38.2579994F));
                    builder.AddCubicBezier(new Vector2(1.63399994F, -36.6790009F), new Vector2(3.14299989F, -34.230999F), new Vector2(3.88800001F, -30.9179993F));
                    builder.AddCubicBezier(new Vector2(4.37300014F, -28.7619991F), new Vector2(4.55100012F, -26.4069996F), new Vector2(4.42999983F, -23.8579998F));
                    builder.AddCubicBezier(new Vector2(4.30700016F, -21.3040009F), new Vector2(4.47800016F, -18.6009998F), new Vector2(4.94799995F, -15.7489996F));
                    builder.AddCubicBezier(new Vector2(8.05099964F, -19.7520008F), new Vector2(10.6619997F, -23.0400009F), new Vector2(12.7860003F, -25.6070004F));
                    builder.AddCubicBezier(new Vector2(14.9069996F, -28.1730003F), new Vector2(17.4599991F, -29.7910004F), new Vector2(20.4430008F, -30.4619999F));
                    builder.AddCubicBezier(new Vector2(23.0919991F, -31.0569992F), new Vector2(25.6149998F, -30.4909992F), new Vector2(28.0060005F, -28.7679996F));
                    builder.AddCubicBezier(new Vector2(30.3950005F, -27.0400009F), new Vector2(31.8920002F, -24.8509998F), new Vector2(32.4869995F, -22.2019997F));
                    builder.AddCubicBezier(new Vector2(33.0099983F, -19.8789997F), new Vector2(32.2980003F, -17.2369995F), new Vector2(30.3519993F, -14.2770004F));
                    builder.AddCubicBezier(new Vector2(28.4060001F, -11.3140001F), new Vector2(23.5499992F, -7.74100018F), new Vector2(15.7860003F, -3.55900002F));
                    builder.AddCubicBezier(new Vector2(24.5559998F, -3.26600003F), new Vector2(30.4650002F, -2.15899992F), new Vector2(33.5099983F, -0.231999993F));
                    builder.AddCubicBezier(new Vector2(36.5550003F, 1.69500005F), new Vector2(38.3380013F, 3.81999993F), new Vector2(38.8590012F, 6.13899994F));
                    builder.AddCubicBezier(new Vector2(39.4560013F, 8.79199982F), new Vector2(39.0419998F, 11.4110003F), new Vector2(37.6220016F, 13.9910002F));
                    builder.AddCubicBezier(new Vector2(36.2000008F, 16.5760002F), new Vector2(34.1619987F, 18.1650009F), new Vector2(31.5130005F, 18.7600002F));
                    builder.AddCubicBezier(new Vector2(28.5289993F, 19.4309998F), new Vector2(25.5189991F, 19.0219994F), new Vector2(22.4850006F, 17.5259991F));
                    builder.AddCubicBezier(new Vector2(19.448F, 16.0330009F), new Vector2(15.6730003F, 14.1389999F), new Vector2(11.1540003F, 11.8459997F));
                    builder.AddCubicBezier(new Vector2(11.9510002F, 14.6289997F), new Vector2(12.9530001F, 17.1469994F), new Vector2(14.1569996F, 19.3980007F));
                    builder.AddCubicBezier(new Vector2(15.3579998F, 21.6539993F), new Vector2(16.2049999F, 23.8579998F), new Vector2(16.6879997F, 26.0100002F));
                    builder.AddCubicBezier(new Vector2(17.434F, 29.3269997F), new Vector2(17.1270008F, 32.223999F), new Vector2(15.7709999F, 34.7039986F));
                    builder.AddCubicBezier(new Vector2(14.4110003F, 37.1889992F), new Vector2(12.0760002F, 38.8009987F), new Vector2(8.76299953F, 39.5460014F));
                    builder.AddCubicBezier(new Vector2(5.61299992F, 40.2540016F), new Vector2(2.93700004F, 39.7700005F), new Vector2(0.730000019F, 38.0870018F));
                    builder.AddCubicBezier(new Vector2(-1.47500002F, 36.4080009F), new Vector2(-2.95099998F, 33.9119987F), new Vector2(-3.69700003F, 30.5949993F));
                    builder.AddCubicBezier(new Vector2(-4.14400005F, 28.6060009F), new Vector2(-4.38899994F, 26.3560009F), new Vector2(-4.43200016F, 23.8390007F));
                    builder.AddCubicBezier(new Vector2(-4.4749999F, 21.3269997F), new Vector2(-4.66800022F, 18.5389996F), new Vector2(-5.00500011F, 15.4799995F));
                    builder.AddCubicBezier(new Vector2(-8.01799965F, 19.1200008F), new Vector2(-10.5150003F, 22.3330002F), new Vector2(-12.4980001F, 25.1299992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - - Layer: pin 1 Outlines
            // - -  Offset:<512.136, 778.472>
            // - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_53()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_54(), Geometry_55(), Geometry_56() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - PreComp layer: pin
            // - - - - - Layer aggregator
            // - - - - Layer: pin 1 Outlines
            // - - -  Offset:<512.136, 778.472>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_54()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.07600021F, 41.9599991F));
                    builder.AddCubicBezier(new Vector2(3.65199995F, 41.9599991F), new Vector2(1.48199999F, 41.237999F), new Vector2(-0.400999993F, 39.8009987F));
                    builder.AddCubicBezier(new Vector2(-2.954F, 37.8580017F), new Vector2(-4.67500019F, 34.9760017F), new Vector2(-5.5170002F, 31.2339993F));
                    builder.AddCubicBezier(new Vector2(-5.98899984F, 29.132F), new Vector2(-6.25199986F, 26.7339993F), new Vector2(-6.29699993F, 24.1030006F));
                    builder.AddCubicBezier(new Vector2(-6.31699991F, 22.9619999F), new Vector2(-6.36899996F, 21.7450008F), new Vector2(-6.45499992F, 20.4599991F));
                    builder.AddCubicBezier(new Vector2(-8.18799973F, 22.6429996F), new Vector2(-9.70199966F, 24.6439991F), new Vector2(-10.9750004F, 26.441F));
                    builder.AddCubicBezier(new Vector2(-13.224F, 29.6119995F), new Vector2(-16.2719994F, 31.6490002F), new Vector2(-20.0349998F, 32.4949989F));
                    builder.AddCubicBezier(new Vector2(-23.2229996F, 33.2120018F), new Vector2(-26.2730007F, 32.5369987F), new Vector2(-29.1019993F, 30.4909992F));
                    builder.AddCubicBezier(new Vector2(-31.8579998F, 28.5049992F), new Vector2(-33.6110001F, 25.9249992F), new Vector2(-34.3089981F, 22.823F));
                    builder.AddCubicBezier(new Vector2(-34.9360008F, 20.0340004F), new Vector2(-34.2389984F, 16.8889999F), new Vector2(-32.2389984F, 13.4770002F));
                    builder.AddCubicBezier(new Vector2(-30.7579994F, 10.9469995F), new Vector2(-27.5289993F, 8.21500015F), new Vector2(-22.4300003F, 5.19399977F));
                    builder.AddCubicBezier(new Vector2(-28.1930008F, 4.55000019F), new Vector2(-32.2220001F, 3.47000003F), new Vector2(-34.6619987F, 1.92299998F));
                    builder.AddCubicBezier(new Vector2(-38.0219994F, -0.200000003F), new Vector2(-40.0480003F, -2.704F), new Vector2(-40.6809998F, -5.51800013F));
                    builder.AddCubicBezier(new Vector2(-41.3769989F, -8.61499977F), new Vector2(-40.8989983F, -11.698F), new Vector2(-39.2579994F, -14.6800003F));
                    builder.AddCubicBezier(new Vector2(-37.5740013F, -17.7399998F), new Vector2(-35.105999F, -19.6539993F), new Vector2(-31.9220009F, -20.3700008F));
                    builder.AddCubicBezier(new Vector2(-28.1749992F, -21.2119999F), new Vector2(-24.5690002F, -20.7240009F), new Vector2(-21.2029991F, -18.9190006F));
                    builder.AddCubicBezier(new Vector2(-19.2719994F, -17.8810005F), new Vector2(-17.0440006F, -16.7479992F), new Vector2(-14.5459995F, -15.5360003F));
                    builder.AddCubicBezier(new Vector2(-15.0209999F, -16.7390003F), new Vector2(-15.4969997F, -17.868F), new Vector2(-15.9700003F, -18.9139996F));
                    builder.AddCubicBezier(new Vector2(-17.0540009F, -21.3080006F), new Vector2(-17.8260002F, -23.5039997F), new Vector2(-18.2619991F, -25.4449997F));
                    builder.AddCubicBezier(new Vector2(-19.1019993F, -29.1809998F), new Vector2(-18.7800007F, -32.5239983F), new Vector2(-17.3059998F, -35.3790016F));
                    builder.AddCubicBezier(new Vector2(-15.7700005F, -38.3440018F), new Vector2(-13.118F, -40.2680016F), new Vector2(-9.42199993F, -41.098999F));
                    builder.AddCubicBezier(new Vector2(-5.59499979F, -41.9599991F), new Vector2(-2.27999997F, -41.4430008F), new Vector2(0.430000007F, -39.5610008F));
                    builder.AddCubicBezier(new Vector2(3.08599997F, -37.7120018F), new Vector2(4.86199999F, -34.8639984F), new Vector2(5.71000004F, -31.0960007F));
                    builder.AddCubicBezier(new Vector2(6.22700024F, -28.7959995F), new Vector2(6.42399979F, -26.2539997F), new Vector2(6.296F, -23.5400009F));
                    builder.AddCubicBezier(new Vector2(6.24499989F, -22.4869995F), new Vector2(6.24800014F, -21.3999996F), new Vector2(6.3039999F, -20.2859993F));
                    builder.AddCubicBezier(new Vector2(8.24300003F, -22.7520008F), new Vector2(9.90799999F, -24.8250008F), new Vector2(11.349F, -26.566F));
                    builder.AddCubicBezier(new Vector2(13.7279997F, -29.4449997F), new Vector2(16.6509991F, -31.2919998F), new Vector2(20.0349998F, -32.0530014F));
                    builder.AddCubicBezier(new Vector2(23.2140007F, -32.7680016F), new Vector2(26.2639999F, -32.0950012F), new Vector2(29.0990009F, -30.052F));
                    builder.AddCubicBezier(new Vector2(31.8610001F, -28.0529995F), new Vector2(33.612999F, -25.4729996F), new Vector2(34.3089981F, -22.3799992F));
                    builder.AddCubicBezier(new Vector2(34.9440002F, -19.5559998F), new Vector2(34.137001F, -16.4069996F), new Vector2(31.9109993F, -13.0220003F));
                    builder.AddCubicBezier(new Vector2(30.302F, -10.5699997F), new Vector2(27.0760002F, -7.86100006F), new Vector2(22.1130009F, -4.80499983F));
                    builder.AddCubicBezier(new Vector2(27.8980007F, -4.24399996F), new Vector2(31.9799995F, -3.17799997F), new Vector2(34.5079994F, -1.57799995F));
                    builder.AddCubicBezier(new Vector2(37.9720001F, 0.614000022F), new Vector2(40.0489998F, 3.15100002F), new Vector2(40.6809998F, 5.96000004F));
                    builder.AddCubicBezier(new Vector2(41.3769989F, 9.05700016F), new Vector2(40.8979988F, 12.1389999F), new Vector2(39.2579994F, 15.1210003F));
                    builder.AddCubicBezier(new Vector2(37.5740013F, 18.1809998F), new Vector2(35.105999F, 20.0970001F), new Vector2(31.9220009F, 20.8129997F));
                    builder.AddCubicBezier(new Vector2(28.5209999F, 21.5769997F), new Vector2(25.0680008F, 21.1119995F), new Vector2(21.6599998F, 19.4300003F));
                    builder.AddCubicBezier(new Vector2(19.5949993F, 18.4160004F), new Vector2(17.2059994F, 17.2240009F), new Vector2(14.4259996F, 15.823F));
                    builder.AddCubicBezier(new Vector2(14.8500004F, 16.8490009F), new Vector2(15.3100004F, 17.8260002F), new Vector2(15.8039999F, 18.7490005F));
                    builder.AddCubicBezier(new Vector2(17.0839996F, 21.1539993F), new Vector2(17.9939995F, 23.5349998F), new Vector2(18.5109997F, 25.8309994F));
                    builder.AddCubicBezier(new Vector2(19.3549995F, 29.5869999F), new Vector2(18.9839993F, 32.9510002F), new Vector2(17.4090004F, 35.8310013F));
                    builder.AddCubicBezier(new Vector2(15.79F, 38.7919998F), new Vector2(13.0190001F, 40.7330017F), new Vector2(9.17300034F, 41.5979996F));
                    builder.AddCubicBezier(new Vector2(8.10000038F, 41.8390007F), new Vector2(7.06599998F, 41.9599991F), new Vector2(6.07600021F, 41.9599991F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - PreComp layer: pin
            // - - - - - Layer aggregator
            // - - - - Layer: pin 1 Outlines
            // - - -  Offset:<512.136, 778.472>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_55()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.00500011F, 13.8439999F));
                    builder.AddCubicBezier(new Vector2(-4.82600021F, 13.8439999F), new Vector2(-4.64599991F, 13.8690004F), new Vector2(-4.46899986F, 13.9219999F));
                    builder.AddCubicBezier(new Vector2(-3.75099993F, 14.1370001F), new Vector2(-3.23200011F, 14.7620001F), new Vector2(-3.14899993F, 15.507F));
                    builder.AddCubicBezier(new Vector2(-2.8039999F, 18.6410007F), new Vector2(-2.60800004F, 21.5109997F), new Vector2(-2.56500006F, 24.0380001F));
                    builder.AddCubicBezier(new Vector2(-2.52399993F, 26.4150009F), new Vector2(-2.29099989F, 28.5599995F), new Vector2(-1.87399995F, 30.4150009F));
                    builder.AddCubicBezier(new Vector2(-1.222F, 33.3160019F), new Vector2(0F, 35.4150009F), new Vector2(1.86199999F, 36.8320007F));
                    builder.AddCubicBezier(new Vector2(3.62199998F, 38.1739998F), new Vector2(5.74499989F, 38.5400009F), new Vector2(8.35400009F, 37.9539986F));
                    builder.AddCubicBezier(new Vector2(11.1459999F, 37.3269997F), new Vector2(13.0360003F, 36.0460014F), new Vector2(14.1339998F, 34.0390015F));
                    builder.AddCubicBezier(new Vector2(15.276F, 31.9510002F), new Vector2(15.5170002F, 29.5340004F), new Vector2(14.868F, 26.6499996F));
                    builder.AddCubicBezier(new Vector2(14.4250002F, 24.6800003F), new Vector2(13.632F, 22.6130009F), new Vector2(12.5100002F, 20.5049992F));
                    builder.AddCubicBezier(new Vector2(11.2480001F, 18.1469994F), new Vector2(10.1879997F, 15.4829998F), new Vector2(9.35900021F, 12.5909996F));
                    builder.AddCubicBezier(new Vector2(9.15499973F, 11.8769999F), new Vector2(9.39299965F, 11.1099997F), new Vector2(9.9659996F, 10.6370001F));
                    builder.AddCubicBezier(new Vector2(10.5380001F, 10.165F), new Vector2(11.3360004F, 10.0769997F), new Vector2(11.9989996F, 10.4130001F));
                    builder.AddCubicBezier(new Vector2(16.6009998F, 12.7489996F), new Vector2(20.3010006F, 14.6029997F), new Vector2(23.309F, 16.0809994F));
                    builder.AddCubicBezier(new Vector2(25.9720001F, 17.3950005F), new Vector2(28.5209999F, 17.7490005F), new Vector2(31.1030006F, 17.1690006F));
                    builder.AddCubicBezier(new Vector2(33.2270012F, 16.691F), new Vector2(34.8250008F, 15.434F), new Vector2(35.9869995F, 13.3219995F));
                    builder.AddCubicBezier(new Vector2(37.1920013F, 11.132F), new Vector2(37.5359993F, 8.99100018F), new Vector2(37.0390015F, 6.77899981F));
                    builder.AddCubicBezier(new Vector2(36.632F, 4.97100019F), new Vector2(35.1090012F, 3.22000003F), new Vector2(32.512001F, 1.57700002F));
                    builder.AddCubicBezier(new Vector2(30.625F, 0.382999986F), new Vector2(26.1819992F, -1.11300004F), new Vector2(15.724F, -1.46200001F));
                    builder.AddCubicBezier(new Vector2(14.8809996F, -1.49100006F), new Vector2(14.1610003F, -2.08100009F), new Vector2(13.9689999F, -2.90199995F));
                    builder.AddCubicBezier(new Vector2(13.776F, -3.72300005F), new Vector2(14.158F, -4.57299995F), new Vector2(14.901F, -4.97300005F));
                    builder.AddCubicBezier(new Vector2(24.184F, -9.97299957F), new Vector2(27.5779991F, -13.224F), new Vector2(28.7910004F, -15.0719995F));
                    builder.AddCubicBezier(new Vector2(30.4400005F, -17.5799999F), new Vector2(31.0709991F, -19.7630005F), new Vector2(30.6660004F, -21.5610008F));
                    builder.AddCubicBezier(new Vector2(30.1700001F, -23.7700005F), new Vector2(28.9419994F, -25.5569992F), new Vector2(26.9130001F, -27.0249996F));
                    builder.AddCubicBezier(new Vector2(24.9580002F, -28.434F), new Vector2(22.9759998F, -28.8859997F), new Vector2(20.8540001F, -28.4099998F));
                    builder.AddCubicBezier(new Vector2(18.2600002F, -27.8260002F), new Vector2(16.0919991F, -26.4449997F), new Vector2(14.2259998F, -24.1860008F));
                    builder.AddCubicBezier(new Vector2(12.1529999F, -21.6809998F), new Vector2(9.60099983F, -18.4729996F), new Vector2(6.42399979F, -14.3739996F));
                    builder.AddCubicBezier(new Vector2(5.96999979F, -13.7869997F), new Vector2(5.21099997F, -13.526F), new Vector2(4.49100018F, -13.7080002F));
                    builder.AddCubicBezier(new Vector2(3.77099991F, -13.8900003F), new Vector2(3.22799993F, -14.4820004F), new Vector2(3.10700011F, -15.2139997F));
                    builder.AddCubicBezier(new Vector2(2.61899996F, -18.1779995F), new Vector2(2.43700004F, -21.0380001F), new Vector2(2.56699991F, -23.7169991F));
                    builder.AddCubicBezier(new Vector2(2.6789999F, -26.0949993F), new Vector2(2.51099992F, -28.3029995F), new Vector2(2.06699991F, -30.2770004F));
                    builder.AddCubicBezier(new Vector2(1.42200005F, -33.1450005F), new Vector2(0.189999998F, -35.1800003F), new Vector2(-1.70099998F, -36.4959984F));
                    builder.AddCubicBezier(new Vector2(-3.54099989F, -37.7729988F), new Vector2(-5.79899979F, -38.0880013F), new Vector2(-8.60299969F, -37.4570007F));
                    builder.AddCubicBezier(new Vector2(-11.2089996F, -36.8709984F), new Vector2(-12.9709997F, -35.6300011F), new Vector2(-13.9899998F, -33.6629982F));
                    builder.AddCubicBezier(new Vector2(-15.0649996F, -31.5820007F), new Vector2(-15.2709999F, -29.1609993F), new Vector2(-14.6199999F, -26.2639999F));
                    builder.AddCubicBezier(new Vector2(-14.2390003F, -24.5709991F), new Vector2(-13.5489998F, -22.6159992F), new Vector2(-12.5690002F, -20.4529991F));
                    builder.AddCubicBezier(new Vector2(-11.5240002F, -18.1450005F), new Vector2(-10.4729996F, -15.4659996F), new Vector2(-9.44499969F, -12.493F));
                    builder.AddCubicBezier(new Vector2(-9.20100021F, -11.7840004F), new Vector2(-9.40299988F, -10.9980001F), new Vector2(-9.96000004F, -10.4969997F));
                    builder.AddCubicBezier(new Vector2(-10.5170002F, -9.99499989F), new Vector2(-11.3199997F, -9.8739996F), new Vector2(-11.9989996F, -10.191F));
                    builder.AddCubicBezier(new Vector2(-16.2800007F, -12.1879997F), new Vector2(-19.9710007F, -14.0179996F), new Vector2(-22.9689999F, -15.6300001F));
                    builder.AddCubicBezier(new Vector2(-25.5559998F, -17.0170002F), new Vector2(-28.2169991F, -17.3759995F), new Vector2(-31.1030006F, -16.7280006F));
                    builder.AddCubicBezier(new Vector2(-33.2280006F, -16.25F), new Vector2(-34.8250008F, -14.9910002F), new Vector2(-35.9869995F, -12.8800001F));
                    builder.AddCubicBezier(new Vector2(-37.1920013F, -10.6899996F), new Vector2(-37.5359993F, -8.54899979F), new Vector2(-37.0390015F, -6.33699989F));
                    builder.AddCubicBezier(new Vector2(-36.6310005F, -4.5250001F), new Vector2(-35.1599998F, -2.80599999F), new Vector2(-32.6650009F, -1.23000002F));
                    builder.AddCubicBezier(new Vector2(-30.8390007F, -0.0719999969F), new Vector2(-26.4559994F, 1.41900003F), new Vector2(-15.9379997F, 1.96200001F));
                    builder.AddCubicBezier(new Vector2(-15.0939999F, 2.00600004F), new Vector2(-14.3850002F, 2.61199999F), new Vector2(-14.2089996F, 3.43899989F));
                    builder.AddCubicBezier(new Vector2(-14.033F, 4.26499987F), new Vector2(-14.434F, 5.10699987F), new Vector2(-15.1879997F, 5.49100018F));
                    builder.AddCubicBezier(new Vector2(-24.6660004F, 10.316F), new Vector2(-27.9400005F, 13.5220003F), new Vector2(-29.0170002F, 15.3629999F));
                    builder.AddCubicBezier(new Vector2(-30.5240002F, 17.934F), new Vector2(-31.0790005F, 20.1679993F), new Vector2(-30.6660004F, 22.0039997F));
                    builder.AddCubicBezier(new Vector2(-30.1679993F, 24.2199993F), new Vector2(-28.941F, 26.0060005F), new Vector2(-26.9160004F, 27.4650002F));
                    builder.AddCubicBezier(new Vector2(-24.9640007F, 28.8780003F), new Vector2(-22.9820004F, 29.3309994F), new Vector2(-20.8540001F, 28.8530006F));
                    builder.AddCubicBezier(new Vector2(-17.9790001F, 28.2070007F), new Vector2(-15.7440004F, 26.7099991F), new Vector2(-14.0209999F, 24.2810001F));
                    builder.AddCubicBezier(new Vector2(-12.0299997F, 21.4729996F), new Vector2(-9.47999954F, 18.1900005F), new Vector2(-6.44299984F, 14.5209999F));
                    builder.AddCubicBezier(new Vector2(-6.08199978F, 14.085F), new Vector2(-5.55200005F, 13.8439999F), new Vector2(-5.00500011F, 13.8439999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CanvasGeometry Geometry_56()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-12.4980001F, 25.3610001F));
                    builder.AddLine(new Vector2(-12.4949999F, 25.3610001F));
                    builder.AddLine(new Vector2(-12.4980001F, 25.3610001F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = _geometry_56 = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - - Layer: pin 2 Outlines
            // - -  Offset:<609.007, 756.68896>
            CanvasGeometry Geometry_57()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-12.4980001F, 25.1299992F));
                    builder.AddCubicBezier(new Vector2(-14.4809999F, 27.9260006F), new Vector2(-17.132F, 29.698F), new Vector2(-20.4449997F, 30.4430008F));
                    builder.AddCubicBezier(new Vector2(-23.0979996F, 31.0400009F), new Vector2(-25.6200008F, 30.4759998F), new Vector2(-28.0079994F, 28.7490005F));
                    builder.AddCubicBezier(new Vector2(-30.3990002F, 27.0259991F), new Vector2(-31.8910007F, 24.8349991F), new Vector2(-32.4869995F, 22.1819992F));
                    builder.AddCubicBezier(new Vector2(-33.0089989F, 19.8630009F), new Vector2(-32.3919983F, 17.1989994F), new Vector2(-30.6280003F, 14.1899996F));
                    builder.AddCubicBezier(new Vector2(-28.868F, 11.1829996F), new Vector2(-24.0020008F, 7.65299988F), new Vector2(-16.0340004F, 3.59599996F));
                    builder.AddCubicBezier(new Vector2(-24.8449993F, 3.14100003F), new Vector2(-30.7210007F, 1.98099995F), new Vector2(-33.6619987F, 0.116999999F));
                    builder.AddCubicBezier(new Vector2(-36.605999F, -1.74300003F), new Vector2(-38.3380013F, -3.83599997F), new Vector2(-38.8600006F, -6.15799999F));
                    builder.AddCubicBezier(new Vector2(-39.4560013F, -8.80799961F), new Vector2(-39.0449982F, -11.4250002F), new Vector2(-37.6220016F, -14.0100002F));
                    builder.AddCubicBezier(new Vector2(-36.2029991F, -16.5900002F), new Vector2(-34.1660004F, -18.1819992F), new Vector2(-31.5130005F, -18.7789993F));
                    builder.AddCubicBezier(new Vector2(-28.2000008F, -19.5240002F), new Vector2(-25.0559998F, -19.0970001F), new Vector2(-22.0860004F, -17.5039997F));
                    builder.AddCubicBezier(new Vector2(-19.1149998F, -15.9069996F), new Vector2(-15.4910002F, -14.1110001F), new Vector2(-11.2110004F, -12.1149998F));
                    builder.AddCubicBezier(new Vector2(-12.2159996F, -15.0229998F), new Vector2(-13.2329998F, -17.6210003F), new Vector2(-14.2709999F, -19.9139996F));
                    builder.AddCubicBezier(new Vector2(-15.3070002F, -22.2019997F), new Vector2(-16.0310001F, -24.2600002F), new Vector2(-16.4419994F, -26.0849991F));
                    builder.AddCubicBezier(new Vector2(-17.1870003F, -29.3990002F), new Vector2(-16.9220009F, -32.2869987F), new Vector2(-15.6479998F, -34.7529984F));
                    builder.AddCubicBezier(new Vector2(-14.3739996F, -37.2140007F), new Vector2(-12.1630001F, -38.7999992F), new Vector2(-9.01299953F, -39.5079994F));
                    builder.AddCubicBezier(new Vector2(-5.69999981F, -40.2529984F), new Vector2(-2.90799999F, -39.8359985F), new Vector2(-0.63499999F, -38.2579994F));
                    builder.AddCubicBezier(new Vector2(1.63399994F, -36.6790009F), new Vector2(3.14299989F, -34.230999F), new Vector2(3.88800001F, -30.9179993F));
                    builder.AddCubicBezier(new Vector2(4.37300014F, -28.7619991F), new Vector2(4.55100012F, -26.4069996F), new Vector2(4.42999983F, -23.8579998F));
                    builder.AddCubicBezier(new Vector2(4.30700016F, -21.3040009F), new Vector2(4.47800016F, -18.6009998F), new Vector2(4.94799995F, -15.7489996F));
                    builder.AddCubicBezier(new Vector2(8.05099964F, -19.7520008F), new Vector2(10.6619997F, -23.0400009F), new Vector2(12.7860003F, -25.6070004F));
                    builder.AddCubicBezier(new Vector2(14.9069996F, -28.1730003F), new Vector2(17.4610004F, -29.7910004F), new Vector2(20.4449997F, -30.4619999F));
                    builder.AddCubicBezier(new Vector2(23.0939999F, -31.0569992F), new Vector2(25.6149998F, -30.4909992F), new Vector2(28.0060005F, -28.7679996F));
                    builder.AddCubicBezier(new Vector2(30.3950005F, -27.0400009F), new Vector2(31.8910007F, -24.8509998F), new Vector2(32.4869995F, -22.2019997F));
                    builder.AddCubicBezier(new Vector2(33.0089989F, -19.8789997F), new Vector2(32.2980003F, -17.2369995F), new Vector2(30.3519993F, -14.2770004F));
                    builder.AddCubicBezier(new Vector2(28.4060001F, -11.3140001F), new Vector2(23.5499992F, -7.74100018F), new Vector2(15.7860003F, -3.55900002F));
                    builder.AddCubicBezier(new Vector2(24.5559998F, -3.26600003F), new Vector2(30.4650002F, -2.15899992F), new Vector2(33.5099983F, -0.231999993F));
                    builder.AddCubicBezier(new Vector2(36.5550003F, 1.69500005F), new Vector2(38.3380013F, 3.81999993F), new Vector2(38.8590012F, 6.13899994F));
                    builder.AddCubicBezier(new Vector2(39.4560013F, 8.79199982F), new Vector2(39.0419998F, 11.4110003F), new Vector2(37.6220016F, 13.9910002F));
                    builder.AddCubicBezier(new Vector2(36.2000008F, 16.5760002F), new Vector2(34.1619987F, 18.1650009F), new Vector2(31.5130005F, 18.7600002F));
                    builder.AddCubicBezier(new Vector2(28.5289993F, 19.4309998F), new Vector2(25.5189991F, 19.0219994F), new Vector2(22.4850006F, 17.5259991F));
                    builder.AddCubicBezier(new Vector2(19.448F, 16.0330009F), new Vector2(15.6730003F, 14.1389999F), new Vector2(11.1540003F, 11.8459997F));
                    builder.AddCubicBezier(new Vector2(11.9510002F, 14.6289997F), new Vector2(12.9530001F, 17.1469994F), new Vector2(14.1569996F, 19.3980007F));
                    builder.AddCubicBezier(new Vector2(15.3579998F, 21.6539993F), new Vector2(16.2049999F, 23.8579998F), new Vector2(16.6879997F, 26.0100002F));
                    builder.AddCubicBezier(new Vector2(17.434F, 29.3269997F), new Vector2(17.1270008F, 32.223999F), new Vector2(15.7709999F, 34.7039986F));
                    builder.AddCubicBezier(new Vector2(14.4110003F, 37.1889992F), new Vector2(12.0760002F, 38.8009987F), new Vector2(8.76299953F, 39.5460014F));
                    builder.AddCubicBezier(new Vector2(5.61299992F, 40.2540016F), new Vector2(2.93799996F, 39.7700005F), new Vector2(0.731999993F, 38.0870018F));
                    builder.AddCubicBezier(new Vector2(-1.47399998F, 36.4080009F), new Vector2(-2.95000005F, 33.9119987F), new Vector2(-3.69499993F, 30.5949993F));
                    builder.AddCubicBezier(new Vector2(-4.14300013F, 28.6060009F), new Vector2(-4.38899994F, 26.3560009F), new Vector2(-4.43200016F, 23.8390007F));
                    builder.AddCubicBezier(new Vector2(-4.4749999F, 21.3269997F), new Vector2(-4.66800022F, 18.5389996F), new Vector2(-5.00500011F, 15.4799995F));
                    builder.AddCubicBezier(new Vector2(-8.01799965F, 19.1200008F), new Vector2(-10.5150003F, 22.3330002F), new Vector2(-12.4980001F, 25.1299992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - - Layer: pin 2 Outlines
            // - -  Offset:<609.007, 756.68896>
            // - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_58()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_59(), Geometry_60(), Geometry_56() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - PreComp layer: pin
            // - - - - - Layer aggregator
            // - - - - Layer: pin 2 Outlines
            // - - -  Offset:<609.007, 756.68896>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_59()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.07600021F, 41.9599991F));
                    builder.AddCubicBezier(new Vector2(3.65100002F, 41.9599991F), new Vector2(1.48199999F, 41.237999F), new Vector2(-0.400999993F, 39.8009987F));
                    builder.AddCubicBezier(new Vector2(-2.954F, 37.8580017F), new Vector2(-4.67500019F, 34.9749985F), new Vector2(-5.51599979F, 31.2339993F));
                    builder.AddCubicBezier(new Vector2(-5.98899984F, 29.132F), new Vector2(-6.25199986F, 26.7329998F), new Vector2(-6.29699993F, 24.1030006F));
                    builder.AddCubicBezier(new Vector2(-6.31699991F, 22.9619999F), new Vector2(-6.36999989F, 21.7450008F), new Vector2(-6.45499992F, 20.4599991F));
                    builder.AddCubicBezier(new Vector2(-8.18900013F, 22.6429996F), new Vector2(-9.70199966F, 24.6439991F), new Vector2(-10.9759998F, 26.441F));
                    builder.AddCubicBezier(new Vector2(-13.2250004F, 29.6119995F), new Vector2(-16.2719994F, 31.6490002F), new Vector2(-20.0340004F, 32.4949989F));
                    builder.AddCubicBezier(new Vector2(-23.2240009F, 33.2109985F), new Vector2(-26.2749996F, 32.5369987F), new Vector2(-29.1019993F, 30.4909992F));
                    builder.AddCubicBezier(new Vector2(-31.8589993F, 28.5049992F), new Vector2(-33.6119995F, 25.9249992F), new Vector2(-34.3089981F, 22.823F));
                    builder.AddCubicBezier(new Vector2(-34.9370003F, 20.0340004F), new Vector2(-34.2400017F, 16.8889999F), new Vector2(-32.2389984F, 13.4770002F));
                    builder.AddCubicBezier(new Vector2(-30.7590008F, 10.9469995F), new Vector2(-27.5289993F, 8.2159996F), new Vector2(-22.4300003F, 5.19399977F));
                    builder.AddCubicBezier(new Vector2(-28.1940002F, 4.55000019F), new Vector2(-32.2220001F, 3.47000003F), new Vector2(-34.6619987F, 1.92299998F));
                    builder.AddCubicBezier(new Vector2(-38.0219994F, -0.200000003F), new Vector2(-40.0489998F, -2.704F), new Vector2(-40.6819992F, -5.51800013F));
                    builder.AddCubicBezier(new Vector2(-41.3779984F, -8.61499977F), new Vector2(-40.8989983F, -11.698F), new Vector2(-39.2579994F, -14.6800003F));
                    builder.AddCubicBezier(new Vector2(-37.5740013F, -17.7390003F), new Vector2(-35.105999F, -19.6539993F), new Vector2(-31.9220009F, -20.3700008F));
                    builder.AddCubicBezier(new Vector2(-28.1749992F, -21.2119999F), new Vector2(-24.5690002F, -20.7240009F), new Vector2(-21.2029991F, -18.9190006F));
                    builder.AddCubicBezier(new Vector2(-19.2719994F, -17.8810005F), new Vector2(-17.0450001F, -16.7479992F), new Vector2(-14.5469999F, -15.5349998F));
                    builder.AddCubicBezier(new Vector2(-15.0220003F, -16.7390003F), new Vector2(-15.4980001F, -17.868F), new Vector2(-15.9709997F, -18.9139996F));
                    builder.AddCubicBezier(new Vector2(-17.0559998F, -21.3080006F), new Vector2(-17.8269997F, -23.5049992F), new Vector2(-18.2630005F, -25.4449997F));
                    builder.AddCubicBezier(new Vector2(-19.1030006F, -29.1809998F), new Vector2(-18.7800007F, -32.5239983F), new Vector2(-17.3050003F, -35.3790016F));
                    builder.AddCubicBezier(new Vector2(-15.7700005F, -38.3440018F), new Vector2(-13.118F, -40.2680016F), new Vector2(-9.42199993F, -41.098999F));
                    builder.AddCubicBezier(new Vector2(-5.59499979F, -41.9599991F), new Vector2(-2.27900004F, -41.4430008F), new Vector2(0.430000007F, -39.5610008F));
                    builder.AddCubicBezier(new Vector2(3.08699989F, -37.7120018F), new Vector2(4.86100006F, -34.8650017F), new Vector2(5.70900011F, -31.0979996F));
                    builder.AddCubicBezier(new Vector2(6.22599983F, -28.7970009F), new Vector2(6.42299986F, -26.2539997F), new Vector2(6.29500008F, -23.5400009F));
                    builder.AddCubicBezier(new Vector2(6.24399996F, -22.4869995F), new Vector2(6.24700022F, -21.3999996F), new Vector2(6.30299997F, -20.2859993F));
                    builder.AddCubicBezier(new Vector2(8.23999977F, -22.75F), new Vector2(9.90699959F, -24.8220005F), new Vector2(11.349F, -26.566F));
                    builder.AddCubicBezier(new Vector2(13.7279997F, -29.4449997F), new Vector2(16.6499996F, -31.2919998F), new Vector2(20.0340004F, -32.0530014F));
                    builder.AddCubicBezier(new Vector2(23.2129993F, -32.7680016F), new Vector2(26.2639999F, -32.0950012F), new Vector2(29.0990009F, -30.052F));
                    builder.AddCubicBezier(new Vector2(31.8619995F, -28.0529995F), new Vector2(33.612999F, -25.4720001F), new Vector2(34.3079987F, -22.3799992F));
                    builder.AddCubicBezier(new Vector2(34.9430008F, -19.5559998F), new Vector2(34.137001F, -16.4069996F), new Vector2(31.9109993F, -13.0220003F));
                    builder.AddCubicBezier(new Vector2(30.3010006F, -10.5699997F), new Vector2(27.0760002F, -7.86100006F), new Vector2(22.1119995F, -4.80499983F));
                    builder.AddCubicBezier(new Vector2(27.8969994F, -4.24399996F), new Vector2(31.9799995F, -3.17799997F), new Vector2(34.5079994F, -1.57799995F));
                    builder.AddCubicBezier(new Vector2(37.9729996F, 0.614000022F), new Vector2(40.0480003F, 3.15100002F), new Vector2(40.6800003F, 5.96099997F));
                    builder.AddCubicBezier(new Vector2(41.3769989F, 9.05700016F), new Vector2(40.8989983F, 12.1389999F), new Vector2(39.2579994F, 15.1210003F));
                    builder.AddCubicBezier(new Vector2(37.5740013F, 18.1809998F), new Vector2(35.1049995F, 20.0960007F), new Vector2(31.9220009F, 20.8110008F));
                    builder.AddCubicBezier(new Vector2(28.5219994F, 21.5760002F), new Vector2(25.0680008F, 21.1110001F), new Vector2(21.6590004F, 19.4300003F));
                    builder.AddCubicBezier(new Vector2(19.5909996F, 18.4130001F), new Vector2(17.2019997F, 17.2220001F), new Vector2(14.4250002F, 15.8240004F));
                    builder.AddCubicBezier(new Vector2(14.849F, 16.8479996F), new Vector2(15.309F, 17.8260002F), new Vector2(15.8030005F, 18.7490005F));
                    builder.AddCubicBezier(new Vector2(17.0830002F, 21.1539993F), new Vector2(17.993F, 23.5349998F), new Vector2(18.5100002F, 25.8309994F));
                    builder.AddCubicBezier(new Vector2(19.3540001F, 29.5869999F), new Vector2(18.9839993F, 32.9510002F), new Vector2(17.4090004F, 35.8310013F));
                    builder.AddCubicBezier(new Vector2(15.79F, 38.7919998F), new Vector2(13.0190001F, 40.7330017F), new Vector2(9.17399979F, 41.5979996F));
                    builder.AddCubicBezier(new Vector2(8.10000038F, 41.8390007F), new Vector2(7.06599998F, 41.9599991F), new Vector2(6.07600021F, 41.9599991F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - PreComp layer: pin
            // - - - - - Layer aggregator
            // - - - - Layer: pin 2 Outlines
            // - - -  Offset:<609.007, 756.68896>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_60()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.00500011F, 13.8439999F));
                    builder.AddCubicBezier(new Vector2(-4.82700014F, 13.8439999F), new Vector2(-4.64599991F, 13.8690004F), new Vector2(-4.46899986F, 13.9219999F));
                    builder.AddCubicBezier(new Vector2(-3.75099993F, 14.1370001F), new Vector2(-3.23099995F, 14.7620001F), new Vector2(-3.14899993F, 15.507F));
                    builder.AddCubicBezier(new Vector2(-2.8039999F, 18.6399994F), new Vector2(-2.60800004F, 21.5100002F), new Vector2(-2.56500006F, 24.0380001F));
                    builder.AddCubicBezier(new Vector2(-2.52399993F, 26.4139996F), new Vector2(-2.29200006F, 28.5599995F), new Vector2(-1.875F, 30.4150009F));
                    builder.AddCubicBezier(new Vector2(-1.22300005F, 33.3160019F), new Vector2(0F, 35.4150009F), new Vector2(1.86199999F, 36.8320007F));
                    builder.AddCubicBezier(new Vector2(3.62199998F, 38.1739998F), new Vector2(5.74499989F, 38.5410004F), new Vector2(8.35400009F, 37.9560013F));
                    builder.AddCubicBezier(new Vector2(11.1450005F, 37.3279991F), new Vector2(13.0349998F, 36.0460014F), new Vector2(14.1330004F, 34.0390015F));
                    builder.AddCubicBezier(new Vector2(15.2749996F, 31.9500008F), new Vector2(15.5159998F, 29.5330009F), new Vector2(14.8669996F, 26.6499996F));
                    builder.AddCubicBezier(new Vector2(14.4239998F, 24.6800003F), new Vector2(13.632F, 22.6130009F), new Vector2(12.5100002F, 20.5049992F));
                    builder.AddCubicBezier(new Vector2(11.2480001F, 18.1459999F), new Vector2(10.1870003F, 15.4820004F), new Vector2(9.35900021F, 12.5909996F));
                    builder.AddCubicBezier(new Vector2(9.15400028F, 11.8769999F), new Vector2(9.39299965F, 11.1099997F), new Vector2(9.9659996F, 10.6370001F));
                    builder.AddCubicBezier(new Vector2(10.5380001F, 10.165F), new Vector2(11.3360004F, 10.0769997F), new Vector2(11.9980001F, 10.4130001F));
                    builder.AddCubicBezier(new Vector2(16.5949993F, 12.7460003F), new Vector2(20.2940006F, 14.6000004F), new Vector2(23.3080006F, 16.0809994F));
                    builder.AddCubicBezier(new Vector2(25.9710007F, 17.3950005F), new Vector2(28.5189991F, 17.75F), new Vector2(31.1019993F, 17.1690006F));
                    builder.AddCubicBezier(new Vector2(33.2260017F, 16.691F), new Vector2(34.8250008F, 15.434F), new Vector2(35.9869995F, 13.3219995F));
                    builder.AddCubicBezier(new Vector2(37.1920013F, 11.132F), new Vector2(37.5359993F, 8.98999977F), new Vector2(37.0390015F, 6.77899981F));
                    builder.AddCubicBezier(new Vector2(36.632F, 4.96999979F), new Vector2(35.1080017F, 3.22000003F), new Vector2(32.5110016F, 1.57700002F));
                    builder.AddCubicBezier(new Vector2(30.6240005F, 0.382999986F), new Vector2(26.1819992F, -1.11300004F), new Vector2(15.724F, -1.46200001F));
                    builder.AddCubicBezier(new Vector2(14.8809996F, -1.49100006F), new Vector2(14.1610003F, -2.08100009F), new Vector2(13.9689999F, -2.90199995F));
                    builder.AddCubicBezier(new Vector2(13.776F, -3.72300005F), new Vector2(14.158F, -4.57299995F), new Vector2(14.901F, -4.97300005F));
                    builder.AddCubicBezier(new Vector2(24.184F, -9.97299957F), new Vector2(27.5779991F, -13.224F), new Vector2(28.7910004F, -15.0719995F));
                    builder.AddCubicBezier(new Vector2(30.4400005F, -17.5799999F), new Vector2(31.0709991F, -19.7630005F), new Vector2(30.6660004F, -21.5610008F));
                    builder.AddCubicBezier(new Vector2(30.1700001F, -23.7700005F), new Vector2(28.941F, -25.5569992F), new Vector2(26.9120007F, -27.0249996F));
                    builder.AddCubicBezier(new Vector2(24.9570007F, -28.434F), new Vector2(22.9750004F, -28.8859997F), new Vector2(20.8540001F, -28.4099998F));
                    builder.AddCubicBezier(new Vector2(18.2600002F, -27.8260002F), new Vector2(16.0919991F, -26.4449997F), new Vector2(14.2259998F, -24.1860008F));
                    builder.AddCubicBezier(new Vector2(12.1499996F, -21.677F), new Vector2(9.59799957F, -18.4680004F), new Vector2(6.42399979F, -14.3739996F));
                    builder.AddCubicBezier(new Vector2(5.96999979F, -13.7869997F), new Vector2(5.20900011F, -13.5249996F), new Vector2(4.48999977F, -13.7080002F));
                    builder.AddCubicBezier(new Vector2(3.76999998F, -13.8900003F), new Vector2(3.22799993F, -14.4820004F), new Vector2(3.10700011F, -15.2139997F));
                    builder.AddCubicBezier(new Vector2(2.61899996F, -18.1760006F), new Vector2(2.43600011F, -21.0359993F), new Vector2(2.56599998F, -23.7169991F));
                    builder.AddCubicBezier(new Vector2(2.67799997F, -26.0949993F), new Vector2(2.50999999F, -28.3040009F), new Vector2(2.06599998F, -30.2789993F));
                    builder.AddCubicBezier(new Vector2(1.421F, -33.1459999F), new Vector2(0.189999998F, -35.1800003F), new Vector2(-1.70099998F, -36.4959984F));
                    builder.AddCubicBezier(new Vector2(-3.53999996F, -37.7729988F), new Vector2(-5.80000019F, -38.0880013F), new Vector2(-8.60400009F, -37.4570007F));
                    builder.AddCubicBezier(new Vector2(-11.21F, -36.8709984F), new Vector2(-12.9709997F, -35.6300011F), new Vector2(-13.9899998F, -33.6629982F));
                    builder.AddCubicBezier(new Vector2(-15.0649996F, -31.5820007F), new Vector2(-15.2709999F, -29.1609993F), new Vector2(-14.6199999F, -26.2639999F));
                    builder.AddCubicBezier(new Vector2(-14.2390003F, -24.5720005F), new Vector2(-13.5500002F, -22.6170006F), new Vector2(-12.5699997F, -20.4529991F));
                    builder.AddCubicBezier(new Vector2(-11.5249996F, -18.1450005F), new Vector2(-10.4729996F, -15.467F), new Vector2(-9.44499969F, -12.493F));
                    builder.AddCubicBezier(new Vector2(-9.20100021F, -11.7840004F), new Vector2(-9.40400028F, -10.9980001F), new Vector2(-9.96100044F, -10.4969997F));
                    builder.AddCubicBezier(new Vector2(-10.5179996F, -9.99499989F), new Vector2(-11.3199997F, -9.8739996F), new Vector2(-11.9980001F, -10.191F));
                    builder.AddCubicBezier(new Vector2(-16.2810001F, -12.1879997F), new Vector2(-19.9720001F, -14.0179996F), new Vector2(-22.9689999F, -15.6300001F));
                    builder.AddCubicBezier(new Vector2(-25.5550003F, -17.0170002F), new Vector2(-28.2180004F, -17.3759995F), new Vector2(-31.1040001F, -16.7280006F));
                    builder.AddCubicBezier(new Vector2(-33.2290001F, -16.25F), new Vector2(-34.8250008F, -14.9910002F), new Vector2(-35.9869995F, -12.8800001F));
                    builder.AddCubicBezier(new Vector2(-37.1920013F, -10.6899996F), new Vector2(-37.5359993F, -8.55000019F), new Vector2(-37.0390015F, -6.33699989F));
                    builder.AddCubicBezier(new Vector2(-36.6310005F, -4.5250001F), new Vector2(-35.1609993F, -2.80599999F), new Vector2(-32.6660004F, -1.23000002F));
                    builder.AddCubicBezier(new Vector2(-30.8400002F, -0.0729999989F), new Vector2(-26.4570007F, 1.41900003F), new Vector2(-15.9379997F, 1.96200001F));
                    builder.AddCubicBezier(new Vector2(-15.0939999F, 2.00600004F), new Vector2(-14.3859997F, 2.61199999F), new Vector2(-14.21F, 3.43899989F));
                    builder.AddCubicBezier(new Vector2(-14.0340004F, 4.26499987F), new Vector2(-14.434F, 5.10699987F), new Vector2(-15.1879997F, 5.49100018F));
                    builder.AddCubicBezier(new Vector2(-24.6660004F, 10.316F), new Vector2(-27.941F, 13.5220003F), new Vector2(-29.0179996F, 15.3629999F));
                    builder.AddCubicBezier(new Vector2(-30.5249996F, 17.934F), new Vector2(-31.0799999F, 20.1679993F), new Vector2(-30.6669998F, 22.0039997F));
                    builder.AddCubicBezier(new Vector2(-30.1690006F, 24.2199993F), new Vector2(-28.9419994F, 26.0060005F), new Vector2(-26.9169998F, 27.4650002F));
                    builder.AddCubicBezier(new Vector2(-24.9640007F, 28.8780003F), new Vector2(-22.9810009F, 29.3320007F), new Vector2(-20.8540001F, 28.8530006F));
                    builder.AddCubicBezier(new Vector2(-17.9790001F, 28.2070007F), new Vector2(-15.743F, 26.7099991F), new Vector2(-14.0209999F, 24.2810001F));
                    builder.AddCubicBezier(new Vector2(-12.0290003F, 21.4720001F), new Vector2(-9.47999954F, 18.1889992F), new Vector2(-6.44299984F, 14.5209999F));
                    builder.AddCubicBezier(new Vector2(-6.08199978F, 14.085F), new Vector2(-5.55299997F, 13.8439999F), new Vector2(-5.00500011F, 13.8439999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - - Layer: pin 3 Outlines
            // - -  Offset:<705.88, 734.908>
            CanvasGeometry Geometry_61()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-12.4980001F, 25.1299992F));
                    builder.AddCubicBezier(new Vector2(-14.4809999F, 27.9260006F), new Vector2(-17.132F, 29.698F), new Vector2(-20.4449997F, 30.4430008F));
                    builder.AddCubicBezier(new Vector2(-23.0979996F, 31.0400009F), new Vector2(-25.6200008F, 30.4759998F), new Vector2(-28.0079994F, 28.7490005F));
                    builder.AddCubicBezier(new Vector2(-30.3990002F, 27.0259991F), new Vector2(-31.8910007F, 24.8349991F), new Vector2(-32.4869995F, 22.1819992F));
                    builder.AddCubicBezier(new Vector2(-33.0089989F, 19.8630009F), new Vector2(-32.3919983F, 17.1989994F), new Vector2(-30.6280003F, 14.1899996F));
                    builder.AddCubicBezier(new Vector2(-28.868F, 11.1829996F), new Vector2(-24.0020008F, 7.65299988F), new Vector2(-16.0340004F, 3.59599996F));
                    builder.AddCubicBezier(new Vector2(-24.8449993F, 3.14100003F), new Vector2(-30.7210007F, 1.98099995F), new Vector2(-33.6619987F, 0.116999999F));
                    builder.AddCubicBezier(new Vector2(-36.605999F, -1.74300003F), new Vector2(-38.3380013F, -3.83599997F), new Vector2(-38.8600006F, -6.15799999F));
                    builder.AddCubicBezier(new Vector2(-39.4560013F, -8.80799961F), new Vector2(-39.0449982F, -11.4250002F), new Vector2(-37.6220016F, -14.0100002F));
                    builder.AddCubicBezier(new Vector2(-36.2029991F, -16.5900002F), new Vector2(-34.1660004F, -18.1819992F), new Vector2(-31.5130005F, -18.7789993F));
                    builder.AddCubicBezier(new Vector2(-28.2000008F, -19.5240002F), new Vector2(-25.0559998F, -19.0970001F), new Vector2(-22.0860004F, -17.5039997F));
                    builder.AddCubicBezier(new Vector2(-19.1149998F, -15.9069996F), new Vector2(-15.4910002F, -14.1110001F), new Vector2(-11.2110004F, -12.1149998F));
                    builder.AddCubicBezier(new Vector2(-12.2159996F, -15.0229998F), new Vector2(-13.2329998F, -17.6210003F), new Vector2(-14.2700005F, -19.9139996F));
                    builder.AddCubicBezier(new Vector2(-15.3070002F, -22.2019997F), new Vector2(-16.0310001F, -24.2600002F), new Vector2(-16.4419994F, -26.0849991F));
                    builder.AddCubicBezier(new Vector2(-17.1870003F, -29.3990002F), new Vector2(-16.9220009F, -32.2869987F), new Vector2(-15.6479998F, -34.7529984F));
                    builder.AddCubicBezier(new Vector2(-14.3739996F, -37.2150002F), new Vector2(-12.1630001F, -38.7999992F), new Vector2(-9.01299953F, -39.5079994F));
                    builder.AddCubicBezier(new Vector2(-5.69999981F, -40.2529984F), new Vector2(-2.90799999F, -39.8359985F), new Vector2(-0.63499999F, -38.2579994F));
                    builder.AddCubicBezier(new Vector2(1.63399994F, -36.6790009F), new Vector2(3.14299989F, -34.230999F), new Vector2(3.88800001F, -30.9179993F));
                    builder.AddCubicBezier(new Vector2(4.37300014F, -28.7619991F), new Vector2(4.55100012F, -26.4069996F), new Vector2(4.42999983F, -23.8579998F));
                    builder.AddCubicBezier(new Vector2(4.30700016F, -21.3040009F), new Vector2(4.47800016F, -18.6009998F), new Vector2(4.94799995F, -15.7489996F));
                    builder.AddCubicBezier(new Vector2(8.05099964F, -19.7520008F), new Vector2(10.6619997F, -23.0400009F), new Vector2(12.7860003F, -25.6070004F));
                    builder.AddCubicBezier(new Vector2(14.9069996F, -28.1730003F), new Vector2(17.4610004F, -29.7910004F), new Vector2(20.4449997F, -30.4619999F));
                    builder.AddCubicBezier(new Vector2(23.0939999F, -31.0569992F), new Vector2(25.6149998F, -30.4909992F), new Vector2(28.0060005F, -28.7679996F));
                    builder.AddCubicBezier(new Vector2(30.3950005F, -27.0400009F), new Vector2(31.8910007F, -24.8509998F), new Vector2(32.4869995F, -22.2019997F));
                    builder.AddCubicBezier(new Vector2(33.0089989F, -19.8789997F), new Vector2(32.2980003F, -17.2369995F), new Vector2(30.3519993F, -14.2770004F));
                    builder.AddCubicBezier(new Vector2(28.4060001F, -11.3140001F), new Vector2(23.5499992F, -7.74100018F), new Vector2(15.7860003F, -3.55900002F));
                    builder.AddCubicBezier(new Vector2(24.5559998F, -3.26600003F), new Vector2(30.4650002F, -2.15899992F), new Vector2(33.5099983F, -0.231999993F));
                    builder.AddCubicBezier(new Vector2(36.5550003F, 1.69500005F), new Vector2(38.3380013F, 3.81999993F), new Vector2(38.8590012F, 6.13899994F));
                    builder.AddCubicBezier(new Vector2(39.4560013F, 8.79199982F), new Vector2(39.0419998F, 11.4110003F), new Vector2(37.6220016F, 13.9910002F));
                    builder.AddCubicBezier(new Vector2(36.2000008F, 16.5760002F), new Vector2(34.1619987F, 18.1650009F), new Vector2(31.5130005F, 18.7600002F));
                    builder.AddCubicBezier(new Vector2(28.5289993F, 19.4309998F), new Vector2(25.5189991F, 19.0219994F), new Vector2(22.4850006F, 17.5259991F));
                    builder.AddCubicBezier(new Vector2(19.448F, 16.0330009F), new Vector2(15.6730003F, 14.1389999F), new Vector2(11.1540003F, 11.8459997F));
                    builder.AddCubicBezier(new Vector2(11.9510002F, 14.6289997F), new Vector2(12.9530001F, 17.1469994F), new Vector2(14.1569996F, 19.3980007F));
                    builder.AddCubicBezier(new Vector2(15.3579998F, 21.6539993F), new Vector2(16.2049999F, 23.8579998F), new Vector2(16.6879997F, 26.0100002F));
                    builder.AddCubicBezier(new Vector2(17.434F, 29.3269997F), new Vector2(17.1270008F, 32.223999F), new Vector2(15.7709999F, 34.7039986F));
                    builder.AddCubicBezier(new Vector2(14.4119997F, 37.1889992F), new Vector2(12.0760002F, 38.8009987F), new Vector2(8.76299953F, 39.5460014F));
                    builder.AddCubicBezier(new Vector2(5.61299992F, 40.2540016F), new Vector2(2.93799996F, 39.7700005F), new Vector2(0.731999993F, 38.0870018F));
                    builder.AddCubicBezier(new Vector2(-1.47399998F, 36.4080009F), new Vector2(-2.94899988F, 33.9119987F), new Vector2(-3.69499993F, 30.5949993F));
                    builder.AddCubicBezier(new Vector2(-4.14300013F, 28.6060009F), new Vector2(-4.38800001F, 26.3549995F), new Vector2(-4.43200016F, 23.8390007F));
                    builder.AddCubicBezier(new Vector2(-4.4749999F, 21.3269997F), new Vector2(-4.66800022F, 18.5389996F), new Vector2(-5.00500011F, 15.4799995F));
                    builder.AddCubicBezier(new Vector2(-8.01799965F, 19.1200008F), new Vector2(-10.5150003F, 22.3330002F), new Vector2(-12.4980001F, 25.1299992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - - Layer: pin 3 Outlines
            // - -  Offset:<705.88, 734.908>
            // - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_62()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_63(), Geometry_64(), Geometry_56() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - PreComp layer: pin
            // - - - - - Layer aggregator
            // - - - - Layer: pin 3 Outlines
            // - - -  Offset:<705.88, 734.908>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_63()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.07499981F, 41.9599991F));
                    builder.AddCubicBezier(new Vector2(3.65100002F, 41.9599991F), new Vector2(1.48199999F, 41.237999F), new Vector2(-0.400999993F, 39.8009987F));
                    builder.AddCubicBezier(new Vector2(-2.95300007F, 37.8580017F), new Vector2(-4.67600012F, 34.9760017F), new Vector2(-5.51800013F, 31.2339993F));
                    builder.AddCubicBezier(new Vector2(-5.98999977F, 29.1329994F), new Vector2(-6.25199986F, 26.7339993F), new Vector2(-6.29699993F, 24.1030006F));
                    builder.AddCubicBezier(new Vector2(-6.31699991F, 22.9619999F), new Vector2(-6.36999989F, 21.7439995F), new Vector2(-6.45499992F, 20.4580002F));
                    builder.AddCubicBezier(new Vector2(-8.18900013F, 22.6420002F), new Vector2(-9.70300007F, 24.6450005F), new Vector2(-10.9759998F, 26.441F));
                    builder.AddCubicBezier(new Vector2(-13.2250004F, 29.6119995F), new Vector2(-16.2730007F, 31.6490002F), new Vector2(-20.0359993F, 32.4949989F));
                    builder.AddCubicBezier(new Vector2(-23.2229996F, 33.2109985F), new Vector2(-26.2730007F, 32.5369987F), new Vector2(-29.1019993F, 30.4909992F));
                    builder.AddCubicBezier(new Vector2(-31.8579998F, 28.5049992F), new Vector2(-33.6119995F, 25.9249992F), new Vector2(-34.3089981F, 22.823F));
                    builder.AddCubicBezier(new Vector2(-34.9370003F, 20.0340004F), new Vector2(-34.2400017F, 16.8899994F), new Vector2(-32.2389984F, 13.4770002F));
                    builder.AddCubicBezier(new Vector2(-30.7590008F, 10.9469995F), new Vector2(-27.5300007F, 8.2159996F), new Vector2(-22.4300003F, 5.19399977F));
                    builder.AddCubicBezier(new Vector2(-28.1940002F, 4.55000019F), new Vector2(-32.2220001F, 3.47000003F), new Vector2(-34.6619987F, 1.92299998F));
                    builder.AddCubicBezier(new Vector2(-38.0219994F, -0.200000003F), new Vector2(-40.0489998F, -2.704F), new Vector2(-40.6819992F, -5.51800013F));
                    builder.AddCubicBezier(new Vector2(-41.3779984F, -8.61600018F), new Vector2(-40.8989983F, -11.698F), new Vector2(-39.2579994F, -14.6800003F));
                    builder.AddCubicBezier(new Vector2(-37.5740013F, -17.7399998F), new Vector2(-35.105999F, -19.6539993F), new Vector2(-31.9220009F, -20.3700008F));
                    builder.AddCubicBezier(new Vector2(-28.1760006F, -21.2119999F), new Vector2(-24.5690002F, -20.7240009F), new Vector2(-21.2029991F, -18.9190006F));
                    builder.AddCubicBezier(new Vector2(-19.2730007F, -17.8810005F), new Vector2(-17.0450001F, -16.7479992F), new Vector2(-14.5469999F, -15.5349998F));
                    builder.AddCubicBezier(new Vector2(-15.0220003F, -16.7380009F), new Vector2(-15.4969997F, -17.8670006F), new Vector2(-15.9709997F, -18.9139996F));
                    builder.AddCubicBezier(new Vector2(-17.0559998F, -21.3080006F), new Vector2(-17.8269997F, -23.5049992F), new Vector2(-18.2630005F, -25.4449997F));
                    builder.AddCubicBezier(new Vector2(-19.1030006F, -29.1809998F), new Vector2(-18.7800007F, -32.5239983F), new Vector2(-17.3050003F, -35.3790016F));
                    builder.AddCubicBezier(new Vector2(-15.7700005F, -38.3440018F), new Vector2(-13.118F, -40.2680016F), new Vector2(-9.42199993F, -41.098999F));
                    builder.AddCubicBezier(new Vector2(-5.59499979F, -41.9599991F), new Vector2(-2.27900004F, -41.4430008F), new Vector2(0.430000007F, -39.5610008F));
                    builder.AddCubicBezier(new Vector2(3.08599997F, -37.7130013F), new Vector2(4.86100006F, -34.8650017F), new Vector2(5.70800018F, -31.0979996F));
                    builder.AddCubicBezier(new Vector2(6.22599983F, -28.7970009F), new Vector2(6.42299986F, -26.2539997F), new Vector2(6.29500008F, -23.5400009F));
                    builder.AddCubicBezier(new Vector2(6.24399996F, -22.4869995F), new Vector2(6.24700022F, -21.3999996F), new Vector2(6.30299997F, -20.2859993F));
                    builder.AddCubicBezier(new Vector2(8.24199963F, -22.7520008F), new Vector2(9.9090004F, -24.8250008F), new Vector2(11.349F, -26.566F));
                    builder.AddCubicBezier(new Vector2(13.7290001F, -29.4449997F), new Vector2(16.6499996F, -31.2919998F), new Vector2(20.0340004F, -32.0530014F));
                    builder.AddCubicBezier(new Vector2(23.2140007F, -32.769001F), new Vector2(26.2639999F, -32.0950012F), new Vector2(29.0990009F, -30.052F));
                    builder.AddCubicBezier(new Vector2(31.8610001F, -28.0529995F), new Vector2(33.6119995F, -25.4729996F), new Vector2(34.3079987F, -22.3799992F));
                    builder.AddCubicBezier(new Vector2(34.9430008F, -19.5559998F), new Vector2(34.137001F, -16.4069996F), new Vector2(31.9109993F, -13.0220003F));
                    builder.AddCubicBezier(new Vector2(30.302F, -10.5699997F), new Vector2(27.0760002F, -7.86100006F), new Vector2(22.1119995F, -4.80499983F));
                    builder.AddCubicBezier(new Vector2(27.8969994F, -4.24399996F), new Vector2(31.9799995F, -3.17799997F), new Vector2(34.5079994F, -1.57799995F));
                    builder.AddCubicBezier(new Vector2(37.9720001F, 0.614000022F), new Vector2(40.0480003F, 3.15100002F), new Vector2(40.6800003F, 5.96000004F));
                    builder.AddCubicBezier(new Vector2(41.3769989F, 9.05700016F), new Vector2(40.8969994F, 12.1389999F), new Vector2(39.2560005F, 15.1210003F));
                    builder.AddCubicBezier(new Vector2(37.5719986F, 18.1809998F), new Vector2(35.1049995F, 20.0960007F), new Vector2(31.9220009F, 20.8110008F));
                    builder.AddCubicBezier(new Vector2(28.5219994F, 21.5769997F), new Vector2(25.0680008F, 21.1119995F), new Vector2(21.6590004F, 19.4300003F));
                    builder.AddCubicBezier(new Vector2(19.5939999F, 18.4160004F), new Vector2(17.2049999F, 17.2240009F), new Vector2(14.4250002F, 15.823F));
                    builder.AddCubicBezier(new Vector2(14.849F, 16.8490009F), new Vector2(15.309F, 17.8260002F), new Vector2(15.8030005F, 18.7490005F));
                    builder.AddCubicBezier(new Vector2(17.0830002F, 21.1529999F), new Vector2(17.993F, 23.5340004F), new Vector2(18.5100002F, 25.8309994F));
                    builder.AddCubicBezier(new Vector2(19.3540001F, 29.5869999F), new Vector2(18.9839993F, 32.9510002F), new Vector2(17.4090004F, 35.8310013F));
                    builder.AddCubicBezier(new Vector2(15.79F, 38.7919998F), new Vector2(13.0179996F, 40.7330017F), new Vector2(9.17199993F, 41.5979996F));
                    builder.AddCubicBezier(new Vector2(8.09899998F, 41.8390007F), new Vector2(7.06599998F, 41.9599991F), new Vector2(6.07499981F, 41.9599991F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - PreComp layer: pin
            // - - - - - Layer aggregator
            // - - - - Layer: pin 3 Outlines
            // - - -  Offset:<705.88, 734.908>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_64()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.00500011F, 13.8439999F));
                    builder.AddCubicBezier(new Vector2(-4.82600021F, 13.8439999F), new Vector2(-4.64699984F, 13.8690004F), new Vector2(-4.47100019F, 13.9219999F));
                    builder.AddCubicBezier(new Vector2(-3.75200009F, 14.1370001F), new Vector2(-3.23300004F, 14.7620001F), new Vector2(-3.15100002F, 15.507F));
                    builder.AddCubicBezier(new Vector2(-2.80500007F, 18.6420002F), new Vector2(-2.60800004F, 21.5119991F), new Vector2(-2.56500006F, 24.0380001F));
                    builder.AddCubicBezier(new Vector2(-2.52399993F, 26.4150009F), new Vector2(-2.29099989F, 28.5610008F), new Vector2(-1.875F, 30.4150009F));
                    builder.AddCubicBezier(new Vector2(-1.222F, 33.3160019F), new Vector2(0F, 35.4150009F), new Vector2(1.86199999F, 36.8320007F));
                    builder.AddCubicBezier(new Vector2(3.62199998F, 38.1739998F), new Vector2(5.74499989F, 38.5419998F), new Vector2(8.35400009F, 37.9560013F));
                    builder.AddCubicBezier(new Vector2(11.1459999F, 37.3279991F), new Vector2(13.0349998F, 36.0460014F), new Vector2(14.1330004F, 34.0390015F));
                    builder.AddCubicBezier(new Vector2(15.2749996F, 31.9500008F), new Vector2(15.5159998F, 29.5330009F), new Vector2(14.8669996F, 26.6499996F));
                    builder.AddCubicBezier(new Vector2(14.4239998F, 24.6790009F), new Vector2(13.6309996F, 22.6119995F), new Vector2(12.5100002F, 20.5049992F));
                    builder.AddCubicBezier(new Vector2(11.2480001F, 18.1459999F), new Vector2(10.1870003F, 15.4820004F), new Vector2(9.35900021F, 12.5909996F));
                    builder.AddCubicBezier(new Vector2(9.15499973F, 11.8769999F), new Vector2(9.39299965F, 11.1099997F), new Vector2(9.9659996F, 10.6370001F));
                    builder.AddCubicBezier(new Vector2(10.5380001F, 10.1639996F), new Vector2(11.3360004F, 10.0769997F), new Vector2(11.9980001F, 10.4130001F));
                    builder.AddCubicBezier(new Vector2(16.6000004F, 12.7489996F), new Vector2(20.2989998F, 14.6029997F), new Vector2(23.3080006F, 16.0809994F));
                    builder.AddCubicBezier(new Vector2(25.9710007F, 17.3950005F), new Vector2(28.5209999F, 17.75F), new Vector2(31.1019993F, 17.1690006F));
                    builder.AddCubicBezier(new Vector2(33.2260017F, 16.691F), new Vector2(34.8240013F, 15.434F), new Vector2(35.9869995F, 13.3219995F));
                    builder.AddCubicBezier(new Vector2(37.1920013F, 11.132F), new Vector2(37.5359993F, 8.99100018F), new Vector2(37.0390015F, 6.77899981F));
                    builder.AddCubicBezier(new Vector2(36.632F, 4.97100019F), new Vector2(35.1080017F, 3.22000003F), new Vector2(32.5110016F, 1.57700002F));
                    builder.AddCubicBezier(new Vector2(30.6240005F, 0.382999986F), new Vector2(26.1819992F, -1.11300004F), new Vector2(15.724F, -1.46200001F));
                    builder.AddCubicBezier(new Vector2(14.8800001F, -1.49100006F), new Vector2(14.1599998F, -2.08100009F), new Vector2(13.967F, -2.90199995F));
                    builder.AddCubicBezier(new Vector2(13.7749996F, -3.72300005F), new Vector2(14.158F, -4.57299995F), new Vector2(14.901F, -4.97300005F));
                    builder.AddCubicBezier(new Vector2(24.184F, -9.97299957F), new Vector2(27.5779991F, -13.2250004F), new Vector2(28.7910004F, -15.0719995F));
                    builder.AddCubicBezier(new Vector2(30.4400005F, -17.5799999F), new Vector2(31.0699997F, -19.7630005F), new Vector2(30.6660004F, -21.5610008F));
                    builder.AddCubicBezier(new Vector2(30.1690006F, -23.7700005F), new Vector2(28.941F, -25.5569992F), new Vector2(26.9120007F, -27.0249996F));
                    builder.AddCubicBezier(new Vector2(24.9570007F, -28.434F), new Vector2(22.9750004F, -28.8859997F), new Vector2(20.8540001F, -28.4099998F));
                    builder.AddCubicBezier(new Vector2(18.2609997F, -27.8269997F), new Vector2(16.0930004F, -26.4449997F), new Vector2(14.2259998F, -24.1860008F));
                    builder.AddCubicBezier(new Vector2(12.1540003F, -21.6819992F), new Vector2(9.60200024F, -18.4729996F), new Vector2(6.42399979F, -14.3739996F));
                    builder.AddCubicBezier(new Vector2(5.96899986F, -13.7869997F), new Vector2(5.20900011F, -13.5249996F), new Vector2(4.48999977F, -13.7080002F));
                    builder.AddCubicBezier(new Vector2(3.76999998F, -13.8900003F), new Vector2(3.22799993F, -14.4820004F), new Vector2(3.10700011F, -15.2139997F));
                    builder.AddCubicBezier(new Vector2(2.61899996F, -18.1779995F), new Vector2(2.43600011F, -21.0380001F), new Vector2(2.56599998F, -23.7169991F));
                    builder.AddCubicBezier(new Vector2(2.67799997F, -26.0949993F), new Vector2(2.50999999F, -28.3029995F), new Vector2(2.06599998F, -30.2770004F));
                    builder.AddCubicBezier(new Vector2(1.421F, -33.1450005F), new Vector2(0.189999998F, -35.1800003F), new Vector2(-1.70099998F, -36.4959984F));
                    builder.AddCubicBezier(new Vector2(-3.53999996F, -37.7729988F), new Vector2(-5.80000019F, -38.0880013F), new Vector2(-8.60400009F, -37.4570007F));
                    builder.AddCubicBezier(new Vector2(-11.21F, -36.8709984F), new Vector2(-12.9720001F, -35.6300011F), new Vector2(-13.9899998F, -33.6629982F));
                    builder.AddCubicBezier(new Vector2(-15.066F, -31.5830002F), new Vector2(-15.2709999F, -29.1609993F), new Vector2(-14.6199999F, -26.2639999F));
                    builder.AddCubicBezier(new Vector2(-14.2390003F, -24.5720005F), new Vector2(-13.5500002F, -22.6170006F), new Vector2(-12.5699997F, -20.4529991F));
                    builder.AddCubicBezier(new Vector2(-11.5240002F, -18.1410007F), new Vector2(-10.4729996F, -15.4630003F), new Vector2(-9.44699955F, -12.493F));
                    builder.AddCubicBezier(new Vector2(-9.20199966F, -11.7840004F), new Vector2(-9.40400028F, -10.9980001F), new Vector2(-9.96100044F, -10.4969997F));
                    builder.AddCubicBezier(new Vector2(-10.5179996F, -9.99499989F), new Vector2(-11.3199997F, -9.8739996F), new Vector2(-12F, -10.191F));
                    builder.AddCubicBezier(new Vector2(-16.2830009F, -12.1890001F), new Vector2(-19.9720001F, -14.0190001F), new Vector2(-22.9689999F, -15.6300001F));
                    builder.AddCubicBezier(new Vector2(-25.5559998F, -17.0170002F), new Vector2(-28.2189999F, -17.3759995F), new Vector2(-31.1040001F, -16.7280006F));
                    builder.AddCubicBezier(new Vector2(-33.2290001F, -16.25F), new Vector2(-34.8250008F, -14.9910002F), new Vector2(-35.9869995F, -12.8800001F));
                    builder.AddCubicBezier(new Vector2(-37.1920013F, -10.6899996F), new Vector2(-37.5359993F, -8.55000019F), new Vector2(-37.0390015F, -6.33699989F));
                    builder.AddCubicBezier(new Vector2(-36.6310005F, -4.5250001F), new Vector2(-35.1609993F, -2.80599999F), new Vector2(-32.6660004F, -1.23000002F));
                    builder.AddCubicBezier(new Vector2(-30.8400002F, -0.0729999989F), new Vector2(-26.4570007F, 1.41900003F), new Vector2(-15.9379997F, 1.96200001F));
                    builder.AddCubicBezier(new Vector2(-15.0939999F, 2.00600004F), new Vector2(-14.3859997F, 2.61199999F), new Vector2(-14.21F, 3.43899989F));
                    builder.AddCubicBezier(new Vector2(-14.0340004F, 4.26499987F), new Vector2(-14.434F, 5.10699987F), new Vector2(-15.1879997F, 5.49100018F));
                    builder.AddCubicBezier(new Vector2(-24.6660004F, 10.316F), new Vector2(-27.941F, 13.5220003F), new Vector2(-29.0179996F, 15.3629999F));
                    builder.AddCubicBezier(new Vector2(-30.5259991F, 17.934F), new Vector2(-31.0799999F, 20.1679993F), new Vector2(-30.6669998F, 22.0039997F));
                    builder.AddCubicBezier(new Vector2(-30.1690006F, 24.2199993F), new Vector2(-28.9419994F, 26.0060005F), new Vector2(-26.9169998F, 27.4650002F));
                    builder.AddCubicBezier(new Vector2(-24.9640007F, 28.8780003F), new Vector2(-22.9810009F, 29.3309994F), new Vector2(-20.8540001F, 28.8530006F));
                    builder.AddCubicBezier(new Vector2(-17.9790001F, 28.2070007F), new Vector2(-15.7440004F, 26.7099991F), new Vector2(-14.0209999F, 24.2810001F));
                    builder.AddCubicBezier(new Vector2(-12.0299997F, 21.4729996F), new Vector2(-9.47999954F, 18.1900005F), new Vector2(-6.44299984F, 14.5209999F));
                    builder.AddCubicBezier(new Vector2(-6.08199978F, 14.085F), new Vector2(-5.55200005F, 13.8439999F), new Vector2(-5.00500011F, 13.8439999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - - Layer: pin 4 Outlines
            // - -  Offset:<802.752, 713.12396>
            CanvasGeometry Geometry_65()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-12.4980001F, 25.1299992F));
                    builder.AddCubicBezier(new Vector2(-14.4809999F, 27.9260006F), new Vector2(-17.132F, 29.698F), new Vector2(-20.4449997F, 30.4430008F));
                    builder.AddCubicBezier(new Vector2(-23.0979996F, 31.0400009F), new Vector2(-25.6200008F, 30.4759998F), new Vector2(-28.0079994F, 28.7490005F));
                    builder.AddCubicBezier(new Vector2(-30.3990002F, 27.0259991F), new Vector2(-31.8910007F, 24.8349991F), new Vector2(-32.4869995F, 22.1819992F));
                    builder.AddCubicBezier(new Vector2(-33.0089989F, 19.8630009F), new Vector2(-32.3919983F, 17.1989994F), new Vector2(-30.6280003F, 14.1899996F));
                    builder.AddCubicBezier(new Vector2(-28.868F, 11.1829996F), new Vector2(-24.0020008F, 7.65299988F), new Vector2(-16.0340004F, 3.59599996F));
                    builder.AddCubicBezier(new Vector2(-24.8449993F, 3.14100003F), new Vector2(-30.7210007F, 1.98099995F), new Vector2(-33.6619987F, 0.116999999F));
                    builder.AddCubicBezier(new Vector2(-36.605999F, -1.74300003F), new Vector2(-38.3380013F, -3.83599997F), new Vector2(-38.8600006F, -6.15799999F));
                    builder.AddCubicBezier(new Vector2(-39.4560013F, -8.80799961F), new Vector2(-39.0449982F, -11.4250002F), new Vector2(-37.6220016F, -14.0100002F));
                    builder.AddCubicBezier(new Vector2(-36.2029991F, -16.5900002F), new Vector2(-34.1660004F, -18.1819992F), new Vector2(-31.5130005F, -18.7789993F));
                    builder.AddCubicBezier(new Vector2(-28.2000008F, -19.5240002F), new Vector2(-25.0559998F, -19.0970001F), new Vector2(-22.0860004F, -17.5039997F));
                    builder.AddCubicBezier(new Vector2(-19.1149998F, -15.9069996F), new Vector2(-15.4910002F, -14.1110001F), new Vector2(-11.2110004F, -12.1149998F));
                    builder.AddCubicBezier(new Vector2(-12.2159996F, -15.0229998F), new Vector2(-13.2329998F, -17.6210003F), new Vector2(-14.2709999F, -19.9139996F));
                    builder.AddCubicBezier(new Vector2(-15.3070002F, -22.2029991F), new Vector2(-16.0310001F, -24.2600002F), new Vector2(-16.4419994F, -26.0849991F));
                    builder.AddCubicBezier(new Vector2(-17.1870003F, -29.3990002F), new Vector2(-16.9220009F, -32.2869987F), new Vector2(-15.6479998F, -34.7529984F));
                    builder.AddCubicBezier(new Vector2(-14.3739996F, -37.2150002F), new Vector2(-12.1630001F, -38.7999992F), new Vector2(-9.01299953F, -39.5079994F));
                    builder.AddCubicBezier(new Vector2(-5.69999981F, -40.2529984F), new Vector2(-2.90799999F, -39.8359985F), new Vector2(-0.63499999F, -38.2579994F));
                    builder.AddCubicBezier(new Vector2(1.63399994F, -36.6790009F), new Vector2(3.14299989F, -34.230999F), new Vector2(3.88800001F, -30.9179993F));
                    builder.AddCubicBezier(new Vector2(4.37300014F, -28.7619991F), new Vector2(4.55100012F, -26.4069996F), new Vector2(4.42999983F, -23.8579998F));
                    builder.AddCubicBezier(new Vector2(4.30700016F, -21.3040009F), new Vector2(4.47800016F, -18.6009998F), new Vector2(4.94799995F, -15.7489996F));
                    builder.AddCubicBezier(new Vector2(8.05099964F, -19.7520008F), new Vector2(10.6619997F, -23.0400009F), new Vector2(12.7860003F, -25.6070004F));
                    builder.AddCubicBezier(new Vector2(14.9069996F, -28.1730003F), new Vector2(17.4599991F, -29.7910004F), new Vector2(20.4430008F, -30.4619999F));
                    builder.AddCubicBezier(new Vector2(23.0919991F, -31.0569992F), new Vector2(25.6149998F, -30.4909992F), new Vector2(28.0060005F, -28.7679996F));
                    builder.AddCubicBezier(new Vector2(30.3950005F, -27.0400009F), new Vector2(31.8920002F, -24.8509998F), new Vector2(32.4869995F, -22.2019997F));
                    builder.AddCubicBezier(new Vector2(33.0099983F, -19.8789997F), new Vector2(32.2980003F, -17.2369995F), new Vector2(30.3519993F, -14.2770004F));
                    builder.AddCubicBezier(new Vector2(28.4060001F, -11.3140001F), new Vector2(23.5499992F, -7.74100018F), new Vector2(15.7860003F, -3.55900002F));
                    builder.AddCubicBezier(new Vector2(24.5559998F, -3.26600003F), new Vector2(30.4650002F, -2.15899992F), new Vector2(33.5099983F, -0.231999993F));
                    builder.AddCubicBezier(new Vector2(36.5550003F, 1.69500005F), new Vector2(38.3380013F, 3.81999993F), new Vector2(38.8590012F, 6.13899994F));
                    builder.AddCubicBezier(new Vector2(39.4560013F, 8.79199982F), new Vector2(39.0419998F, 11.4110003F), new Vector2(37.6220016F, 13.9910002F));
                    builder.AddCubicBezier(new Vector2(36.2000008F, 16.5760002F), new Vector2(34.1619987F, 18.1650009F), new Vector2(31.5130005F, 18.7600002F));
                    builder.AddCubicBezier(new Vector2(28.5289993F, 19.4309998F), new Vector2(25.5189991F, 19.0219994F), new Vector2(22.4850006F, 17.5259991F));
                    builder.AddCubicBezier(new Vector2(19.448F, 16.0330009F), new Vector2(15.6730003F, 14.1389999F), new Vector2(11.1540003F, 11.8459997F));
                    builder.AddCubicBezier(new Vector2(11.9510002F, 14.6289997F), new Vector2(12.9530001F, 17.1469994F), new Vector2(14.1569996F, 19.3980007F));
                    builder.AddCubicBezier(new Vector2(15.3579998F, 21.6539993F), new Vector2(16.2049999F, 23.8579998F), new Vector2(16.6879997F, 26.0100002F));
                    builder.AddCubicBezier(new Vector2(17.434F, 29.3269997F), new Vector2(17.1270008F, 32.223999F), new Vector2(15.7709999F, 34.7039986F));
                    builder.AddCubicBezier(new Vector2(14.4110003F, 37.1889992F), new Vector2(12.0760002F, 38.8009987F), new Vector2(8.76299953F, 39.5460014F));
                    builder.AddCubicBezier(new Vector2(5.61299992F, 40.2540016F), new Vector2(2.93700004F, 39.7700005F), new Vector2(0.730000019F, 38.0870018F));
                    builder.AddCubicBezier(new Vector2(-1.47500002F, 36.4080009F), new Vector2(-2.95000005F, 33.9119987F), new Vector2(-3.69499993F, 30.5949993F));
                    builder.AddCubicBezier(new Vector2(-4.14300013F, 28.6060009F), new Vector2(-4.38800001F, 26.3560009F), new Vector2(-4.43200016F, 23.8390007F));
                    builder.AddCubicBezier(new Vector2(-4.4749999F, 21.3269997F), new Vector2(-4.66800022F, 18.5389996F), new Vector2(-5.00500011F, 15.4799995F));
                    builder.AddCubicBezier(new Vector2(-8.01799965F, 19.1200008F), new Vector2(-10.5150003F, 22.3330002F), new Vector2(-12.4980001F, 25.1299992F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: pin
            // - - - - Layer aggregator
            // - - - Layer: pin 4 Outlines
            // - -  Offset:<802.752, 713.12396>
            // - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_66()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_67(), Geometry_68(), Geometry_56() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - PreComp layer: pin
            // - - - - - Layer aggregator
            // - - - - Layer: pin 4 Outlines
            // - - -  Offset:<802.752, 713.12396>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_67()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(6.07600021F, 41.9599991F));
                    builder.AddCubicBezier(new Vector2(3.65100002F, 41.9599991F), new Vector2(1.48199999F, 41.237999F), new Vector2(-0.400999993F, 39.8009987F));
                    builder.AddCubicBezier(new Vector2(-2.95300007F, 37.8580017F), new Vector2(-4.67500019F, 34.9760017F), new Vector2(-5.51599979F, 31.2339993F));
                    builder.AddCubicBezier(new Vector2(-5.98899984F, 29.1329994F), new Vector2(-6.25199986F, 26.7350006F), new Vector2(-6.29699993F, 24.1030006F));
                    builder.AddCubicBezier(new Vector2(-6.31699991F, 22.9619999F), new Vector2(-6.36999989F, 21.7450008F), new Vector2(-6.45499992F, 20.4599991F));
                    builder.AddCubicBezier(new Vector2(-8.18799973F, 22.6420002F), new Vector2(-9.70199966F, 24.6429996F), new Vector2(-10.9759998F, 26.441F));
                    builder.AddCubicBezier(new Vector2(-13.2250004F, 29.6119995F), new Vector2(-16.2730007F, 31.6499996F), new Vector2(-20.0359993F, 32.4949989F));
                    builder.AddCubicBezier(new Vector2(-23.2240009F, 33.2130013F), new Vector2(-26.2740002F, 32.5369987F), new Vector2(-29.1019993F, 30.4909992F));
                    builder.AddCubicBezier(new Vector2(-31.8589993F, 28.5049992F), new Vector2(-33.6119995F, 25.9249992F), new Vector2(-34.3089981F, 22.823F));
                    builder.AddCubicBezier(new Vector2(-34.9360008F, 20.0330009F), new Vector2(-34.2400017F, 16.8889999F), new Vector2(-32.2389984F, 13.4770002F));
                    builder.AddCubicBezier(new Vector2(-30.7590008F, 10.9469995F), new Vector2(-27.5289993F, 8.2159996F), new Vector2(-22.4300003F, 5.19399977F));
                    builder.AddCubicBezier(new Vector2(-28.1940002F, 4.55000019F), new Vector2(-32.2220001F, 3.47000003F), new Vector2(-34.6619987F, 1.92299998F));
                    builder.AddCubicBezier(new Vector2(-38.0219994F, -0.200000003F), new Vector2(-40.0489998F, -2.704F), new Vector2(-40.6819992F, -5.51800013F));
                    builder.AddCubicBezier(new Vector2(-41.3779984F, -8.61499977F), new Vector2(-40.8989983F, -11.698F), new Vector2(-39.2579994F, -14.6800003F));
                    builder.AddCubicBezier(new Vector2(-37.5740013F, -17.7399998F), new Vector2(-35.105999F, -19.6539993F), new Vector2(-31.9220009F, -20.3700008F));
                    builder.AddCubicBezier(new Vector2(-28.1749992F, -21.2119999F), new Vector2(-24.5690002F, -20.7240009F), new Vector2(-21.2029991F, -18.9190006F));
                    builder.AddCubicBezier(new Vector2(-19.2719994F, -17.8810005F), new Vector2(-17.0440006F, -16.7479992F), new Vector2(-14.5469999F, -15.5349998F));
                    builder.AddCubicBezier(new Vector2(-15.0220003F, -16.7390003F), new Vector2(-15.4980001F, -17.868F), new Vector2(-15.9709997F, -18.9139996F));
                    builder.AddCubicBezier(new Vector2(-17.0550003F, -21.3069992F), new Vector2(-17.8260002F, -23.5039997F), new Vector2(-18.2630005F, -25.4449997F));
                    builder.AddCubicBezier(new Vector2(-19.1030006F, -29.1819992F), new Vector2(-18.7810001F, -32.5239983F), new Vector2(-17.3069992F, -35.3790016F));
                    builder.AddCubicBezier(new Vector2(-15.7709999F, -38.3440018F), new Vector2(-13.118F, -40.2680016F), new Vector2(-9.42199993F, -41.0999985F));
                    builder.AddCubicBezier(new Vector2(-5.59399986F, -41.9599991F), new Vector2(-2.27900004F, -41.4420013F), new Vector2(0.430000007F, -39.5610008F));
                    builder.AddCubicBezier(new Vector2(3.08599997F, -37.7130013F), new Vector2(4.86100006F, -34.8650017F), new Vector2(5.70900011F, -31.0979996F));
                    builder.AddCubicBezier(new Vector2(6.22599983F, -28.7970009F), new Vector2(6.42299986F, -26.2539997F), new Vector2(6.29500008F, -23.5400009F));
                    builder.AddCubicBezier(new Vector2(6.24399996F, -22.4869995F), new Vector2(6.24700022F, -21.3999996F), new Vector2(6.30299997F, -20.2859993F));
                    builder.AddCubicBezier(new Vector2(8.24199963F, -22.7520008F), new Vector2(9.9090004F, -24.8250008F), new Vector2(11.349F, -26.566F));
                    builder.AddCubicBezier(new Vector2(13.7290001F, -29.4449997F), new Vector2(16.6499996F, -31.2919998F), new Vector2(20.0340004F, -32.0530014F));
                    builder.AddCubicBezier(new Vector2(23.2129993F, -32.769001F), new Vector2(26.2649994F, -32.0950012F), new Vector2(29.0990009F, -30.052F));
                    builder.AddCubicBezier(new Vector2(31.8610001F, -28.0529995F), new Vector2(33.6119995F, -25.4729996F), new Vector2(34.3079987F, -22.3799992F));
                    builder.AddCubicBezier(new Vector2(34.9430008F, -19.5559998F), new Vector2(34.137001F, -16.4069996F), new Vector2(31.9109993F, -13.0220003F));
                    builder.AddCubicBezier(new Vector2(30.302F, -10.5699997F), new Vector2(27.0760002F, -7.86100006F), new Vector2(22.1119995F, -4.80499983F));
                    builder.AddCubicBezier(new Vector2(27.8969994F, -4.24399996F), new Vector2(31.9799995F, -3.17799997F), new Vector2(34.5079994F, -1.57799995F));
                    builder.AddCubicBezier(new Vector2(37.9729996F, 0.614000022F), new Vector2(40.0489998F, 3.15100002F), new Vector2(40.6800003F, 5.96099997F));
                    builder.AddCubicBezier(new Vector2(41.3769989F, 9.05700016F), new Vector2(40.8989983F, 12.1389999F), new Vector2(39.2579994F, 15.1210003F));
                    builder.AddCubicBezier(new Vector2(37.5730019F, 18.1809998F), new Vector2(35.1049995F, 20.0960007F), new Vector2(31.9220009F, 20.8110008F));
                    builder.AddCubicBezier(new Vector2(28.5219994F, 21.5760002F), new Vector2(25.0680008F, 21.1110001F), new Vector2(21.6590004F, 19.4300003F));
                    builder.AddCubicBezier(new Vector2(19.5890007F, 18.4120007F), new Vector2(17.1989994F, 17.2210007F), new Vector2(14.4250002F, 15.823F));
                    builder.AddCubicBezier(new Vector2(14.849F, 16.8479996F), new Vector2(15.3100004F, 17.8260002F), new Vector2(15.8030005F, 18.7490005F));
                    builder.AddCubicBezier(new Vector2(17.0830002F, 21.1539993F), new Vector2(17.993F, 23.5349998F), new Vector2(18.5100002F, 25.8309994F));
                    builder.AddCubicBezier(new Vector2(19.3540001F, 29.5860004F), new Vector2(18.9839993F, 32.9510002F), new Vector2(17.4090004F, 35.8310013F));
                    builder.AddCubicBezier(new Vector2(15.7880001F, 38.7919998F), new Vector2(13.0190001F, 40.7330017F), new Vector2(9.17399979F, 41.5979996F));
                    builder.AddCubicBezier(new Vector2(8.10000038F, 41.8390007F), new Vector2(7.06599998F, 41.9599991F), new Vector2(6.07600021F, 41.9599991F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - PreComp layer: pin
            // - - - - - Layer aggregator
            // - - - - Layer: pin 4 Outlines
            // - - -  Offset:<802.752, 713.12396>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_68()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-5.00500011F, 13.8439999F));
                    builder.AddCubicBezier(new Vector2(-4.82600021F, 13.8439999F), new Vector2(-4.64599991F, 13.8690004F), new Vector2(-4.46899986F, 13.9219999F));
                    builder.AddCubicBezier(new Vector2(-3.75099993F, 14.1370001F), new Vector2(-3.23099995F, 14.7620001F), new Vector2(-3.14899993F, 15.507F));
                    builder.AddCubicBezier(new Vector2(-2.8039999F, 18.6399994F), new Vector2(-2.60800004F, 21.5100002F), new Vector2(-2.56500006F, 24.0380001F));
                    builder.AddCubicBezier(new Vector2(-2.523F, 26.4150009F), new Vector2(-2.29200006F, 28.5610008F), new Vector2(-1.875F, 30.4150009F));
                    builder.AddCubicBezier(new Vector2(-1.22300005F, 33.3160019F), new Vector2(0F, 35.4150009F), new Vector2(1.86199999F, 36.8320007F));
                    builder.AddCubicBezier(new Vector2(3.62199998F, 38.1739998F), new Vector2(5.74399996F, 38.5400009F), new Vector2(8.35400009F, 37.9539986F));
                    builder.AddCubicBezier(new Vector2(11.1450005F, 37.3269997F), new Vector2(13.0349998F, 36.0460014F), new Vector2(14.1330004F, 34.0390015F));
                    builder.AddCubicBezier(new Vector2(15.2749996F, 31.9500008F), new Vector2(15.5159998F, 29.5330009F), new Vector2(14.8669996F, 26.6499996F));
                    builder.AddCubicBezier(new Vector2(14.4239998F, 24.6800003F), new Vector2(13.632F, 22.6130009F), new Vector2(12.5100002F, 20.5049992F));
                    builder.AddCubicBezier(new Vector2(11.2480001F, 18.1459999F), new Vector2(10.1870003F, 15.4820004F), new Vector2(9.35900021F, 12.5909996F));
                    builder.AddCubicBezier(new Vector2(9.15400028F, 11.8769999F), new Vector2(9.39299965F, 11.1099997F), new Vector2(9.9659996F, 10.6370001F));
                    builder.AddCubicBezier(new Vector2(10.5380001F, 10.1639996F), new Vector2(11.3360004F, 10.0769997F), new Vector2(11.9980001F, 10.4130001F));
                    builder.AddCubicBezier(new Vector2(16.5249996F, 12.7110004F), new Vector2(20.3309994F, 14.618F), new Vector2(23.3080006F, 16.0809994F));
                    builder.AddCubicBezier(new Vector2(25.9720001F, 17.3950005F), new Vector2(28.5209999F, 17.75F), new Vector2(31.1019993F, 17.1690006F));
                    builder.AddCubicBezier(new Vector2(33.2260017F, 16.691F), new Vector2(34.8250008F, 15.434F), new Vector2(35.9869995F, 13.3219995F));
                    builder.AddCubicBezier(new Vector2(37.1920013F, 11.132F), new Vector2(37.5359993F, 8.98999977F), new Vector2(37.0390015F, 6.77899981F));
                    builder.AddCubicBezier(new Vector2(36.632F, 4.96999979F), new Vector2(35.1080017F, 3.22000003F), new Vector2(32.5110016F, 1.57700002F));
                    builder.AddCubicBezier(new Vector2(30.625F, 0.382999986F), new Vector2(26.1819992F, -1.11300004F), new Vector2(15.724F, -1.46200001F));
                    builder.AddCubicBezier(new Vector2(14.8809996F, -1.49100006F), new Vector2(14.1610003F, -2.08100009F), new Vector2(13.9689999F, -2.90199995F));
                    builder.AddCubicBezier(new Vector2(13.776F, -3.72300005F), new Vector2(14.158F, -4.57299995F), new Vector2(14.901F, -4.97300005F));
                    builder.AddCubicBezier(new Vector2(24.1849995F, -9.97299957F), new Vector2(27.5790005F, -13.2250004F), new Vector2(28.7910004F, -15.0719995F));
                    builder.AddCubicBezier(new Vector2(30.4400005F, -17.5799999F), new Vector2(31.0709991F, -19.7630005F), new Vector2(30.6669998F, -21.5610008F));
                    builder.AddCubicBezier(new Vector2(30.1700001F, -23.7700005F), new Vector2(28.941F, -25.5569992F), new Vector2(26.9120007F, -27.0249996F));
                    builder.AddCubicBezier(new Vector2(24.9580002F, -28.434F), new Vector2(22.9759998F, -28.8869991F), new Vector2(20.8540001F, -28.4099998F));
                    builder.AddCubicBezier(new Vector2(18.2609997F, -27.8269997F), new Vector2(16.0930004F, -26.4449997F), new Vector2(14.2259998F, -24.1860008F));
                    builder.AddCubicBezier(new Vector2(12.1540003F, -21.6819992F), new Vector2(9.60200024F, -18.4729996F), new Vector2(6.42399979F, -14.3739996F));
                    builder.AddCubicBezier(new Vector2(5.96999979F, -13.7869997F), new Vector2(5.21000004F, -13.5249996F), new Vector2(4.48999977F, -13.7080002F));
                    builder.AddCubicBezier(new Vector2(3.76999998F, -13.8900003F), new Vector2(3.22799993F, -14.4820004F), new Vector2(3.10700011F, -15.2139997F));
                    builder.AddCubicBezier(new Vector2(2.61899996F, -18.1779995F), new Vector2(2.43600011F, -21.0370007F), new Vector2(2.56599998F, -23.7169991F));
                    builder.AddCubicBezier(new Vector2(2.67799997F, -26.0949993F), new Vector2(2.50999999F, -28.3040009F), new Vector2(2.06599998F, -30.2789993F));
                    builder.AddCubicBezier(new Vector2(1.421F, -33.1459999F), new Vector2(0.189999998F, -35.1800003F), new Vector2(-1.70099998F, -36.4959984F));
                    builder.AddCubicBezier(new Vector2(-3.53999996F, -37.7729988F), new Vector2(-5.80000019F, -38.0890007F), new Vector2(-8.60400009F, -37.4570007F));
                    builder.AddCubicBezier(new Vector2(-11.21F, -36.8709984F), new Vector2(-12.9709997F, -35.6300011F), new Vector2(-13.9899998F, -33.6629982F));
                    builder.AddCubicBezier(new Vector2(-15.0640001F, -31.5830002F), new Vector2(-15.2709999F, -29.1609993F), new Vector2(-14.6199999F, -26.2639999F));
                    builder.AddCubicBezier(new Vector2(-14.2390003F, -24.5709991F), new Vector2(-13.5500002F, -22.6159992F), new Vector2(-12.5699997F, -20.4529991F));
                    builder.AddCubicBezier(new Vector2(-11.5249996F, -18.1450005F), new Vector2(-10.4729996F, -15.467F), new Vector2(-9.44499969F, -12.493F));
                    builder.AddCubicBezier(new Vector2(-9.20100021F, -11.7840004F), new Vector2(-9.40400028F, -10.9980001F), new Vector2(-9.96100044F, -10.4969997F));
                    builder.AddCubicBezier(new Vector2(-10.5179996F, -9.99499989F), new Vector2(-11.3199997F, -9.8739996F), new Vector2(-11.9980001F, -10.191F));
                    builder.AddCubicBezier(new Vector2(-16.2789993F, -12.1870003F), new Vector2(-19.9699993F, -14.0179996F), new Vector2(-22.9689999F, -15.6300001F));
                    builder.AddCubicBezier(new Vector2(-25.5559998F, -17.0170002F), new Vector2(-28.2189999F, -17.3759995F), new Vector2(-31.1040001F, -16.7280006F));
                    builder.AddCubicBezier(new Vector2(-33.2290001F, -16.25F), new Vector2(-34.8250008F, -14.9910002F), new Vector2(-35.9869995F, -12.8800001F));
                    builder.AddCubicBezier(new Vector2(-37.1920013F, -10.6899996F), new Vector2(-37.5359993F, -8.55000019F), new Vector2(-37.0390015F, -6.33699989F));
                    builder.AddCubicBezier(new Vector2(-36.6310005F, -4.5250001F), new Vector2(-35.1609993F, -2.80599999F), new Vector2(-32.6660004F, -1.23000002F));
                    builder.AddCubicBezier(new Vector2(-30.8400002F, -0.0729999989F), new Vector2(-26.4570007F, 1.41900003F), new Vector2(-15.9379997F, 1.96200001F));
                    builder.AddCubicBezier(new Vector2(-15.0939999F, 2.00600004F), new Vector2(-14.3859997F, 2.61199999F), new Vector2(-14.21F, 3.43899989F));
                    builder.AddCubicBezier(new Vector2(-14.0340004F, 4.26499987F), new Vector2(-14.434F, 5.10699987F), new Vector2(-15.1879997F, 5.49100018F));
                    builder.AddCubicBezier(new Vector2(-24.6660004F, 10.316F), new Vector2(-27.941F, 13.5220003F), new Vector2(-29.0179996F, 15.3629999F));
                    builder.AddCubicBezier(new Vector2(-30.5249996F, 17.934F), new Vector2(-31.0799999F, 20.1679993F), new Vector2(-30.6669998F, 22.0039997F));
                    builder.AddCubicBezier(new Vector2(-30.1690006F, 24.2199993F), new Vector2(-28.9419994F, 26.0060005F), new Vector2(-26.9169998F, 27.4650002F));
                    builder.AddCubicBezier(new Vector2(-24.9640007F, 28.8780003F), new Vector2(-22.9810009F, 29.3320007F), new Vector2(-20.8540001F, 28.8530006F));
                    builder.AddCubicBezier(new Vector2(-17.9780006F, 28.2070007F), new Vector2(-15.7440004F, 26.7110004F), new Vector2(-14.0209999F, 24.2810001F));
                    builder.AddCubicBezier(new Vector2(-12.0279999F, 21.4710007F), new Vector2(-9.47799969F, 18.1879997F), new Vector2(-6.44299984F, 14.5209999F));
                    builder.AddCubicBezier(new Vector2(-6.08199978F, 14.085F), new Vector2(-5.55200005F, 13.8439999F), new Vector2(-5.00500011F, 13.8439999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: security
            // - - - Shape tree root for layer: security Outlines
            // - -  Offset:<188.515, 565.128>
            CanvasGeometry Geometry_69()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-20.3910007F, -194.182999F));
                    builder.AddCubicBezier(new Vector2(-62.2680016F, -156.994995F), new Vector2(-104.827003F, -132.328003F), new Vector2(-162.809006F, -113.124001F));
                    builder.AddCubicBezier(new Vector2(-162.395996F, -109.325996F), new Vector2(-160.095001F, -88.1719971F), new Vector2(-149.548004F, 8.81400013F));
                    builder.AddCubicBezier(new Vector2(-135.477997F, 138.190994F), new Vector2(0.296000004F, 186.755997F), new Vector2(21.3630009F, 194.182999F));
                    builder.AddCubicBezier(new Vector2(39.7420006F, 183.462997F), new Vector2(162.809006F, 105.564003F), new Vector2(148.738998F, -23.8129997F));
                    builder.AddCubicBezier(new Vector2(138.192001F, -120.799004F), new Vector2(135.891006F, -141.953003F), new Vector2(135.477997F, -145.751007F));
                    builder.AddCubicBezier(new Vector2(74.7310028F, -151.968002F), new Vector2(23.5900002F, -168.675995F), new Vector2(-20.3910007F, -194.182999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: security
            // - - - Shape tree root for layer: security Outlines
            // - -  Offset:<188.515, 565.128>
            // - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_70()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_71(), Geometry_72() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - PreComp layer: security
            // - - - - Shape tree root for layer: security Outlines
            // - - -  Offset:<188.515, 565.128>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_71()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(21.2409992F, 196.126007F));
                    builder.AddCubicBezier(new Vector2(21.0319996F, 196.126007F), new Vector2(20.8220005F, 196.091003F), new Vector2(20.6200008F, 196.020004F));
                    builder.AddCubicBezier(new Vector2(-20.3710003F, 181.567993F), new Vector2(-50.1819992F, 162.358994F), new Vector2(-67.9710007F, 148.789993F));
                    builder.AddCubicBezier(new Vector2(-89.947998F, 132.026993F), new Vector2(-107.974998F, 113.059998F), new Vector2(-121.552002F, 92.4160004F));
                    builder.AddCubicBezier(new Vector2(-138.177994F, 67.137001F), new Vector2(-148.261993F, 39.1030006F), new Vector2(-151.526001F, 9.09200001F));
                    builder.AddLine(new Vector2(-164.787003F, -112.846001F));
                    builder.AddCubicBezier(new Vector2(-164.882004F, -113.721001F), new Vector2(-164.354004F, -114.542999F), new Vector2(-163.518005F, -114.819F));
                    builder.AddCubicBezier(new Vector2(-106.610001F, -133.667999F), new Vector2(-64.211998F, -157.796997F), new Vector2(-21.7530003F, -195.501999F));
                    builder.AddCubicBezier(new Vector2(-21.1509991F, -196.037003F), new Vector2(-20.2740002F, -196.125F), new Vector2(-19.5769997F, -195.720993F));
                    builder.AddCubicBezier(new Vector2(2.5769999F, -182.873001F), new Vector2(26.5559998F, -172.348007F), new Vector2(51.6949997F, -164.436996F));
                    builder.AddCubicBezier(new Vector2(77.7089996F, -156.251999F), new Vector2(105.919998F, -150.563004F), new Vector2(135.544998F, -147.531998F));
                    builder.AddCubicBezier(new Vector2(136.421005F, -147.442001F), new Vector2(137.117004F, -146.751999F), new Vector2(137.212006F, -145.876999F));
                    builder.AddLine(new Vector2(150.472F, -23.9389992F));
                    builder.AddCubicBezier(new Vector2(164.882004F, 108.564003F), new Vector2(36.8300018F, 187.326996F), new Vector2(22.1819992F, 195.871994F));
                    builder.AddCubicBezier(new Vector2(21.8929996F, 196.039993F), new Vector2(21.5680008F, 196.126007F), new Vector2(21.2409992F, 196.126007F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - PreComp layer: security
            // - - - - Shape tree root for layer: security Outlines
            // - - -  Offset:<188.515, 565.128>
            // - - Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_72()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-160.912994F, -111.751999F));
                    builder.AddLine(new Vector2(-147.815002F, 8.68799973F));
                    builder.AddCubicBezier(new Vector2(-144.615997F, 38.1049995F), new Vector2(-134.729996F, 65.5849991F), new Vector2(-118.432999F, 90.3649979F));
                    builder.AddCubicBezier(new Vector2(-105.086998F, 110.655998F), new Vector2(-87.3479996F, 129.313995F), new Vector2(-65.7060013F, 145.822006F));
                    builder.AddCubicBezier(new Vector2(-48.2490005F, 159.138F), new Vector2(-19.0690002F, 177.953995F), new Vector2(21.0450001F, 192.210007F));
                    builder.AddCubicBezier(new Vector2(38.5830002F, 181.828003F), new Vector2(160.699005F, 104.625999F), new Vector2(146.761002F, -23.5349998F));
                    builder.AddLine(new Vector2(133.662994F, -143.973999F));
                    builder.AddCubicBezier(new Vector2(104.335999F, -147.069F), new Vector2(76.3880005F, -152.753006F), new Vector2(50.5740013F, -160.876007F));
                    builder.AddCubicBezier(new Vector2(25.6140003F, -168.729996F), new Vector2(1.78299999F, -179.136993F), new Vector2(-20.2830009F, -191.817993F));
                    builder.AddCubicBezier(new Vector2(-62.4539986F, -154.578003F), new Vector2(-104.655998F, -130.550995F), new Vector2(-160.912994F, -111.751999F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - PreComp layer: security
            // - - - Shape tree root for layer: security Outlines
            // - -  Offset:<188.515, 565.128>
            CanvasGeometry Geometry_73()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-47.4910011F, 94.6900024F));
                    builder.AddCubicBezier(new Vector2(-48.4309998F, 94.6900024F), new Vector2(-49.2400017F, 93.9810028F), new Vector2(-49.3440018F, 93.0250015F));
                    builder.AddLine(new Vector2(-62.6049995F, -28.9130001F));
                    builder.AddCubicBezier(new Vector2(-62.7010002F, -29.7880001F), new Vector2(-62.1720009F, -30.6100006F), new Vector2(-61.3370018F, -30.8869991F));
                    builder.AddCubicBezier(new Vector2(-13.4110003F, -46.7599983F), new Vector2(23.8409996F, -66.2419968F), new Vector2(59.4469986F, -94.0550003F));
                    builder.AddCubicBezier(new Vector2(60.2599983F, -94.6900024F), new Vector2(61.4319992F, -94.5449982F), new Vector2(62.0670013F, -93.7330017F));
                    builder.AddCubicBezier(new Vector2(62.7010002F, -92.9199982F), new Vector2(62.5569992F, -91.7470016F), new Vector2(61.7449989F, -91.112999F));
                    builder.AddCubicBezier(new Vector2(26.1410007F, -63.3019981F), new Vector2(-11.0679998F, -43.7459984F), new Vector2(-58.730999F, -27.8190002F));
                    builder.AddLine(new Vector2(-45.6329994F, 92.6210022F));
                    builder.AddCubicBezier(new Vector2(-45.5209999F, 93.6460037F), new Vector2(-46.262001F, 94.5670013F), new Vector2(-47.2869987F, 94.6790009F));
                    builder.AddCubicBezier(new Vector2(-47.3549995F, 94.685997F), new Vector2(-47.4239998F, 94.6900024F), new Vector2(-47.4910011F, 94.6900024F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - - PreComp layer: security
            // - - - Shape tree root for layer: check Outlines
            // - -  Offset:<267.05103, 690.245>
            CanvasGeometry Geometry_74()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(82.0139999F, -49.6669998F));
                    builder.AddLine(new Vector2(62.0509987F, -65.5559998F));
                    builder.AddCubicBezier(new Vector2(61.9640007F, -65.6259995F), new Vector2(56.9650002F, -59.0960007F), new Vector2(56.8950005F, -59.0079994F));
                    builder.AddLine(new Vector2(-13.0930004F, 28.9220009F));
                    builder.AddCubicBezier(new Vector2(-13.1630001F, 29.0090008F), new Vector2(-13.2910004F, 29.0240002F), new Vector2(-13.3780003F, 28.9540005F));
                    builder.AddLine(new Vector2(-65.8570023F, -12.8179998F));
                    builder.AddCubicBezier(new Vector2(-65.9440002F, -12.8870001F), new Vector2(-66.0719986F, -12.8730001F), new Vector2(-66.1409988F, -12.7849998F));
                    builder.AddLine(new Vector2(-82.0319977F, 7.17399979F));
                    builder.AddCubicBezier(new Vector2(-82.1019974F, 7.26200008F), new Vector2(-82.086998F, 7.38800001F), new Vector2(-81.9990005F, 7.45800018F));
                    builder.AddLine(new Vector2(-29.3600006F, 49.3540001F));
                    builder.AddLine(new Vector2(-29.3630009F, 49.3580017F));
                    builder.AddCubicBezier(new Vector2(-29.4319992F, 49.4449997F), new Vector2(-29.4179993F, 49.5730019F), new Vector2(-29.3299999F, 49.6430016F));
                    builder.AddLine(new Vector2(-9.36800003F, 65.5329971F));
                    builder.AddCubicBezier(new Vector2(-9.27999973F, 65.6019974F), new Vector2(-9.15200043F, 65.5879974F), new Vector2(-9.08300018F, 65.5F));
                    builder.AddLine(new Vector2(-8.92599964F, 65.6259995F));
                    builder.AddLine(new Vector2(7.09299994F, 45.5009995F));
                    builder.AddCubicBezier(new Vector2(7.16099977F, 45.4150009F), new Vector2(7.14799976F, 45.2910004F), new Vector2(7.0630002F, 45.2200012F));
                    builder.AddLine(new Vector2(7.05999994F, 45.2169991F));
                    builder.AddLine(new Vector2(77.1750031F, -42.8660011F));
                    builder.AddCubicBezier(new Vector2(77.2450027F, -42.9529991F), new Vector2(82.1019974F, -49.5970001F), new Vector2(82.0139999F, -49.6669998F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - - PreComp layer: security
            // - - - Shape tree root for layer: check Outlines
            // - -  Offset:<267.05103, 690.245>
            // - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_75()
            {
                var result = CanvasGeometry.CreateGroup(
                    null,
                    new CanvasGeometry[] { Geometry_76(), Geometry_77(), Geometry_78() },
                    CanvasFilledRegionDetermination.Winding);
                return result;
            }

            // - - - - - - - - - - - PreComp layer: security
            // - - - - Shape tree root for layer: check Outlines
            // - - -  Offset:<267.05103, 690.245>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_76()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-9.04899979F, 67.4820023F));
                    builder.AddCubicBezier(new Vector2(-9.19999981F, 67.4820023F), new Vector2(-9.34799957F, 67.4629974F), new Vector2(-9.49300003F, 67.427002F));
                    builder.AddCubicBezier(new Vector2(-9.91399956F, 67.4020004F), new Vector2(-10.3170004F, 67.2480011F), new Vector2(-10.6529999F, 66.9800034F));
                    builder.AddLine(new Vector2(-30.6149998F, 51.0909996F));
                    builder.AddCubicBezier(new Vector2(-30.8640003F, 50.8919983F), new Vector2(-31.0599995F, 50.644001F), new Vector2(-31.1930008F, 50.3650017F));
                    builder.AddLine(new Vector2(-83.2850037F, 8.90799999F));
                    builder.AddCubicBezier(new Vector2(-84.177002F, 8.19699955F), new Vector2(-84.3239975F, 6.8920002F), new Vector2(-83.6149979F, 5.99900007F));
                    builder.AddLine(new Vector2(-67.7249985F, -13.9610004F));
                    builder.AddCubicBezier(new Vector2(-67.0130005F, -14.8540001F), new Vector2(-65.7080002F, -15F), new Vector2(-64.8160019F, -14.29F));
                    builder.AddLine(new Vector2(-13.6400003F, 26.4449997F));
                    builder.AddLine(new Vector2(55.3129997F, -60.1819992F));
                    builder.AddLine(new Vector2(55.5099983F, -60.4399986F));
                    builder.AddCubicBezier(new Vector2(55.9920006F, -61.0680008F), new Vector2(57.1949997F, -62.6349983F), new Vector2(58.2960014F, -64.0469971F));
                    builder.AddCubicBezier(new Vector2(58.8510017F, -64.7590027F), new Vector2(59.3800011F, -65.4319992F), new Vector2(59.7789993F, -65.9280014F));
                    builder.AddCubicBezier(new Vector2(60.5719986F, -66.9150009F), new Vector2(60.9000015F, -67.3239975F), new Vector2(61.7000008F, -67.4219971F));
                    builder.AddCubicBezier(new Vector2(62.1969986F, -67.4820023F), new Vector2(62.6980019F, -67.3410034F), new Vector2(63.0900002F, -67.0299988F));
                    builder.AddLine(new Vector2(83.0550003F, -51.1389999F));
                    builder.AddCubicBezier(new Vector2(83.3720016F, -50.8860016F), new Vector2(84.3249969F, -49.9379997F), new Vector2(83.2699966F, -48.3409996F));
                    builder.AddCubicBezier(new Vector2(83.1380005F, -48.1419983F), new Vector2(82.9459991F, -47.8610001F), new Vector2(82.711998F, -47.5270004F));
                    builder.AddCubicBezier(new Vector2(82.310997F, -46.9550018F), new Vector2(81.75F, -46.1699982F), new Vector2(81.0459976F, -45.1930008F));
                    builder.AddCubicBezier(new Vector2(79.9759979F, -43.7099991F), new Vector2(78.6029968F, -41.8279991F), new Vector2(78.5139999F, -41.7159996F));
                    builder.AddLine(new Vector2(8.82600021F, 45.8310013F));
                    builder.AddCubicBezier(new Vector2(8.75899982F, 46.1230011F), new Vector2(8.62699986F, 46.4049988F), new Vector2(8.4289999F, 46.6539993F));
                    builder.AddLine(new Vector2(-7.58799982F, 66.7770004F));
                    builder.AddCubicBezier(new Vector2(-7.89799976F, 67.1660004F), new Vector2(-8.35200024F, 67.4160004F), new Vector2(-8.84700012F, 67.4700012F));
                    builder.AddCubicBezier(new Vector2(-8.91399956F, 67.4769974F), new Vector2(-8.98200035F, 67.4820023F), new Vector2(-9.04899979F, 67.4820023F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - - - PreComp layer: security
            // - - - - Shape tree root for layer: check Outlines
            // - - -  Offset:<267.05103, 690.245>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_77()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-27.7789993F, 48.5769997F));
                    builder.AddLine(new Vector2(-9.47200012F, 63.1500015F));
                    builder.AddLine(new Vector2(5.11000013F, 44.8289986F));
                    builder.AddCubicBezier(new Vector2(5.16699982F, 44.5499992F), new Vector2(5.28800011F, 44.2799988F), new Vector2(5.47700024F, 44.0419998F));
                    builder.AddLine(new Vector2(75.5759964F, -44.0219994F));
                    builder.AddCubicBezier(new Vector2(75.927002F, -44.4900017F), new Vector2(78.125F, -47.507F), new Vector2(79.3860016F, -49.2879982F));
                    builder.AddLine(new Vector2(62.1959991F, -62.9710007F));
                    builder.AddCubicBezier(new Vector2(61.5040016F, -62.0940018F), new Vector2(60.3590012F, -60.625F), new Vector2(58.4690018F, -58.1650009F));
                    builder.AddCubicBezier(new Vector2(58.3260002F, -57.9790001F), new Vector2(58.2410011F, -57.868F), new Vector2(58.2319984F, -57.8569984F));
                    builder.AddLine(new Vector2(-11.7559996F, 30.0720005F));
                    builder.AddCubicBezier(new Vector2(-12.1000004F, 30.5039997F), new Vector2(-12.5909996F, 30.7770004F), new Vector2(-13.1400003F, 30.8400002F));
                    builder.AddCubicBezier(new Vector2(-13.6899996F, 30.9009991F), new Vector2(-14.2309999F, 30.7460003F), new Vector2(-14.6630001F, 30.4009991F));
                    builder.AddLine(new Vector2(-65.8389969F, -10.3330002F));
                    builder.AddLine(new Vector2(-79.6569977F, 7.02199984F));
                    builder.AddLine(new Vector2(-28.3199997F, 47.882F));
                    builder.AddCubicBezier(new Vector2(-28.0790005F, 48.0740013F), new Vector2(-27.8969994F, 48.3139992F), new Vector2(-27.7789993F, 48.5769997F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            // - - - - - - - - - - - PreComp layer: security
            // - - - - Shape tree root for layer: check Outlines
            // - - -  Offset:<267.05103, 690.245>
            // - - Path 3+Path 2+Path 1.PathGeometry
            CanvasGeometry Geometry_78()
            {
                CanvasGeometry result;
                using (var builder = new CanvasPathBuilder(null))
                {
                    builder.SetFilledRegionDetermination(CanvasFilledRegionDetermination.Winding);
                    builder.BeginFigure(new Vector2(-28.0100002F, 50.4900017F));
                    builder.AddCubicBezier(new Vector2(-28.0139999F, 50.4959984F), new Vector2(-28.0189991F, 50.5019989F), new Vector2(-28.0230007F, 50.5079994F));
                    builder.AddCubicBezier(new Vector2(-28.0189991F, 50.5019989F), new Vector2(-28.0139999F, 50.4949989F), new Vector2(-28.0100002F, 50.4900017F));
                    builder.EndFigure(CanvasFigureLoop.Closed);
                    result = CanvasGeometry.CreatePath(builder);
                }
                return result;
            }

            CompositionColorBrush ColorBrush_AlmostBlack_FF101111()
            {
                return (_colorBrush_AlmostBlack_FF101111 == null)
                    ? _colorBrush_AlmostBlack_FF101111 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x10, 0x11, 0x11))
                    : _colorBrush_AlmostBlack_FF101111;
            }

            CompositionColorBrush ColorBrush_AlmostCrimson_FFF52B37()
            {
                return (_colorBrush_AlmostCrimson_FFF52B37 == null)
                    ? _colorBrush_AlmostCrimson_FFF52B37 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF5, 0x2B, 0x37))
                    : _colorBrush_AlmostCrimson_FFF52B37;
            }

            CompositionColorBrush ColorBrush_AlmostDarkViolet_FF8613CC()
            {
                return (_colorBrush_AlmostDarkViolet_FF8613CC == null)
                    ? _colorBrush_AlmostDarkViolet_FF8613CC = _c.CreateColorBrush(Color.FromArgb(0xFF, 0x86, 0x13, 0xCC))
                    : _colorBrush_AlmostDarkViolet_FF8613CC;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Offset:<386.154, 648.788>
            CompositionColorBrush ColorBrush_AlmostDeepSkyBlue_FF07AAFF()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x07, 0xAA, 0xFF));
            }

            CompositionColorBrush ColorBrush_AlmostFuchsia_FFF600FA()
            {
                return (_colorBrush_AlmostFuchsia_FFF600FA == null)
                    ? _colorBrush_AlmostFuchsia_FFF600FA = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF6, 0x00, 0xFA))
                    : _colorBrush_AlmostFuchsia_FFF600FA;
            }

            // - Layer aggregator
            // Offset:<600, 600>
            CompositionColorBrush ColorBrush_AlmostFuchsia_FFF600FB()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xF6, 0x00, 0xFB));
            }

            CompositionColorBrush ColorBrush_AlmostGold_FFFFC500()
            {
                return (_colorBrush_AlmostGold_FFFFC500 == null)
                    ? _colorBrush_AlmostGold_FFFFC500 = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xC5, 0x00))
                    : _colorBrush_AlmostGold_FFFFC500;
            }

            // - - - PreComp layer: security
            // - Shape tree root for layer: security Outlines
            // Offset:<188.515, 565.128>
            CompositionColorBrush ColorBrush_AlmostLimeGreen_FF00D541()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0xD5, 0x41));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            CompositionColorBrush ColorBrush_Black()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0x00, 0x00, 0x00));
            }

            // - - - - - - - - - PreComp layer: security
            // - - Shape tree root for layer: Shape Layer 1
            // ShapeGroup: Ellipse 1 Scale:1.20235,1.20235, Offset:<-250, 146.5>
            CompositionColorBrush ColorBrush_Red()
            {
                return _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0x00, 0x00));
            }

            // - Layer aggregator
            // Offset:<71.746, 156.55103>
            CompositionColorBrush ColorBrush_SemiTransparentAlmostTurquoise_3329EFCF()
            {
                return _c.CreateColorBrush(Color.FromArgb(0x33, 0x29, 0xEF, 0xCF));
            }

            CompositionColorBrush ColorBrush_White()
            {
                return (_colorBrush_White == null)
                    ? _colorBrush_White = _c.CreateColorBrush(Color.FromArgb(0xFF, 0xFF, 0xFF, 0xFF))
                    : _colorBrush_White;
            }

            // Layer aggregator
            CompositionContainerShape ContainerShape_0()
            {
                if (_containerShape_0 != null) { return _containerShape_0; }
                var result = _containerShape_0 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(307.942993F, 43.4480019F);
                result.Offset = new Vector2(789.118042F, 838.864014F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 5 Offset:<307.943, 43.448>
                shapes.Add(SpriteShape_05());
                // ShapeGroup: Group 4 Offset:<308.608, 28.985>
                shapes.Add(SpriteShape_06());
                // ShapeGroup: Group 3 Offset:<308.604, 52.345>
                shapes.Add(SpriteShape_07());
                // ShapeGroup: Group 2 Offset:<308.609, 52.336>
                shapes.Add(SpriteShape_08());
                // ShapeGroup: Group 1 Offset:<308.608, 52.335>
                shapes.Add(SpriteShape_09());
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            CompositionContainerShape ContainerShape_1()
            {
                if (_containerShape_1 != null) { return _containerShape_1; }
                var result = _containerShape_1 = _c.CreateContainerShape();
                result.CenterPoint = new Vector2(278.619995F, 303.579987F);
                var shapes = result.Shapes;
                // ShapeGroup: Group 3 Offset:<155.12, 152.58>
                shapes.Add(SpriteShape_11());
                // ShapeGroup: Group 2 Offset:<155.125, 152.58>
                shapes.Add(SpriteShape_12());
                // ShapeGroup: Group 1 Offset:<229.344, 75.241>
                shapes.Add(SpriteShape_13());
                return result;
            }

            // - - PreComp layer: pin
            // Layer aggregator
            // Layer: pin 1 Outlines
            CompositionContainerShape ContainerShape_2()
            {
                if (_containerShape_2 != null) { return _containerShape_2; }
                var result = _containerShape_2 = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                // Offset:<512.136, 778.472>
                shapes.Add(SpriteShape_28());
                // Offset:<512.136, 778.472>
                shapes.Add(SpriteShape_29());
                return result;
            }

            // - - PreComp layer: pin
            // Layer aggregator
            // Layer: pin 2 Outlines
            CompositionContainerShape ContainerShape_3()
            {
                if (_containerShape_3 != null) { return _containerShape_3; }
                var result = _containerShape_3 = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                // Offset:<609.007, 756.68896>
                shapes.Add(SpriteShape_30());
                // Offset:<609.007, 756.68896>
                shapes.Add(SpriteShape_31());
                return result;
            }

            // - - PreComp layer: pin
            // Layer aggregator
            // Layer: pin 3 Outlines
            CompositionContainerShape ContainerShape_4()
            {
                if (_containerShape_4 != null) { return _containerShape_4; }
                var result = _containerShape_4 = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                // Offset:<705.88, 734.908>
                shapes.Add(SpriteShape_32());
                // Offset:<705.88, 734.908>
                shapes.Add(SpriteShape_33());
                return result;
            }

            // - - PreComp layer: pin
            // Layer aggregator
            // Layer: pin 4 Outlines
            CompositionContainerShape ContainerShape_5()
            {
                if (_containerShape_5 != null) { return _containerShape_5; }
                var result = _containerShape_5 = _c.CreateContainerShape();
                result.Scale = new Vector2(0F, 0F);
                var shapes = result.Shapes;
                // Offset:<802.752, 713.12396>
                shapes.Add(SpriteShape_34());
                // Offset:<802.752, 713.12396>
                shapes.Add(SpriteShape_35());
                return result;
            }

            // - - - - - - - PreComp layer: security
            // Shape tree root for layer: Shape Layer 1
            CompositionContainerShape ContainerShape_6()
            {
                if (_containerShape_6 != null) { return _containerShape_6; }
                var result = _containerShape_6 = _c.CreateContainerShape();
                // ShapeGroup: Ellipse 1 Scale:1.20235,1.20235, Offset:<-250, 146.5>
                result.Shapes.Add(SpriteShape_41());
                return result;
            }

            // - - PreComp layer: security
            CompositionEffectBrush EffectBrush()
            {
                var effectFactory = EffectFactory();
                var result = effectFactory.CreateBrush();
                result.SetSourceParameter("destination", SurfaceBrush_0());
                result.SetSourceParameter("source", SurfaceBrush_1());
                return result;
            }

            // - - - PreComp layer: security
            CompositionEffectFactory EffectFactory()
            {
                var compositeEffect = new CompositeEffect();
                compositeEffect.Mode = CanvasComposite.DestinationIn;
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("destination"));
                compositeEffect.Sources.Add(new CompositionEffectSourceParameter("source"));
                var result = _c.CreateEffectFactory(compositeEffect);
                return result;
            }

            // - - - - - - - - - PreComp layer: security
            // - - Shape tree root for layer: Shape Layer 1
            // ShapeGroup: Ellipse 1 Scale:1.20235,1.20235, Offset:<-250, 146.5>
            // Ellipse Path 1.EllipseGeometry
            CompositionEllipseGeometry Ellipse_82()
            {
                var result = _c.CreateEllipseGeometry();
                result.Radius = new Vector2(82F, 82F);
                return result;
            }

            // - Layer aggregator
            // Offset:<71.746, 156.55103>
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_00()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_00()));
            }

            // - Layer aggregator
            // Offset:<71.746, 156.55103>
            CompositionPathGeometry PathGeometry_01()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_03()));
            }

            // - Layer aggregator
            // Offset:<71.746, 156.55103>
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_02()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_04()));
            }

            // - Layer aggregator
            // Offset:<71.746, 156.55103>
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_03()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_07()));
            }

            // - Layer aggregator
            // Offset:<71.746, 156.55103>
            CompositionPathGeometry PathGeometry_04()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_10()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 5 Offset:<307.943, 43.448>
            CompositionPathGeometry PathGeometry_05()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_11()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 4 Offset:<308.608, 28.985>
            CompositionPathGeometry PathGeometry_06()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_12()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 3 Offset:<308.604, 52.345>
            CompositionPathGeometry PathGeometry_07()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_13()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 2 Offset:<308.609, 52.336>
            CompositionPathGeometry PathGeometry_08()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_14()));
            }

            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<308.608, 52.335>
            // Path 6+Path 5+Path 4+Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_09()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_15()));
            }

            // - Layer aggregator
            // Offset:<600, 600>
            CompositionPathGeometry PathGeometry_10()
            {
                if (_pathGeometry_10 != null) { return _pathGeometry_10; }
                var result = _pathGeometry_10 = _c.CreatePathGeometry(new CompositionPath(Geometry_22()));
                return result;
            }

            // - - - - PreComp layer: lock
            // - - Layer aggregator
            // ShapeGroup: Group 3 Offset:<155.12, 152.58>
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_11()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_23()));
            }

            // - - - - PreComp layer: lock
            // - - Layer aggregator
            // ShapeGroup: Group 2 Offset:<155.125, 152.58>
            CompositionPathGeometry PathGeometry_12()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_26()));
            }

            // - - - - PreComp layer: lock
            // - - Layer aggregator
            // ShapeGroup: Group 1 Offset:<229.344, 75.241>
            CompositionPathGeometry PathGeometry_13()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_27()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            CompositionPathGeometry PathGeometry_14()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_28()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_15()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_29()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            CompositionPathGeometry PathGeometry_16()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_32()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            // Path 4+Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_17()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_33()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            CompositionPathGeometry PathGeometry_18()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_38()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_19()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_39()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            CompositionPathGeometry PathGeometry_20()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_42()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            CompositionPathGeometry PathGeometry_21()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_43()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            CompositionPathGeometry PathGeometry_22()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_44()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            CompositionPathGeometry PathGeometry_23()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_45()));
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset:<368.62503, 449.718>
            CompositionPathGeometry PathGeometry_24()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_46()));
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Offset:<386.154, 648.788>
            CompositionPathGeometry PathGeometry_25()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_47()));
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Offset:<386.154, 648.788>
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_26()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_48()));
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Offset:<386.154, 648.788>
            CompositionPathGeometry PathGeometry_27()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_51()));
            }

            // - - - - PreComp layer: pin
            // - - Layer aggregator
            // - Layer: pin 1 Outlines
            // Offset:<512.136, 778.472>
            CompositionPathGeometry PathGeometry_28()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_52()));
            }

            // - - - - PreComp layer: pin
            // - - Layer aggregator
            // - Layer: pin 1 Outlines
            // Offset:<512.136, 778.472>
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_29()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_53()));
            }

            // - - - - PreComp layer: pin
            // - - Layer aggregator
            // - Layer: pin 2 Outlines
            // Offset:<609.007, 756.68896>
            CompositionPathGeometry PathGeometry_30()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_57()));
            }

            // - - - - PreComp layer: pin
            // - - Layer aggregator
            // - Layer: pin 2 Outlines
            // Offset:<609.007, 756.68896>
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_31()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_58()));
            }

            // - - - - PreComp layer: pin
            // - - Layer aggregator
            // - Layer: pin 3 Outlines
            // Offset:<705.88, 734.908>
            CompositionPathGeometry PathGeometry_32()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_61()));
            }

            // - - - - PreComp layer: pin
            // - - Layer aggregator
            // - Layer: pin 3 Outlines
            // Offset:<705.88, 734.908>
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_33()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_62()));
            }

            // - - - - PreComp layer: pin
            // - - Layer aggregator
            // - Layer: pin 4 Outlines
            // Offset:<802.752, 713.12396>
            CompositionPathGeometry PathGeometry_34()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_65()));
            }

            // - - - - PreComp layer: pin
            // - - Layer aggregator
            // - Layer: pin 4 Outlines
            // Offset:<802.752, 713.12396>
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_35()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_66()));
            }

            // - - - PreComp layer: security
            // - Shape tree root for layer: security Outlines
            // Offset:<188.515, 565.128>
            CompositionPathGeometry PathGeometry_36()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_69()));
            }

            // - - - PreComp layer: security
            // - Shape tree root for layer: security Outlines
            // Offset:<188.515, 565.128>
            // Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_37()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_70()));
            }

            // - - - PreComp layer: security
            // - Shape tree root for layer: security Outlines
            // Offset:<188.515, 565.128>
            CompositionPathGeometry PathGeometry_38()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_73()));
            }

            // - - - - - - - - PreComp layer: security
            // - Shape tree root for layer: check Outlines
            // Offset:<267.05103, 690.245>
            CompositionPathGeometry PathGeometry_39()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_74()));
            }

            // - - - - - - - - PreComp layer: security
            // - Shape tree root for layer: check Outlines
            // Offset:<267.05103, 690.245>
            // Path 3+Path 2+Path 1.PathGeometry
            CompositionPathGeometry PathGeometry_40()
            {
                return _c.CreatePathGeometry(new CompositionPath(Geometry_75()));
            }

            // Layer aggregator
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_00()
            {
                // Offset:<71.746, 156.55103>
                var geometry = PathGeometry_00();
                if (_spriteShape_00 != null) { return _spriteShape_00; }
                var result = _spriteShape_00 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 71.7460022F, 156.551025F), ColorBrush_AlmostCrimson_FFF52B37());;
                result.Offset = new Vector2(974.695007F, 31.1809998F);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_01()
            {
                // Offset:<71.746, 156.55103>
                var geometry = PathGeometry_01();
                if (_spriteShape_01 != null) { return _spriteShape_01; }
                var result = _spriteShape_01 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 71.7460022F, 156.551025F), ColorBrush_AlmostDarkViolet_FF8613CC());;
                result.Offset = new Vector2(103.128998F, 162.945999F);
                return result;
            }

            // Layer aggregator
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_02()
            {
                // Offset:<71.746, 156.55103>
                var geometry = PathGeometry_02();
                if (_spriteShape_02 != null) { return _spriteShape_02; }
                var result = _spriteShape_02 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 71.7460022F, 156.551025F), ColorBrush_AlmostCrimson_FFF52B37());;
                result.Offset = new Vector2(30.1350002F, 255.977997F);
                return result;
            }

            // Layer aggregator
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_03()
            {
                // Offset:<71.746, 156.55103>
                var geometry = PathGeometry_03();
                if (_spriteShape_03 != null) { return _spriteShape_03; }
                var result = _spriteShape_03 = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 71.7460022F, 156.551025F), ColorBrush_AlmostDarkViolet_FF8613CC());;
                result.Offset = new Vector2(219.173996F, 891.242981F);
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_04()
            {
                // Offset:<600, 599.999>
                var geometry = PathGeometry_04();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 600F, 599.999023F), ColorBrush_SemiTransparentAlmostTurquoise_3329EFCF());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_05()
            {
                // Offset:<307.943, 43.448>
                var geometry = PathGeometry_05();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 307.942993F, 43.4480019F), ColorBrush_AlmostFuchsia_FFF600FA());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_06()
            {
                // Offset:<308.608, 28.985>
                var geometry = PathGeometry_06();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 308.608002F, 28.9850006F), ColorBrush_White());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_07()
            {
                // Offset:<308.604, 52.345>
                var geometry = PathGeometry_07();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 308.604004F, 52.3450012F), ColorBrush_White());;
                return result;
            }

            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_08()
            {
                // Offset:<308.609, 52.336>
                var geometry = PathGeometry_08();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 308.609009F, 52.3359985F), ColorBrush_AlmostFuchsia_FFF600FA());;
                return result;
            }

            // - Layer aggregator
            // Path 6+Path 5+Path 4+Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_09()
            {
                // Offset:<308.608, 52.335>
                var geometry = PathGeometry_09();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 308.608002F, 52.3349991F), ColorBrush_AlmostFuchsia_FFF600FA());;
                return result;
            }

            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_10()
            {
                // Offset:<600, 600>
                var result = CreateSpriteShape(PathGeometry_10(), new Matrix3x2(1F, 0F, 0F, 1F, 600F, 600F));;
                result.StrokeBrush = ColorBrush_AlmostFuchsia_FFF600FB();
                result.StrokeDashCap = CompositionStrokeCap.Round;
                result.StrokeDashOffset = -6F;
                var strokeDashArray = result.StrokeDashArray;
                strokeDashArray.Add(15F);
                result.StrokeStartCap = CompositionStrokeCap.Round;
                result.StrokeEndCap = CompositionStrokeCap.Round;
                result.StrokeLineJoin = CompositionStrokeLineJoin.Round;
                result.StrokeMiterLimit = 2F;
                result.StrokeThickness = 5F;
                return result;
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_11()
            {
                // Offset:<155.12, 152.58>
                var geometry = PathGeometry_11();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 155.119995F, 152.580002F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_12()
            {
                // Offset:<155.125, 152.58>
                var geometry = PathGeometry_12();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 155.125F, 152.580002F), ColorBrush_AlmostGold_FFFFC500());;
                return result;
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_13()
            {
                // Offset:<229.344, 75.241>
                var geometry = PathGeometry_13();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 229.343994F, 75.2409973F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_14()
            {
                // Offset:<606.66205, 642.058>
                var geometry = PathGeometry_14();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 606.662048F, 642.057983F), ColorBrush_AlmostGold_FFFFC500());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_15()
            {
                // Offset:<606.66205, 642.05896>
                var geometry = PathGeometry_15();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 606.662048F, 642.05896F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_16()
            {
                // Offset:<606.66205, 642.058>
                var geometry = PathGeometry_16();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 606.662048F, 642.057983F), ColorBrush_White());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 4+Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_17()
            {
                // Offset:<606.66205, 642.058>
                var geometry = PathGeometry_17();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 606.662048F, 642.057983F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_18()
            {
                // Offset:<606.663, 642.058>
                var geometry = PathGeometry_18();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 606.663025F, 642.057983F), ColorBrush_White());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_19()
            {
                // Offset:<606.663, 642.058>
                var geometry = PathGeometry_19();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 606.663025F, 642.057983F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_20()
            {
                // Offset:<368.62503, 449.718>
                var geometry = PathGeometry_20();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 368.625031F, 449.717987F), ColorBrush_White());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_21()
            {
                // Offset:<611.671, 690.594>
                var geometry = PathGeometry_21();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 611.671021F, 690.593994F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_22()
            {
                // Offset:<596.01404, 608.821>
                var geometry = PathGeometry_22();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 596.014038F, 608.820984F), ColorBrush_Black());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_23()
            {
                // Offset:<826.052, 651.01>
                var geometry = PathGeometry_23();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 826.052002F, 651.01001F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: lock
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_24()
            {
                // Offset:<437.48505, 522.561>
                var geometry = PathGeometry_24();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 437.485046F, 522.560974F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: pin
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_25()
            {
                // Offset:<701.63, 786.567>
                var geometry = PathGeometry_25();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 701.630005F, 786.567017F), ColorBrush_AlmostDeepSkyBlue_FF07AAFF());;
                return result;
            }

            // - - PreComp layer: pin
            // Layer aggregator
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_26()
            {
                // Offset:<701.631, 785.208>
                var geometry = PathGeometry_26();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 701.630981F, 785.208008F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: pin
            // Layer aggregator
            // Path 1
            CompositionSpriteShape SpriteShape_27()
            {
                // Offset:<828.818, 786.13104>
                var geometry = PathGeometry_27();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 828.817993F, 786.131042F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 1 Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_28()
            {
                // Offset:<553.763, 820.91296>
                var geometry = PathGeometry_28();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 553.763F, 820.912964F), ColorBrush_White());;
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 1 Outlines
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_29()
            {
                // Offset:<553.763, 820.682>
                var geometry = PathGeometry_29();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 553.763F, 820.682007F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 2 Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_30()
            {
                // Offset:<650.635, 799.12994>
                var geometry = PathGeometry_30();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 650.63501F, 799.129944F), ColorBrush_White());;
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 2 Outlines
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_31()
            {
                // Offset:<650.635, 798.899>
                var geometry = PathGeometry_31();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 650.63501F, 798.898987F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 3 Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_32()
            {
                // Offset:<747.507, 777.348>
                var geometry = PathGeometry_32();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 747.507019F, 777.348022F), ColorBrush_White());;
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 3 Outlines
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_33()
            {
                // Offset:<747.507, 777.11804>
                var geometry = PathGeometry_33();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 747.507019F, 777.118042F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 4 Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_34()
            {
                // Offset:<844.379, 755.56494>
                var geometry = PathGeometry_34();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 844.379028F, 755.564941F), ColorBrush_White());;
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 4 Outlines
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_35()
            {
                // Offset:<844.379, 755.334>
                var geometry = PathGeometry_35();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 844.379028F, 755.333984F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: security
            // Shape tree root for layer: security Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_36()
            {
                // Offset:<353.525, 761.579>
                var geometry = PathGeometry_36();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 353.524994F, 761.578979F), ColorBrush_AlmostLimeGreen_FF00D541());;
                return result;
            }

            // - - PreComp layer: security
            // Shape tree root for layer: security Outlines
            // Path 2+Path 1
            CompositionSpriteShape SpriteShape_37()
            {
                // Offset:<353.647, 761.503>
                var geometry = PathGeometry_37();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 353.647003F, 761.502991F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - PreComp layer: security
            // Shape tree root for layer: security Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_38()
            {
                // Offset:<267.187, 685.919>
                var geometry = PathGeometry_38();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 267.187012F, 685.919006F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - - - - - - PreComp layer: security
            // Shape tree root for layer: check Outlines
            // Path 1
            CompositionSpriteShape SpriteShape_39()
            {
                // Offset:<351.50302, 757.96497>
                var geometry = PathGeometry_39();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 351.503021F, 757.964966F), ColorBrush_White());;
                return result;
            }

            // - - - - - - - PreComp layer: security
            // Shape tree root for layer: check Outlines
            // Path 3+Path 2+Path 1
            CompositionSpriteShape SpriteShape_40()
            {
                // Offset:<351.62503, 757.977>
                var geometry = PathGeometry_40();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1F, 0F, 0F, 1F, 351.625031F, 757.97699F), ColorBrush_AlmostBlack_FF101111());;
                return result;
            }

            // - - - - - - - - PreComp layer: security
            // - Shape tree root for layer: Shape Layer 1
            // Ellipse Path 1
            CompositionSpriteShape SpriteShape_41()
            {
                // Offset:<-250, 146.5>, Scale:<1.20235, 1.20235>
                var geometry = Ellipse_82();
                var result = CreateSpriteShape(geometry, new Matrix3x2(1.20235002F, 0F, 0F, 1.20235002F, -250F, 146.5F), ColorBrush_Red());;
                return result;
            }

            // - - - PreComp layer: security
            CompositionSurfaceBrush SurfaceBrush_0()
            {
                return _c.CreateSurfaceBrush(VisualSurface_0());
            }

            // - - - PreComp layer: security
            CompositionSurfaceBrush SurfaceBrush_1()
            {
                return _c.CreateSurfaceBrush(VisualSurface_1());
            }

            // - - - - PreComp layer: security
            CompositionVisualSurface VisualSurface_0()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_6();
                result.SourceSize = new Vector2(1200F, 1200F);
                return result;
            }

            // - - - - PreComp layer: security
            CompositionVisualSurface VisualSurface_1()
            {
                var result = _c.CreateVisualSurface();
                result.SourceVisual = ContainerVisual_7();
                result.SourceSize = new Vector2(1200F, 1200F);
                return result;
            }

            // Transforms for lock
            ContainerVisual ContainerVisual_0()
            {
                if (_containerVisual_0 != null) { return _containerVisual_0; }
                var result = _containerVisual_0 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(600F, 1200F, 0F);
                result.Scale = new Vector3(1F, 1F, 0F);
                result.Children.InsertAtTop(ContainerVisual_1());
                return result;
            }

            // PreComp layer: lock
            ContainerVisual ContainerVisual_1()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(1200F, 1200F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_1());
                return result;
            }

            // Transforms for pin
            ContainerVisual ContainerVisual_2()
            {
                if (_containerVisual_2 != null) { return _containerVisual_2; }
                var result = _containerVisual_2 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(414.084991F, 860.765015F, 0F);
                result.Scale = new Vector3(1F, 1F, 0F);
                result.Children.InsertAtTop(ContainerVisual_3());
                return result;
            }

            // PreComp layer: pin
            ContainerVisual ContainerVisual_3()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(1200F, 1200F);
                // Layer aggregator
                result.Children.InsertAtTop(ShapeVisual_2());
                return result;
            }

            // Transforms for security
            ContainerVisual ContainerVisual_4()
            {
                if (_containerVisual_4 != null) { return _containerVisual_4; }
                var result = _containerVisual_4 = _c.CreateContainerVisual();
                result.CenterPoint = new Vector3(375.453003F, 928.369995F, 0F);
                result.Scale = new Vector3(1F, 1F, 0F);
                result.Children.InsertAtTop(ContainerVisual_5());
                return result;
            }

            // PreComp layer: security
            ContainerVisual ContainerVisual_5()
            {
                var result = _c.CreateContainerVisual();
                result.Clip = InsetClip_0();
                result.Size = new Vector2(1200F, 1200F);
                var children = result.Children;
                // Shape tree root for layer: security Outlines
                children.InsertAtTop(ShapeVisual_3());
                children.InsertAtTop(SpriteVisual_0());
                return result;
            }

            // - - - - - PreComp layer: security
            ContainerVisual ContainerVisual_6()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: check Outlines
                result.Children.InsertAtTop(ShapeVisual_4());
                return result;
            }

            // - - - - - PreComp layer: security
            ContainerVisual ContainerVisual_7()
            {
                var result = _c.CreateContainerVisual();
                result.BorderMode = CompositionBorderMode.Soft;
                // Shape tree root for layer: Shape Layer 1
                result.Children.InsertAtTop(ShapeVisual_5());
                return result;
            }

            // The root of the composition.
            ContainerVisual Root()
            {
                if (_root != null) { return _root; }
                var result = _root = _c.CreateContainerVisual();
                var propertySet = result.Properties;
                propertySet.InsertScalar("Progress", 0F);
                propertySet.InsertScalar("t0", 0F);
                propertySet.InsertScalar("t1", 0F);
                propertySet.InsertScalar("t2", 0F);
                var children = result.Children;
                // Layer aggregator
                children.InsertAtTop(ShapeVisual_0());
                // PreComp layer: lock
                children.InsertAtTop(ContainerVisual_0());
                // PreComp layer: pin
                children.InsertAtTop(ContainerVisual_2());
                // PreComp layer: security
                children.InsertAtTop(ContainerVisual_4());
                return result;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_0()
            {
                return (_cubicBezierEasingFunction_0 == null)
                    ? _cubicBezierEasingFunction_0 = _c.CreateCubicBezierEasingFunction(new Vector2(0F, 0F), new Vector2(1F, 1F))
                    : _cubicBezierEasingFunction_0;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_1()
            {
                return (_cubicBezierEasingFunction_1 == null)
                    ? _cubicBezierEasingFunction_1 = _c.CreateCubicBezierEasingFunction(new Vector2(0.333000004F, 0F), new Vector2(0.666999996F, 1F))
                    : _cubicBezierEasingFunction_1;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_2()
            {
                return (_cubicBezierEasingFunction_2 == null)
                    ? _cubicBezierEasingFunction_2 = _c.CreateCubicBezierEasingFunction(new Vector2(0.598999977F, 0F), new Vector2(0.519999981F, 1F))
                    : _cubicBezierEasingFunction_2;
            }

            CubicBezierEasingFunction CubicBezierEasingFunction_3()
            {
                return (_cubicBezierEasingFunction_3 == null)
                    ? _cubicBezierEasingFunction_3 = _c.CreateCubicBezierEasingFunction(new Vector2(0.569999993F, 0F), new Vector2(0.519999981F, 1F))
                    : _cubicBezierEasingFunction_3;
            }

            InsetClip InsetClip_0()
            {
                if (_insetClip_0 != null) { return _insetClip_0; }
                var result = _insetClip_0 = _c.CreateInsetClip();
                return result;
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_0_to_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, StepThenHoldEasingFunction());
                // Frame 50.
                result.InsertKeyFrame(0.208333328F, 0F, HoldThenStepEasingFunction());
                // Frame 70.
                result.InsertKeyFrame(0.291666657F, 7.47800016F, CubicBezierEasingFunction_1());
                // Frame 190.
                result.InsertKeyFrame(0.791666687F, 7.47800016F, CubicBezierEasingFunction_1());
                // Frame 210.
                result.InsertKeyFrame(0.875F, 0F, CubicBezierEasingFunction_1());
                return result;
            }

            // PreComp layer: pin
            // Rotation
            ScalarKeyFrameAnimation RotationAngleInDegreesScalarAnimation_m2_to_m1p997()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, -2F, HoldThenStepEasingFunction());
                // Frame 1.
                result.InsertKeyFrame(0.00416666688F, -1.99699998F, CubicBezierEasingFunction_0());
                // Frame 2.
                result.InsertKeyFrame(0.00833333377F, -1.98699999F, CubicBezierEasingFunction_0());
                // Frame 3.
                result.InsertKeyFrame(0.0125000002F, -1.97099996F, CubicBezierEasingFunction_0());
                // Frame 4.
                result.InsertKeyFrame(0.0166666675F, -1.949F, CubicBezierEasingFunction_0());
                // Frame 5.
                result.InsertKeyFrame(0.020833334F, -1.921F, CubicBezierEasingFunction_0());
                // Frame 6.
                result.InsertKeyFrame(0.0250000004F, -1.88800001F, CubicBezierEasingFunction_0());
                // Frame 7.
                result.InsertKeyFrame(0.0291666668F, -1.84899998F, CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.0333333351F, -1.80599999F, CubicBezierEasingFunction_0());
                // Frame 9.
                result.InsertKeyFrame(0.0375000015F, -1.75699997F, CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.0416666679F, -1.704F, CubicBezierEasingFunction_0());
                // Frame 11.
                result.InsertKeyFrame(0.0458333343F, -1.64600003F, CubicBezierEasingFunction_0());
                // Frame 12.
                result.InsertKeyFrame(0.0500000007F, -1.58399999F, CubicBezierEasingFunction_0());
                // Frame 13.
                result.InsertKeyFrame(0.0541666672F, -1.51800001F, CubicBezierEasingFunction_0());
                // Frame 14.
                result.InsertKeyFrame(0.0583333336F, -1.44799995F, CubicBezierEasingFunction_0());
                // Frame 15.
                result.InsertKeyFrame(0.0625F, -1.375F, CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.0666666701F, -1.29799998F, CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.0708333328F, -1.21899998F, CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.075000003F, -1.13600004F, CubicBezierEasingFunction_0());
                // Frame 19.
                result.InsertKeyFrame(0.0791666657F, -1.051F, CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.0833333358F, -0.963F, CubicBezierEasingFunction_0());
                // Frame 21.
                result.InsertKeyFrame(0.0874999985F, -0.873000026F, CubicBezierEasingFunction_0());
                // Frame 22.
                result.InsertKeyFrame(0.0916666687F, -0.781000018F, CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.0958333313F, -0.686999977F, CubicBezierEasingFunction_0());
                // Frame 24.
                result.InsertKeyFrame(0.100000001F, -0.592000008F, CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.104166664F, -0.495000005F, CubicBezierEasingFunction_0());
                // Frame 26.
                result.InsertKeyFrame(0.108333334F, -0.398000002F, CubicBezierEasingFunction_0());
                // Frame 27.
                result.InsertKeyFrame(0.112499997F, -0.298999995F, CubicBezierEasingFunction_0());
                // Frame 28.
                result.InsertKeyFrame(0.116666667F, -0.200000003F, CubicBezierEasingFunction_0());
                // Frame 29.
                result.InsertKeyFrame(0.12083333F, -0.100000001F, CubicBezierEasingFunction_0());
                // Frame 31.
                result.InsertKeyFrame(0.129166663F, 0.100000001F, CubicBezierEasingFunction_0());
                // Frame 32.
                result.InsertKeyFrame(0.13333334F, 0.200000003F, CubicBezierEasingFunction_0());
                // Frame 33.
                result.InsertKeyFrame(0.137500003F, 0.298999995F, CubicBezierEasingFunction_0());
                // Frame 34.
                result.InsertKeyFrame(0.141666666F, 0.398000002F, CubicBezierEasingFunction_0());
                // Frame 35.
                result.InsertKeyFrame(0.145833328F, 0.495000005F, CubicBezierEasingFunction_0());
                // Frame 36.
                result.InsertKeyFrame(0.150000006F, 0.592000008F, CubicBezierEasingFunction_0());
                // Frame 37.
                result.InsertKeyFrame(0.154166669F, 0.686999977F, CubicBezierEasingFunction_0());
                // Frame 38.
                result.InsertKeyFrame(0.158333331F, 0.781000018F, CubicBezierEasingFunction_0());
                // Frame 39.
                result.InsertKeyFrame(0.162499994F, 0.873000026F, CubicBezierEasingFunction_0());
                // Frame 40.
                result.InsertKeyFrame(0.166666672F, 0.963F, CubicBezierEasingFunction_0());
                // Frame 41.
                result.InsertKeyFrame(0.170833334F, 1.051F, CubicBezierEasingFunction_0());
                // Frame 42.
                result.InsertKeyFrame(0.174999997F, 1.13600004F, CubicBezierEasingFunction_0());
                // Frame 43.
                result.InsertKeyFrame(0.17916666F, 1.21899998F, CubicBezierEasingFunction_0());
                // Frame 44.
                result.InsertKeyFrame(0.183333337F, 1.29799998F, CubicBezierEasingFunction_0());
                // Frame 45.
                result.InsertKeyFrame(0.1875F, 1.375F, CubicBezierEasingFunction_0());
                // Frame 46.
                result.InsertKeyFrame(0.191666663F, 1.44799995F, CubicBezierEasingFunction_0());
                // Frame 47.
                result.InsertKeyFrame(0.19583334F, 1.51800001F, CubicBezierEasingFunction_0());
                // Frame 48.
                result.InsertKeyFrame(0.200000003F, 1.58399999F, CubicBezierEasingFunction_0());
                // Frame 49.
                result.InsertKeyFrame(0.204166666F, 1.64600003F, CubicBezierEasingFunction_0());
                // Frame 50.
                result.InsertKeyFrame(0.208333328F, 1.704F, CubicBezierEasingFunction_0());
                // Frame 51.
                result.InsertKeyFrame(0.212500006F, 1.75699997F, CubicBezierEasingFunction_0());
                // Frame 52.
                result.InsertKeyFrame(0.216666669F, 1.80599999F, CubicBezierEasingFunction_0());
                // Frame 53.
                result.InsertKeyFrame(0.220833331F, 1.84899998F, CubicBezierEasingFunction_0());
                // Frame 54.
                result.InsertKeyFrame(0.224999994F, 1.88800001F, CubicBezierEasingFunction_0());
                // Frame 55.
                result.InsertKeyFrame(0.229166672F, 1.921F, CubicBezierEasingFunction_0());
                // Frame 56.
                result.InsertKeyFrame(0.233333334F, 1.949F, CubicBezierEasingFunction_0());
                // Frame 57.
                result.InsertKeyFrame(0.237499997F, 1.97099996F, CubicBezierEasingFunction_0());
                // Frame 58.
                result.InsertKeyFrame(0.24166666F, 1.98699999F, CubicBezierEasingFunction_0());
                // Frame 59.
                result.InsertKeyFrame(0.245833337F, 1.99699998F, CubicBezierEasingFunction_0());
                // Frame 60.
                result.InsertKeyFrame(0.25F, 2F, CubicBezierEasingFunction_0());
                // Frame 61.
                result.InsertKeyFrame(0.254166663F, 1.99699998F, CubicBezierEasingFunction_0());
                // Frame 62.
                result.InsertKeyFrame(0.258333325F, 1.98699999F, CubicBezierEasingFunction_0());
                // Frame 63.
                result.InsertKeyFrame(0.262499988F, 1.97099996F, CubicBezierEasingFunction_0());
                // Frame 64.
                result.InsertKeyFrame(0.266666681F, 1.949F, CubicBezierEasingFunction_0());
                // Frame 65.
                result.InsertKeyFrame(0.270833343F, 1.921F, CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.275000006F, 1.88800001F, CubicBezierEasingFunction_0());
                // Frame 67.
                result.InsertKeyFrame(0.279166669F, 1.84899998F, CubicBezierEasingFunction_0());
                // Frame 68.
                result.InsertKeyFrame(0.283333331F, 1.80599999F, CubicBezierEasingFunction_0());
                // Frame 69.
                result.InsertKeyFrame(0.287499994F, 1.75699997F, CubicBezierEasingFunction_0());
                // Frame 70.
                result.InsertKeyFrame(0.291666657F, 1.704F, CubicBezierEasingFunction_0());
                // Frame 71.
                result.InsertKeyFrame(0.295833319F, 1.64600003F, CubicBezierEasingFunction_0());
                // Frame 72.
                result.InsertKeyFrame(0.300000012F, 1.58399999F, CubicBezierEasingFunction_0());
                // Frame 73.
                result.InsertKeyFrame(0.304166675F, 1.51800001F, CubicBezierEasingFunction_0());
                // Frame 74.
                result.InsertKeyFrame(0.308333337F, 1.44799995F, CubicBezierEasingFunction_0());
                // Frame 75.
                result.InsertKeyFrame(0.3125F, 1.375F, CubicBezierEasingFunction_0());
                // Frame 76.
                result.InsertKeyFrame(0.316666663F, 1.29799998F, CubicBezierEasingFunction_0());
                // Frame 77.
                result.InsertKeyFrame(0.320833325F, 1.21899998F, CubicBezierEasingFunction_0());
                // Frame 78.
                result.InsertKeyFrame(0.324999988F, 1.13600004F, CubicBezierEasingFunction_0());
                // Frame 79.
                result.InsertKeyFrame(0.329166681F, 1.051F, CubicBezierEasingFunction_0());
                // Frame 80.
                result.InsertKeyFrame(0.333333343F, 0.963F, CubicBezierEasingFunction_0());
                // Frame 81.
                result.InsertKeyFrame(0.337500006F, 0.873000026F, CubicBezierEasingFunction_0());
                // Frame 82.
                result.InsertKeyFrame(0.341666669F, 0.781000018F, CubicBezierEasingFunction_0());
                // Frame 83.
                result.InsertKeyFrame(0.345833331F, 0.686999977F, CubicBezierEasingFunction_0());
                // Frame 84.
                result.InsertKeyFrame(0.349999994F, 0.592000008F, CubicBezierEasingFunction_0());
                // Frame 85.
                result.InsertKeyFrame(0.354166657F, 0.495000005F, CubicBezierEasingFunction_0());
                // Frame 86.
                result.InsertKeyFrame(0.358333319F, 0.398000002F, CubicBezierEasingFunction_0());
                // Frame 87.
                result.InsertKeyFrame(0.362500012F, 0.298999995F, CubicBezierEasingFunction_0());
                // Frame 88.
                result.InsertKeyFrame(0.366666675F, 0.200000003F, CubicBezierEasingFunction_0());
                // Frame 89.
                result.InsertKeyFrame(0.370833337F, 0.100000001F, CubicBezierEasingFunction_0());
                // Frame 91.
                result.InsertKeyFrame(0.379166663F, -0.100000001F, CubicBezierEasingFunction_0());
                // Frame 92.
                result.InsertKeyFrame(0.383333325F, -0.200000003F, CubicBezierEasingFunction_0());
                // Frame 93.
                result.InsertKeyFrame(0.387499988F, -0.298999995F, CubicBezierEasingFunction_0());
                // Frame 94.
                result.InsertKeyFrame(0.391666681F, -0.398000002F, CubicBezierEasingFunction_0());
                // Frame 95.
                result.InsertKeyFrame(0.395833343F, -0.495000005F, CubicBezierEasingFunction_0());
                // Frame 96.
                result.InsertKeyFrame(0.400000006F, -0.592000008F, CubicBezierEasingFunction_0());
                // Frame 97.
                result.InsertKeyFrame(0.404166669F, -0.686999977F, CubicBezierEasingFunction_0());
                // Frame 98.
                result.InsertKeyFrame(0.408333331F, -0.781000018F, CubicBezierEasingFunction_0());
                // Frame 99.
                result.InsertKeyFrame(0.412499994F, -0.873000026F, CubicBezierEasingFunction_0());
                // Frame 100.
                result.InsertKeyFrame(0.416666657F, -0.963F, CubicBezierEasingFunction_0());
                // Frame 101.
                result.InsertKeyFrame(0.420833319F, -1.051F, CubicBezierEasingFunction_0());
                // Frame 102.
                result.InsertKeyFrame(0.425000012F, -1.13600004F, CubicBezierEasingFunction_0());
                // Frame 103.
                result.InsertKeyFrame(0.429166675F, -1.21899998F, CubicBezierEasingFunction_0());
                // Frame 104.
                result.InsertKeyFrame(0.433333337F, -1.29799998F, CubicBezierEasingFunction_0());
                // Frame 105.
                result.InsertKeyFrame(0.4375F, -1.375F, CubicBezierEasingFunction_0());
                // Frame 106.
                result.InsertKeyFrame(0.441666663F, -1.44799995F, CubicBezierEasingFunction_0());
                // Frame 107.
                result.InsertKeyFrame(0.445833325F, -1.51800001F, CubicBezierEasingFunction_0());
                // Frame 108.
                result.InsertKeyFrame(0.449999988F, -1.58399999F, CubicBezierEasingFunction_0());
                // Frame 109.
                result.InsertKeyFrame(0.454166681F, -1.64600003F, CubicBezierEasingFunction_0());
                // Frame 110.
                result.InsertKeyFrame(0.458333343F, -1.704F, CubicBezierEasingFunction_0());
                // Frame 111.
                result.InsertKeyFrame(0.462500006F, -1.75699997F, CubicBezierEasingFunction_0());
                // Frame 112.
                result.InsertKeyFrame(0.466666669F, -1.80599999F, CubicBezierEasingFunction_0());
                // Frame 113.
                result.InsertKeyFrame(0.470833331F, -1.84899998F, CubicBezierEasingFunction_0());
                // Frame 114.
                result.InsertKeyFrame(0.474999994F, -1.88800001F, CubicBezierEasingFunction_0());
                // Frame 115.
                result.InsertKeyFrame(0.479166657F, -1.921F, CubicBezierEasingFunction_0());
                // Frame 116.
                result.InsertKeyFrame(0.483333319F, -1.949F, CubicBezierEasingFunction_0());
                // Frame 117.
                result.InsertKeyFrame(0.487500012F, -1.97099996F, CubicBezierEasingFunction_0());
                // Frame 118.
                result.InsertKeyFrame(0.491666675F, -1.98699999F, CubicBezierEasingFunction_0());
                // Frame 119.
                result.InsertKeyFrame(0.495833337F, -1.99699998F, CubicBezierEasingFunction_0());
                // Frame 120.
                result.InsertKeyFrame(0.5F, -2F, CubicBezierEasingFunction_0());
                // Frame 121.
                result.InsertKeyFrame(0.504166663F, -1.99699998F, CubicBezierEasingFunction_0());
                // Frame 122.
                result.InsertKeyFrame(0.508333325F, -1.98699999F, CubicBezierEasingFunction_0());
                // Frame 123.
                result.InsertKeyFrame(0.512499988F, -1.97099996F, CubicBezierEasingFunction_0());
                // Frame 124.
                result.InsertKeyFrame(0.516666651F, -1.949F, CubicBezierEasingFunction_0());
                // Frame 125.
                result.InsertKeyFrame(0.520833313F, -1.921F, CubicBezierEasingFunction_0());
                // Frame 126.
                result.InsertKeyFrame(0.524999976F, -1.88800001F, CubicBezierEasingFunction_0());
                // Frame 127.
                result.InsertKeyFrame(0.529166639F, -1.84899998F, CubicBezierEasingFunction_0());
                // Frame 128.
                result.InsertKeyFrame(0.533333361F, -1.80599999F, CubicBezierEasingFunction_0());
                // Frame 129.
                result.InsertKeyFrame(0.537500024F, -1.75699997F, CubicBezierEasingFunction_0());
                // Frame 130.
                result.InsertKeyFrame(0.541666687F, -1.704F, CubicBezierEasingFunction_0());
                // Frame 131.
                result.InsertKeyFrame(0.545833349F, -1.64600003F, CubicBezierEasingFunction_0());
                // Frame 132.
                result.InsertKeyFrame(0.550000012F, -1.58399999F, CubicBezierEasingFunction_0());
                // Frame 133.
                result.InsertKeyFrame(0.554166675F, -1.51800001F, CubicBezierEasingFunction_0());
                // Frame 134.
                result.InsertKeyFrame(0.558333337F, -1.44799995F, CubicBezierEasingFunction_0());
                // Frame 135.
                result.InsertKeyFrame(0.5625F, -1.375F, CubicBezierEasingFunction_0());
                // Frame 136.
                result.InsertKeyFrame(0.566666663F, -1.29799998F, CubicBezierEasingFunction_0());
                // Frame 137.
                result.InsertKeyFrame(0.570833325F, -1.21899998F, CubicBezierEasingFunction_0());
                // Frame 138.
                result.InsertKeyFrame(0.574999988F, -1.13600004F, CubicBezierEasingFunction_0());
                // Frame 139.
                result.InsertKeyFrame(0.579166651F, -1.051F, CubicBezierEasingFunction_0());
                // Frame 140.
                result.InsertKeyFrame(0.583333313F, -0.963F, CubicBezierEasingFunction_0());
                // Frame 141.
                result.InsertKeyFrame(0.587499976F, -0.873000026F, CubicBezierEasingFunction_0());
                // Frame 142.
                result.InsertKeyFrame(0.591666639F, -0.781000018F, CubicBezierEasingFunction_0());
                // Frame 143.
                result.InsertKeyFrame(0.595833361F, -0.686999977F, CubicBezierEasingFunction_0());
                // Frame 144.
                result.InsertKeyFrame(0.600000024F, -0.592000008F, CubicBezierEasingFunction_0());
                // Frame 145.
                result.InsertKeyFrame(0.604166687F, -0.495000005F, CubicBezierEasingFunction_0());
                // Frame 146.
                result.InsertKeyFrame(0.608333349F, -0.398000002F, CubicBezierEasingFunction_0());
                // Frame 147.
                result.InsertKeyFrame(0.612500012F, -0.298999995F, CubicBezierEasingFunction_0());
                // Frame 148.
                result.InsertKeyFrame(0.616666675F, -0.200000003F, CubicBezierEasingFunction_0());
                // Frame 149.
                result.InsertKeyFrame(0.620833337F, -0.100000001F, CubicBezierEasingFunction_0());
                // Frame 151.
                result.InsertKeyFrame(0.629166663F, 0.100000001F, CubicBezierEasingFunction_0());
                // Frame 152.
                result.InsertKeyFrame(0.633333325F, 0.200000003F, CubicBezierEasingFunction_0());
                // Frame 153.
                result.InsertKeyFrame(0.637499988F, 0.298999995F, CubicBezierEasingFunction_0());
                // Frame 154.
                result.InsertKeyFrame(0.641666651F, 0.398000002F, CubicBezierEasingFunction_0());
                // Frame 155.
                result.InsertKeyFrame(0.645833313F, 0.495000005F, CubicBezierEasingFunction_0());
                // Frame 156.
                result.InsertKeyFrame(0.649999976F, 0.592000008F, CubicBezierEasingFunction_0());
                // Frame 157.
                result.InsertKeyFrame(0.654166639F, 0.686999977F, CubicBezierEasingFunction_0());
                // Frame 158.
                result.InsertKeyFrame(0.658333361F, 0.781000018F, CubicBezierEasingFunction_0());
                // Frame 159.
                result.InsertKeyFrame(0.662500024F, 0.873000026F, CubicBezierEasingFunction_0());
                // Frame 160.
                result.InsertKeyFrame(0.666666687F, 0.963F, CubicBezierEasingFunction_0());
                // Frame 161.
                result.InsertKeyFrame(0.670833349F, 1.051F, CubicBezierEasingFunction_0());
                // Frame 162.
                result.InsertKeyFrame(0.675000012F, 1.13600004F, CubicBezierEasingFunction_0());
                // Frame 163.
                result.InsertKeyFrame(0.679166675F, 1.21899998F, CubicBezierEasingFunction_0());
                // Frame 164.
                result.InsertKeyFrame(0.683333337F, 1.29799998F, CubicBezierEasingFunction_0());
                // Frame 165.
                result.InsertKeyFrame(0.6875F, 1.375F, CubicBezierEasingFunction_0());
                // Frame 166.
                result.InsertKeyFrame(0.691666663F, 1.44799995F, CubicBezierEasingFunction_0());
                // Frame 167.
                result.InsertKeyFrame(0.695833325F, 1.51800001F, CubicBezierEasingFunction_0());
                // Frame 168.
                result.InsertKeyFrame(0.699999988F, 1.58399999F, CubicBezierEasingFunction_0());
                // Frame 169.
                result.InsertKeyFrame(0.704166651F, 1.64600003F, CubicBezierEasingFunction_0());
                // Frame 170.
                result.InsertKeyFrame(0.708333313F, 1.704F, CubicBezierEasingFunction_0());
                // Frame 171.
                result.InsertKeyFrame(0.712499976F, 1.75699997F, CubicBezierEasingFunction_0());
                // Frame 172.
                result.InsertKeyFrame(0.716666639F, 1.80599999F, CubicBezierEasingFunction_0());
                // Frame 173.
                result.InsertKeyFrame(0.720833361F, 1.84899998F, CubicBezierEasingFunction_0());
                // Frame 174.
                result.InsertKeyFrame(0.725000024F, 1.88800001F, CubicBezierEasingFunction_0());
                // Frame 175.
                result.InsertKeyFrame(0.729166687F, 1.921F, CubicBezierEasingFunction_0());
                // Frame 176.
                result.InsertKeyFrame(0.733333349F, 1.949F, CubicBezierEasingFunction_0());
                // Frame 177.
                result.InsertKeyFrame(0.737500012F, 1.97099996F, CubicBezierEasingFunction_0());
                // Frame 178.
                result.InsertKeyFrame(0.741666675F, 1.98699999F, CubicBezierEasingFunction_0());
                // Frame 179.
                result.InsertKeyFrame(0.745833337F, 1.99699998F, CubicBezierEasingFunction_0());
                // Frame 180.
                result.InsertKeyFrame(0.75F, 2F, CubicBezierEasingFunction_0());
                // Frame 181.
                result.InsertKeyFrame(0.754166663F, 1.99699998F, CubicBezierEasingFunction_0());
                // Frame 182.
                result.InsertKeyFrame(0.758333325F, 1.98699999F, CubicBezierEasingFunction_0());
                // Frame 183.
                result.InsertKeyFrame(0.762499988F, 1.97099996F, CubicBezierEasingFunction_0());
                // Frame 184.
                result.InsertKeyFrame(0.766666651F, 1.949F, CubicBezierEasingFunction_0());
                // Frame 185.
                result.InsertKeyFrame(0.770833313F, 1.921F, CubicBezierEasingFunction_0());
                // Frame 186.
                result.InsertKeyFrame(0.774999976F, 1.88800001F, CubicBezierEasingFunction_0());
                // Frame 187.
                result.InsertKeyFrame(0.779166639F, 1.84899998F, CubicBezierEasingFunction_0());
                // Frame 188.
                result.InsertKeyFrame(0.783333361F, 1.80599999F, CubicBezierEasingFunction_0());
                // Frame 189.
                result.InsertKeyFrame(0.787500024F, 1.75699997F, CubicBezierEasingFunction_0());
                // Frame 190.
                result.InsertKeyFrame(0.791666687F, 1.704F, CubicBezierEasingFunction_0());
                // Frame 191.
                result.InsertKeyFrame(0.795833349F, 1.64600003F, CubicBezierEasingFunction_0());
                // Frame 192.
                result.InsertKeyFrame(0.800000012F, 1.58399999F, CubicBezierEasingFunction_0());
                // Frame 193.
                result.InsertKeyFrame(0.804166675F, 1.51800001F, CubicBezierEasingFunction_0());
                // Frame 194.
                result.InsertKeyFrame(0.808333337F, 1.44799995F, CubicBezierEasingFunction_0());
                // Frame 195.
                result.InsertKeyFrame(0.8125F, 1.375F, CubicBezierEasingFunction_0());
                // Frame 196.
                result.InsertKeyFrame(0.816666663F, 1.29799998F, CubicBezierEasingFunction_0());
                // Frame 197.
                result.InsertKeyFrame(0.820833325F, 1.21899998F, CubicBezierEasingFunction_0());
                // Frame 198.
                result.InsertKeyFrame(0.824999988F, 1.13600004F, CubicBezierEasingFunction_0());
                // Frame 199.
                result.InsertKeyFrame(0.829166651F, 1.051F, CubicBezierEasingFunction_0());
                // Frame 200.
                result.InsertKeyFrame(0.833333313F, 0.963F, CubicBezierEasingFunction_0());
                // Frame 201.
                result.InsertKeyFrame(0.837499976F, 0.873000026F, CubicBezierEasingFunction_0());
                // Frame 202.
                result.InsertKeyFrame(0.841666639F, 0.781000018F, CubicBezierEasingFunction_0());
                // Frame 203.
                result.InsertKeyFrame(0.845833361F, 0.686999977F, CubicBezierEasingFunction_0());
                // Frame 204.
                result.InsertKeyFrame(0.850000024F, 0.592000008F, CubicBezierEasingFunction_0());
                // Frame 205.
                result.InsertKeyFrame(0.854166687F, 0.495000005F, CubicBezierEasingFunction_0());
                // Frame 206.
                result.InsertKeyFrame(0.858333349F, 0.398000002F, CubicBezierEasingFunction_0());
                // Frame 207.
                result.InsertKeyFrame(0.862500012F, 0.298999995F, CubicBezierEasingFunction_0());
                // Frame 208.
                result.InsertKeyFrame(0.866666675F, 0.200000003F, CubicBezierEasingFunction_0());
                // Frame 209.
                result.InsertKeyFrame(0.870833337F, 0.100000001F, CubicBezierEasingFunction_0());
                // Frame 211.
                result.InsertKeyFrame(0.879166663F, -0.100000001F, CubicBezierEasingFunction_0());
                // Frame 212.
                result.InsertKeyFrame(0.883333325F, -0.200000003F, CubicBezierEasingFunction_0());
                // Frame 213.
                result.InsertKeyFrame(0.887499988F, -0.298999995F, CubicBezierEasingFunction_0());
                // Frame 214.
                result.InsertKeyFrame(0.891666651F, -0.398000002F, CubicBezierEasingFunction_0());
                // Frame 215.
                result.InsertKeyFrame(0.895833313F, -0.495000005F, CubicBezierEasingFunction_0());
                // Frame 216.
                result.InsertKeyFrame(0.899999976F, -0.592000008F, CubicBezierEasingFunction_0());
                // Frame 217.
                result.InsertKeyFrame(0.904166639F, -0.686999977F, CubicBezierEasingFunction_0());
                // Frame 218.
                result.InsertKeyFrame(0.908333361F, -0.781000018F, CubicBezierEasingFunction_0());
                // Frame 219.
                result.InsertKeyFrame(0.912500024F, -0.873000026F, CubicBezierEasingFunction_0());
                // Frame 220.
                result.InsertKeyFrame(0.916666687F, -0.963F, CubicBezierEasingFunction_0());
                // Frame 221.
                result.InsertKeyFrame(0.920833349F, -1.051F, CubicBezierEasingFunction_0());
                // Frame 222.
                result.InsertKeyFrame(0.925000012F, -1.13600004F, CubicBezierEasingFunction_0());
                // Frame 223.
                result.InsertKeyFrame(0.929166675F, -1.21899998F, CubicBezierEasingFunction_0());
                // Frame 224.
                result.InsertKeyFrame(0.933333337F, -1.29799998F, CubicBezierEasingFunction_0());
                // Frame 225.
                result.InsertKeyFrame(0.9375F, -1.375F, CubicBezierEasingFunction_0());
                // Frame 226.
                result.InsertKeyFrame(0.941666663F, -1.44799995F, CubicBezierEasingFunction_0());
                // Frame 227.
                result.InsertKeyFrame(0.945833325F, -1.51800001F, CubicBezierEasingFunction_0());
                // Frame 228.
                result.InsertKeyFrame(0.949999988F, -1.58399999F, CubicBezierEasingFunction_0());
                // Frame 229.
                result.InsertKeyFrame(0.954166651F, -1.64600003F, CubicBezierEasingFunction_0());
                // Frame 230.
                result.InsertKeyFrame(0.958333313F, -1.704F, CubicBezierEasingFunction_0());
                // Frame 231.
                result.InsertKeyFrame(0.962499976F, -1.75699997F, CubicBezierEasingFunction_0());
                // Frame 232.
                result.InsertKeyFrame(0.966666639F, -1.80599999F, CubicBezierEasingFunction_0());
                // Frame 233.
                result.InsertKeyFrame(0.970833361F, -1.84899998F, CubicBezierEasingFunction_0());
                // Frame 234.
                result.InsertKeyFrame(0.975000024F, -1.88800001F, CubicBezierEasingFunction_0());
                // Frame 235.
                result.InsertKeyFrame(0.979166687F, -1.921F, CubicBezierEasingFunction_0());
                // Frame 236.
                result.InsertKeyFrame(0.983333349F, -1.949F, CubicBezierEasingFunction_0());
                // Frame 237.
                result.InsertKeyFrame(0.987500012F, -1.97099996F, CubicBezierEasingFunction_0());
                // Frame 238.
                result.InsertKeyFrame(0.991666675F, -1.98699999F, CubicBezierEasingFunction_0());
                // Frame 239.
                result.InsertKeyFrame(0.995833337F, -1.99699998F, CubicBezierEasingFunction_0());
                return result;
            }

            ScalarKeyFrameAnimation t0ScalarAnimation_0_to_1()
            {
                // Frame 70.
                var result = CreateScalarKeyFrameAnimation(0.291666687F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 190.
                result.InsertKeyFrame(0.791666627F, 1F, CubicBezierEasingFunction_1());
                return result;
            }

            ScalarKeyFrameAnimation t1ScalarAnimation_0_to_1()
            {
                // Frame 50.
                var result = CreateScalarKeyFrameAnimation(0.208333343F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 60.
                result.InsertKeyFrame(0.249999985F, 1F, CubicBezierEasingFunction_3());
                // Frame 60.
                result.InsertKeyFrame(0.25F, 0F, StepThenHoldEasingFunction());
                // Frame 70.
                result.InsertKeyFrame(0.291666627F, 1F, CubicBezierEasingFunction_3());
                return result;
            }

            ScalarKeyFrameAnimation t2ScalarAnimation_0_to_1()
            {
                // Frame 70.
                var result = CreateScalarKeyFrameAnimation(0.291666657F, 0F, StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 180.
                result.InsertKeyFrame(0.74999994F, 1F, CubicBezierEasingFunction_2());
                return result;
            }

            // - - Layer aggregator
            // -  Offset:<600, 600>
            // TrimEnd
            ScalarKeyFrameAnimation TrimEndScalarAnimation_0_to_0()
            {
                // Frame 0.
                var result = CreateScalarKeyFrameAnimation(0F, 0F, HoldThenStepEasingFunction());
                // Frame 60.
                result.InsertKeyFrame(0.25F, 1F, CubicBezierEasingFunction_1());
                // Frame 200.
                result.InsertKeyFrame(0.833333313F, 1F, CubicBezierEasingFunction_1());
                // Frame 239.
                result.InsertKeyFrame(0.995833337F, 0F, CubicBezierEasingFunction_1());
                return result;
            }

            // Layer aggregator
            ShapeVisual ShapeVisual_0()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1200F, 1200F);
                var shapes = result.Shapes;
                // Offset:<71.746, 156.55103>
                shapes.Add(SpriteShape_00());
                // Offset:<71.746, 156.55103>
                shapes.Add(SpriteShape_01());
                // Offset:<71.746, 156.55103>
                shapes.Add(SpriteShape_02());
                // Offset:<71.746, 156.55103>
                shapes.Add(SpriteShape_03());
                // Offset:<71.746, 156.55103>
                shapes.Add(SpriteShape_04());
                shapes.Add(ContainerShape_0());
                // Offset:<600, 600>
                shapes.Add(SpriteShape_10());
                return result;
            }

            // - PreComp layer: lock
            // Layer aggregator
            ShapeVisual ShapeVisual_1()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1200F, 1200F);
                var shapes = result.Shapes;
                shapes.Add(ContainerShape_1());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_14());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_15());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_16());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_17());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_18());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_19());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_20());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_21());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_22());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_23());
                // Offset:<368.62503, 449.718>
                shapes.Add(SpriteShape_24());
                return result;
            }

            // - PreComp layer: pin
            // Layer aggregator
            ShapeVisual ShapeVisual_2()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1200F, 1200F);
                var shapes = result.Shapes;
                // Offset:<386.154, 648.788>
                shapes.Add(SpriteShape_25());
                // Offset:<386.154, 648.788>
                shapes.Add(SpriteShape_26());
                // Offset:<386.154, 648.788>
                shapes.Add(SpriteShape_27());
                // Layer: pin 1 Outlines
                shapes.Add(ContainerShape_2());
                // Layer: pin 2 Outlines
                shapes.Add(ContainerShape_3());
                // Layer: pin 3 Outlines
                shapes.Add(ContainerShape_4());
                // Layer: pin 4 Outlines
                shapes.Add(ContainerShape_5());
                return result;
            }

            // - PreComp layer: security
            // Shape tree root for layer: security Outlines
            ShapeVisual ShapeVisual_3()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1200F, 1200F);
                var shapes = result.Shapes;
                // Offset:<188.515, 565.128>
                shapes.Add(SpriteShape_36());
                // Offset:<188.515, 565.128>
                shapes.Add(SpriteShape_37());
                // Offset:<188.515, 565.128>
                shapes.Add(SpriteShape_38());
                return result;
            }

            // - - - - - - PreComp layer: security
            // Shape tree root for layer: check Outlines
            ShapeVisual ShapeVisual_4()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1200F, 1200F);
                var shapes = result.Shapes;
                // Offset:<267.05103, 690.245>
                shapes.Add(SpriteShape_39());
                // Offset:<267.05103, 690.245>
                shapes.Add(SpriteShape_40());
                return result;
            }

            // - - - - - - PreComp layer: security
            // Shape tree root for layer: Shape Layer 1
            ShapeVisual ShapeVisual_5()
            {
                var result = _c.CreateShapeVisual();
                result.Size = new Vector2(1200F, 1200F);
                result.Shapes.Add(ContainerShape_6());
                return result;
            }

            // - PreComp layer: security
            SpriteVisual SpriteVisual_0()
            {
                var result = _c.CreateSpriteVisual();
                result.Size = new Vector2(1200F, 1200F);
                result.Brush = EffectBrush();
                return result;
            }

            StepEasingFunction HoldThenStepEasingFunction()
            {
                if (_holdThenStepEasingFunction != null) { return _holdThenStepEasingFunction; }
                var result = _holdThenStepEasingFunction = _c.CreateStepEasingFunction();
                result.IsFinalStepSingleFrame = true;
                return result;
            }

            StepEasingFunction StepThenHoldEasingFunction()
            {
                if (_stepThenHoldEasingFunction != null) { return _stepThenHoldEasingFunction; }
                var result = _stepThenHoldEasingFunction = _c.CreateStepEasingFunction();
                result.IsInitialStepSingleFrame = true;
                return result;
            }

            // - - - PreComp layer: lock
            // - Layer aggregator
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(448.040009F, 239.119995F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 50.
                result.InsertKeyFrame(0.208333328F, new Vector2(448.040009F, 239.119995F), HoldThenStepEasingFunction());
                // Frame 70.
                result.InsertKeyFrame(0.291666657F, new Vector2(448.040009F, 208.216995F), CubicBezierEasingFunction_1());
                // Frame 190.
                result.InsertExpressionKeyFrame(0.791666627F, "Pow(1-_.t0,3)*Vector2(448.04,208.217)+(3*Square(1-_.t0)*_.t0*Vector2(448.04,199.644))+(3*(1-_.t0)*Square(_.t0)*Vector2(448.04,196.214))+(Pow(_.t0,3)*Vector2(448.04,208.217))", StepThenHoldEasingFunction());
                // Frame 190.
                result.InsertKeyFrame(0.791666687F, new Vector2(448.040009F, 208.216995F), StepThenHoldEasingFunction());
                // Frame 210.
                result.InsertKeyFrame(0.875F, new Vector2(448.040009F, 239.119995F), CubicBezierEasingFunction_1());
                return result;
            }

            // - - - - - - - - PreComp layer: security
            // - Shape tree root for layer: Shape Layer 1
            // Offset
            Vector2KeyFrameAnimation OffsetVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(423F, 572F), StepThenHoldEasingFunction());
                result.SetReferenceParameter("_", _root);
                // Frame 50.
                result.InsertKeyFrame(0.208333328F, new Vector2(423F, 572F), HoldThenStepEasingFunction());
                // Frame 60.
                result.InsertExpressionKeyFrame(0.249999985F, "Pow(1-_.t1,3)*Vector2(423,572)+(3*Square(1-_.t1)*_.t1*Vector2(434.5,585))+(3*(1-_.t1)*Square(_.t1)*Vector2(462.5,644.917))+(Pow(_.t1,3)*Vector2(492,650))", StepThenHoldEasingFunction());
                // Frame 70.
                result.InsertExpressionKeyFrame(0.291666627F, "Pow(1-_.t1,3)*Vector2(492,650)+(3*Square(1-_.t1)*_.t1*Vector2(521.5,655.083))+(3*(1-_.t1)*Square(_.t1)*Vector2(611.5,615.5))+(Pow(_.t1,3)*Vector2(600,602.5))", StepThenHoldEasingFunction());
                // Frame 180.
                result.InsertExpressionKeyFrame(0.74999994F, "Pow(1-_.t2,3)*Vector2(600,602.5)+(3*Square(1-_.t2)*_.t2*Vector2(588.952,590.011))+(3*(1-_.t2)*Square(_.t2)*Vector2(600,602.5))+(Pow(_.t2,3)*Vector2(600,602.5))", StepThenHoldEasingFunction());
                // Frame 180.
                result.InsertKeyFrame(0.75F, new Vector2(600F, 602.5F), StepThenHoldEasingFunction());
                // Frame 190.
                result.InsertKeyFrame(0.791666687F, new Vector2(685F, 619F), CubicBezierEasingFunction_2());
                // Frame 200.
                result.InsertKeyFrame(0.833333313F, new Vector2(735.5F, 473F), CubicBezierEasingFunction_2());
                return result;
            }

            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_0()
            {
                // Frame 0.
                if (_scaleVector2Animation_0 != null) { return _scaleVector2Animation_0; }
                var result = _scaleVector2Animation_0 = CreateVector2KeyFrameAnimation(0F, new Vector2(0.800650001F, 0.800650001F), StepThenHoldEasingFunction());
                // Frame 2.
                result.InsertKeyFrame(0.00833333377F, new Vector2(0.800650001F, 0.800650001F), HoldThenStepEasingFunction());
                // Frame 3.
                result.InsertKeyFrame(0.0125000002F, new Vector2(0.801450014F, 0.801450014F), CubicBezierEasingFunction_0());
                // Frame 4.
                result.InsertKeyFrame(0.0166666675F, new Vector2(0.802550018F, 0.802550018F), CubicBezierEasingFunction_0());
                // Frame 5.
                result.InsertKeyFrame(0.020833334F, new Vector2(0.803939998F, 0.803939998F), CubicBezierEasingFunction_0());
                // Frame 6.
                result.InsertKeyFrame(0.0250000004F, new Vector2(0.805599988F, 0.805599988F), CubicBezierEasingFunction_0());
                // Frame 7.
                result.InsertKeyFrame(0.0291666668F, new Vector2(0.807529986F, 0.807529986F), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.0333333351F, new Vector2(0.80971998F, 0.80971998F), CubicBezierEasingFunction_0());
                // Frame 9.
                result.InsertKeyFrame(0.0375000015F, new Vector2(0.812150002F, 0.812150002F), CubicBezierEasingFunction_0());
                // Frame 10.
                result.InsertKeyFrame(0.0416666679F, new Vector2(0.814809978F, 0.814809978F), CubicBezierEasingFunction_0());
                // Frame 11.
                result.InsertKeyFrame(0.0458333343F, new Vector2(0.817700028F, 0.817700028F), CubicBezierEasingFunction_0());
                // Frame 12.
                result.InsertKeyFrame(0.0500000007F, new Vector2(0.820800006F, 0.820800006F), CubicBezierEasingFunction_0());
                // Frame 13.
                result.InsertKeyFrame(0.0541666672F, new Vector2(0.824100018F, 0.824100018F), CubicBezierEasingFunction_0());
                // Frame 14.
                result.InsertKeyFrame(0.0583333336F, new Vector2(0.827589989F, 0.827589989F), CubicBezierEasingFunction_0());
                // Frame 15.
                result.InsertKeyFrame(0.0625F, new Vector2(0.831250012F, 0.831250012F), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.0666666701F, new Vector2(0.835080028F, 0.835080028F), CubicBezierEasingFunction_0());
                // Frame 17.
                result.InsertKeyFrame(0.0708333328F, new Vector2(0.839070022F, 0.839070022F), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.075000003F, new Vector2(0.843200028F, 0.843200028F), CubicBezierEasingFunction_0());
                // Frame 19.
                result.InsertKeyFrame(0.0791666657F, new Vector2(0.847459972F, 0.847459972F), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.0833333358F, new Vector2(0.851849973F, 0.851849973F), CubicBezierEasingFunction_0());
                // Frame 21.
                result.InsertKeyFrame(0.0874999985F, new Vector2(0.856350005F, 0.856350005F), CubicBezierEasingFunction_0());
                // Frame 22.
                result.InsertKeyFrame(0.0916666687F, new Vector2(0.860949993F, 0.860949993F), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.0958333313F, new Vector2(0.865639985F, 0.865639985F), CubicBezierEasingFunction_0());
                // Frame 24.
                result.InsertKeyFrame(0.100000001F, new Vector2(0.870400012F, 0.870400012F), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.104166664F, new Vector2(0.875230014F, 0.875230014F), CubicBezierEasingFunction_0());
                // Frame 26.
                result.InsertKeyFrame(0.108333334F, new Vector2(0.880119979F, 0.880119979F), CubicBezierEasingFunction_0());
                // Frame 27.
                result.InsertKeyFrame(0.112499997F, new Vector2(0.885049999F, 0.885049999F), CubicBezierEasingFunction_0());
                // Frame 28.
                result.InsertKeyFrame(0.116666667F, new Vector2(0.890009999F, 0.890009999F), CubicBezierEasingFunction_0());
                // Frame 29.
                result.InsertKeyFrame(0.12083333F, new Vector2(0.894999981F, 0.894999981F), CubicBezierEasingFunction_0());
                // Frame 31.
                result.InsertKeyFrame(0.129166663F, new Vector2(0.904999971F, 0.904999971F), CubicBezierEasingFunction_0());
                // Frame 32.
                result.InsertKeyFrame(0.13333334F, new Vector2(0.909990013F, 0.909990013F), CubicBezierEasingFunction_0());
                // Frame 33.
                result.InsertKeyFrame(0.137500003F, new Vector2(0.914950013F, 0.914950013F), CubicBezierEasingFunction_0());
                // Frame 34.
                result.InsertKeyFrame(0.141666666F, new Vector2(0.919879973F, 0.919879973F), CubicBezierEasingFunction_0());
                // Frame 35.
                result.InsertKeyFrame(0.145833328F, new Vector2(0.924769998F, 0.924769998F), CubicBezierEasingFunction_0());
                // Frame 36.
                result.InsertKeyFrame(0.150000006F, new Vector2(0.9296F, 0.9296F), CubicBezierEasingFunction_0());
                // Frame 37.
                result.InsertKeyFrame(0.154166669F, new Vector2(0.934360027F, 0.934360027F), CubicBezierEasingFunction_0());
                // Frame 38.
                result.InsertKeyFrame(0.158333331F, new Vector2(0.939050019F, 0.939050019F), CubicBezierEasingFunction_0());
                // Frame 39.
                result.InsertKeyFrame(0.162499994F, new Vector2(0.943650007F, 0.943650007F), CubicBezierEasingFunction_0());
                // Frame 40.
                result.InsertKeyFrame(0.166666672F, new Vector2(0.948149979F, 0.948149979F), CubicBezierEasingFunction_0());
                // Frame 41.
                result.InsertKeyFrame(0.170833334F, new Vector2(0.95253998F, 0.95253998F), CubicBezierEasingFunction_0());
                // Frame 42.
                result.InsertKeyFrame(0.174999997F, new Vector2(0.956799984F, 0.956799984F), CubicBezierEasingFunction_0());
                // Frame 43.
                result.InsertKeyFrame(0.17916666F, new Vector2(0.96092999F, 0.96092999F), CubicBezierEasingFunction_0());
                // Frame 44.
                result.InsertKeyFrame(0.183333337F, new Vector2(0.964919984F, 0.964919984F), CubicBezierEasingFunction_0());
                // Frame 45.
                result.InsertKeyFrame(0.1875F, new Vector2(0.96875F, 0.96875F), CubicBezierEasingFunction_0());
                // Frame 46.
                result.InsertKeyFrame(0.191666663F, new Vector2(0.972410023F, 0.972410023F), CubicBezierEasingFunction_0());
                // Frame 47.
                result.InsertKeyFrame(0.19583334F, new Vector2(0.975899994F, 0.975899994F), CubicBezierEasingFunction_0());
                // Frame 48.
                result.InsertKeyFrame(0.200000003F, new Vector2(0.979200006F, 0.979200006F), CubicBezierEasingFunction_0());
                // Frame 49.
                result.InsertKeyFrame(0.204166666F, new Vector2(0.982299984F, 0.982299984F), CubicBezierEasingFunction_0());
                // Frame 50.
                result.InsertKeyFrame(0.208333328F, new Vector2(0.985189974F, 0.985189974F), CubicBezierEasingFunction_0());
                // Frame 51.
                result.InsertKeyFrame(0.212500006F, new Vector2(0.98785001F, 0.98785001F), CubicBezierEasingFunction_0());
                // Frame 52.
                result.InsertKeyFrame(0.216666669F, new Vector2(0.990279973F, 0.990279973F), CubicBezierEasingFunction_0());
                // Frame 53.
                result.InsertKeyFrame(0.220833331F, new Vector2(0.992470026F, 0.992470026F), CubicBezierEasingFunction_0());
                // Frame 54.
                result.InsertKeyFrame(0.224999994F, new Vector2(0.994400024F, 0.994400024F), CubicBezierEasingFunction_0());
                // Frame 55.
                result.InsertKeyFrame(0.229166672F, new Vector2(0.996060014F, 0.996060014F), CubicBezierEasingFunction_0());
                // Frame 56.
                result.InsertKeyFrame(0.233333334F, new Vector2(0.997449994F, 0.997449994F), CubicBezierEasingFunction_0());
                // Frame 57.
                result.InsertKeyFrame(0.237499997F, new Vector2(0.998549998F, 0.998549998F), CubicBezierEasingFunction_0());
                // Frame 58.
                result.InsertKeyFrame(0.24166666F, new Vector2(0.999350011F, 0.999350011F), CubicBezierEasingFunction_0());
                // Frame 63.
                result.InsertKeyFrame(0.262499988F, new Vector2(0.998549998F, 0.998549998F), CubicBezierEasingFunction_0());
                // Frame 64.
                result.InsertKeyFrame(0.266666681F, new Vector2(0.997449994F, 0.997449994F), CubicBezierEasingFunction_0());
                // Frame 65.
                result.InsertKeyFrame(0.270833343F, new Vector2(0.996060014F, 0.996060014F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.275000006F, new Vector2(0.994400024F, 0.994400024F), CubicBezierEasingFunction_0());
                // Frame 67.
                result.InsertKeyFrame(0.279166669F, new Vector2(0.992470026F, 0.992470026F), CubicBezierEasingFunction_0());
                // Frame 68.
                result.InsertKeyFrame(0.283333331F, new Vector2(0.990279973F, 0.990279973F), CubicBezierEasingFunction_0());
                // Frame 69.
                result.InsertKeyFrame(0.287499994F, new Vector2(0.98785001F, 0.98785001F), CubicBezierEasingFunction_0());
                // Frame 70.
                result.InsertKeyFrame(0.291666657F, new Vector2(0.985189974F, 0.985189974F), CubicBezierEasingFunction_0());
                // Frame 71.
                result.InsertKeyFrame(0.295833319F, new Vector2(0.982299984F, 0.982299984F), CubicBezierEasingFunction_0());
                // Frame 72.
                result.InsertKeyFrame(0.300000012F, new Vector2(0.979200006F, 0.979200006F), CubicBezierEasingFunction_0());
                // Frame 73.
                result.InsertKeyFrame(0.304166675F, new Vector2(0.975899994F, 0.975899994F), CubicBezierEasingFunction_0());
                // Frame 74.
                result.InsertKeyFrame(0.308333337F, new Vector2(0.972410023F, 0.972410023F), CubicBezierEasingFunction_0());
                // Frame 75.
                result.InsertKeyFrame(0.3125F, new Vector2(0.96875F, 0.96875F), CubicBezierEasingFunction_0());
                // Frame 76.
                result.InsertKeyFrame(0.316666663F, new Vector2(0.964919984F, 0.964919984F), CubicBezierEasingFunction_0());
                // Frame 77.
                result.InsertKeyFrame(0.320833325F, new Vector2(0.96092999F, 0.96092999F), CubicBezierEasingFunction_0());
                // Frame 78.
                result.InsertKeyFrame(0.324999988F, new Vector2(0.956799984F, 0.956799984F), CubicBezierEasingFunction_0());
                // Frame 79.
                result.InsertKeyFrame(0.329166681F, new Vector2(0.95253998F, 0.95253998F), CubicBezierEasingFunction_0());
                // Frame 80.
                result.InsertKeyFrame(0.333333343F, new Vector2(0.948149979F, 0.948149979F), CubicBezierEasingFunction_0());
                // Frame 81.
                result.InsertKeyFrame(0.337500006F, new Vector2(0.943650007F, 0.943650007F), CubicBezierEasingFunction_0());
                // Frame 82.
                result.InsertKeyFrame(0.341666669F, new Vector2(0.939050019F, 0.939050019F), CubicBezierEasingFunction_0());
                // Frame 83.
                result.InsertKeyFrame(0.345833331F, new Vector2(0.934360027F, 0.934360027F), CubicBezierEasingFunction_0());
                // Frame 84.
                result.InsertKeyFrame(0.349999994F, new Vector2(0.9296F, 0.9296F), CubicBezierEasingFunction_0());
                // Frame 85.
                result.InsertKeyFrame(0.354166657F, new Vector2(0.924769998F, 0.924769998F), CubicBezierEasingFunction_0());
                // Frame 86.
                result.InsertKeyFrame(0.358333319F, new Vector2(0.919879973F, 0.919879973F), CubicBezierEasingFunction_0());
                // Frame 87.
                result.InsertKeyFrame(0.362500012F, new Vector2(0.914950013F, 0.914950013F), CubicBezierEasingFunction_0());
                // Frame 88.
                result.InsertKeyFrame(0.366666675F, new Vector2(0.909990013F, 0.909990013F), CubicBezierEasingFunction_0());
                // Frame 89.
                result.InsertKeyFrame(0.370833337F, new Vector2(0.904999971F, 0.904999971F), CubicBezierEasingFunction_0());
                // Frame 91.
                result.InsertKeyFrame(0.379166663F, new Vector2(0.894999981F, 0.894999981F), CubicBezierEasingFunction_0());
                // Frame 92.
                result.InsertKeyFrame(0.383333325F, new Vector2(0.890009999F, 0.890009999F), CubicBezierEasingFunction_0());
                // Frame 93.
                result.InsertKeyFrame(0.387499988F, new Vector2(0.885049999F, 0.885049999F), CubicBezierEasingFunction_0());
                // Frame 94.
                result.InsertKeyFrame(0.391666681F, new Vector2(0.880119979F, 0.880119979F), CubicBezierEasingFunction_0());
                // Frame 95.
                result.InsertKeyFrame(0.395833343F, new Vector2(0.875230014F, 0.875230014F), CubicBezierEasingFunction_0());
                // Frame 96.
                result.InsertKeyFrame(0.400000006F, new Vector2(0.870400012F, 0.870400012F), CubicBezierEasingFunction_0());
                // Frame 97.
                result.InsertKeyFrame(0.404166669F, new Vector2(0.865639985F, 0.865639985F), CubicBezierEasingFunction_0());
                // Frame 98.
                result.InsertKeyFrame(0.408333331F, new Vector2(0.860949993F, 0.860949993F), CubicBezierEasingFunction_0());
                // Frame 99.
                result.InsertKeyFrame(0.412499994F, new Vector2(0.856350005F, 0.856350005F), CubicBezierEasingFunction_0());
                // Frame 100.
                result.InsertKeyFrame(0.416666657F, new Vector2(0.851849973F, 0.851849973F), CubicBezierEasingFunction_0());
                // Frame 101.
                result.InsertKeyFrame(0.420833319F, new Vector2(0.847459972F, 0.847459972F), CubicBezierEasingFunction_0());
                // Frame 102.
                result.InsertKeyFrame(0.425000012F, new Vector2(0.843200028F, 0.843200028F), CubicBezierEasingFunction_0());
                // Frame 103.
                result.InsertKeyFrame(0.429166675F, new Vector2(0.839070022F, 0.839070022F), CubicBezierEasingFunction_0());
                // Frame 104.
                result.InsertKeyFrame(0.433333337F, new Vector2(0.835080028F, 0.835080028F), CubicBezierEasingFunction_0());
                // Frame 105.
                result.InsertKeyFrame(0.4375F, new Vector2(0.831250012F, 0.831250012F), CubicBezierEasingFunction_0());
                // Frame 106.
                result.InsertKeyFrame(0.441666663F, new Vector2(0.827589989F, 0.827589989F), CubicBezierEasingFunction_0());
                // Frame 107.
                result.InsertKeyFrame(0.445833325F, new Vector2(0.824100018F, 0.824100018F), CubicBezierEasingFunction_0());
                // Frame 108.
                result.InsertKeyFrame(0.449999988F, new Vector2(0.820800006F, 0.820800006F), CubicBezierEasingFunction_0());
                // Frame 109.
                result.InsertKeyFrame(0.454166681F, new Vector2(0.817700028F, 0.817700028F), CubicBezierEasingFunction_0());
                // Frame 110.
                result.InsertKeyFrame(0.458333343F, new Vector2(0.814809978F, 0.814809978F), CubicBezierEasingFunction_0());
                // Frame 111.
                result.InsertKeyFrame(0.462500006F, new Vector2(0.812150002F, 0.812150002F), CubicBezierEasingFunction_0());
                // Frame 112.
                result.InsertKeyFrame(0.466666669F, new Vector2(0.80971998F, 0.80971998F), CubicBezierEasingFunction_0());
                // Frame 113.
                result.InsertKeyFrame(0.470833331F, new Vector2(0.807529986F, 0.807529986F), CubicBezierEasingFunction_0());
                // Frame 114.
                result.InsertKeyFrame(0.474999994F, new Vector2(0.805599988F, 0.805599988F), CubicBezierEasingFunction_0());
                // Frame 115.
                result.InsertKeyFrame(0.479166657F, new Vector2(0.803939998F, 0.803939998F), CubicBezierEasingFunction_0());
                // Frame 116.
                result.InsertKeyFrame(0.483333319F, new Vector2(0.802550018F, 0.802550018F), CubicBezierEasingFunction_0());
                // Frame 117.
                result.InsertKeyFrame(0.487500012F, new Vector2(0.801450014F, 0.801450014F), CubicBezierEasingFunction_0());
                // Frame 118.
                result.InsertKeyFrame(0.491666675F, new Vector2(0.800650001F, 0.800650001F), CubicBezierEasingFunction_0());
                // Frame 123.
                result.InsertKeyFrame(0.512499988F, new Vector2(0.801450014F, 0.801450014F), CubicBezierEasingFunction_0());
                // Frame 124.
                result.InsertKeyFrame(0.516666651F, new Vector2(0.802550018F, 0.802550018F), CubicBezierEasingFunction_0());
                // Frame 125.
                result.InsertKeyFrame(0.520833313F, new Vector2(0.803939998F, 0.803939998F), CubicBezierEasingFunction_0());
                // Frame 126.
                result.InsertKeyFrame(0.524999976F, new Vector2(0.805599988F, 0.805599988F), CubicBezierEasingFunction_0());
                // Frame 127.
                result.InsertKeyFrame(0.529166639F, new Vector2(0.807529986F, 0.807529986F), CubicBezierEasingFunction_0());
                // Frame 128.
                result.InsertKeyFrame(0.533333361F, new Vector2(0.80971998F, 0.80971998F), CubicBezierEasingFunction_0());
                // Frame 129.
                result.InsertKeyFrame(0.537500024F, new Vector2(0.812150002F, 0.812150002F), CubicBezierEasingFunction_0());
                // Frame 130.
                result.InsertKeyFrame(0.541666687F, new Vector2(0.814809978F, 0.814809978F), CubicBezierEasingFunction_0());
                // Frame 131.
                result.InsertKeyFrame(0.545833349F, new Vector2(0.817700028F, 0.817700028F), CubicBezierEasingFunction_0());
                // Frame 132.
                result.InsertKeyFrame(0.550000012F, new Vector2(0.820800006F, 0.820800006F), CubicBezierEasingFunction_0());
                // Frame 133.
                result.InsertKeyFrame(0.554166675F, new Vector2(0.824100018F, 0.824100018F), CubicBezierEasingFunction_0());
                // Frame 134.
                result.InsertKeyFrame(0.558333337F, new Vector2(0.827589989F, 0.827589989F), CubicBezierEasingFunction_0());
                // Frame 135.
                result.InsertKeyFrame(0.5625F, new Vector2(0.831250012F, 0.831250012F), CubicBezierEasingFunction_0());
                // Frame 136.
                result.InsertKeyFrame(0.566666663F, new Vector2(0.835080028F, 0.835080028F), CubicBezierEasingFunction_0());
                // Frame 137.
                result.InsertKeyFrame(0.570833325F, new Vector2(0.839070022F, 0.839070022F), CubicBezierEasingFunction_0());
                // Frame 138.
                result.InsertKeyFrame(0.574999988F, new Vector2(0.843200028F, 0.843200028F), CubicBezierEasingFunction_0());
                // Frame 139.
                result.InsertKeyFrame(0.579166651F, new Vector2(0.847459972F, 0.847459972F), CubicBezierEasingFunction_0());
                // Frame 140.
                result.InsertKeyFrame(0.583333313F, new Vector2(0.851849973F, 0.851849973F), CubicBezierEasingFunction_0());
                // Frame 141.
                result.InsertKeyFrame(0.587499976F, new Vector2(0.856350005F, 0.856350005F), CubicBezierEasingFunction_0());
                // Frame 142.
                result.InsertKeyFrame(0.591666639F, new Vector2(0.860949993F, 0.860949993F), CubicBezierEasingFunction_0());
                // Frame 143.
                result.InsertKeyFrame(0.595833361F, new Vector2(0.865639985F, 0.865639985F), CubicBezierEasingFunction_0());
                // Frame 144.
                result.InsertKeyFrame(0.600000024F, new Vector2(0.870400012F, 0.870400012F), CubicBezierEasingFunction_0());
                // Frame 145.
                result.InsertKeyFrame(0.604166687F, new Vector2(0.875230014F, 0.875230014F), CubicBezierEasingFunction_0());
                // Frame 146.
                result.InsertKeyFrame(0.608333349F, new Vector2(0.880119979F, 0.880119979F), CubicBezierEasingFunction_0());
                // Frame 147.
                result.InsertKeyFrame(0.612500012F, new Vector2(0.885049999F, 0.885049999F), CubicBezierEasingFunction_0());
                // Frame 148.
                result.InsertKeyFrame(0.616666675F, new Vector2(0.890009999F, 0.890009999F), CubicBezierEasingFunction_0());
                // Frame 149.
                result.InsertKeyFrame(0.620833337F, new Vector2(0.894999981F, 0.894999981F), CubicBezierEasingFunction_0());
                // Frame 151.
                result.InsertKeyFrame(0.629166663F, new Vector2(0.904999971F, 0.904999971F), CubicBezierEasingFunction_0());
                // Frame 152.
                result.InsertKeyFrame(0.633333325F, new Vector2(0.909990013F, 0.909990013F), CubicBezierEasingFunction_0());
                // Frame 153.
                result.InsertKeyFrame(0.637499988F, new Vector2(0.914950013F, 0.914950013F), CubicBezierEasingFunction_0());
                // Frame 154.
                result.InsertKeyFrame(0.641666651F, new Vector2(0.919879973F, 0.919879973F), CubicBezierEasingFunction_0());
                // Frame 155.
                result.InsertKeyFrame(0.645833313F, new Vector2(0.924769998F, 0.924769998F), CubicBezierEasingFunction_0());
                // Frame 156.
                result.InsertKeyFrame(0.649999976F, new Vector2(0.9296F, 0.9296F), CubicBezierEasingFunction_0());
                // Frame 157.
                result.InsertKeyFrame(0.654166639F, new Vector2(0.934360027F, 0.934360027F), CubicBezierEasingFunction_0());
                // Frame 158.
                result.InsertKeyFrame(0.658333361F, new Vector2(0.939050019F, 0.939050019F), CubicBezierEasingFunction_0());
                // Frame 159.
                result.InsertKeyFrame(0.662500024F, new Vector2(0.943650007F, 0.943650007F), CubicBezierEasingFunction_0());
                // Frame 160.
                result.InsertKeyFrame(0.666666687F, new Vector2(0.948149979F, 0.948149979F), CubicBezierEasingFunction_0());
                // Frame 161.
                result.InsertKeyFrame(0.670833349F, new Vector2(0.95253998F, 0.95253998F), CubicBezierEasingFunction_0());
                // Frame 162.
                result.InsertKeyFrame(0.675000012F, new Vector2(0.956799984F, 0.956799984F), CubicBezierEasingFunction_0());
                // Frame 163.
                result.InsertKeyFrame(0.679166675F, new Vector2(0.96092999F, 0.96092999F), CubicBezierEasingFunction_0());
                // Frame 164.
                result.InsertKeyFrame(0.683333337F, new Vector2(0.964919984F, 0.964919984F), CubicBezierEasingFunction_0());
                // Frame 165.
                result.InsertKeyFrame(0.6875F, new Vector2(0.96875F, 0.96875F), CubicBezierEasingFunction_0());
                // Frame 166.
                result.InsertKeyFrame(0.691666663F, new Vector2(0.972410023F, 0.972410023F), CubicBezierEasingFunction_0());
                // Frame 167.
                result.InsertKeyFrame(0.695833325F, new Vector2(0.975899994F, 0.975899994F), CubicBezierEasingFunction_0());
                // Frame 168.
                result.InsertKeyFrame(0.699999988F, new Vector2(0.979200006F, 0.979200006F), CubicBezierEasingFunction_0());
                // Frame 169.
                result.InsertKeyFrame(0.704166651F, new Vector2(0.982299984F, 0.982299984F), CubicBezierEasingFunction_0());
                // Frame 170.
                result.InsertKeyFrame(0.708333313F, new Vector2(0.985189974F, 0.985189974F), CubicBezierEasingFunction_0());
                // Frame 171.
                result.InsertKeyFrame(0.712499976F, new Vector2(0.98785001F, 0.98785001F), CubicBezierEasingFunction_0());
                // Frame 172.
                result.InsertKeyFrame(0.716666639F, new Vector2(0.990279973F, 0.990279973F), CubicBezierEasingFunction_0());
                // Frame 173.
                result.InsertKeyFrame(0.720833361F, new Vector2(0.992470026F, 0.992470026F), CubicBezierEasingFunction_0());
                // Frame 174.
                result.InsertKeyFrame(0.725000024F, new Vector2(0.994400024F, 0.994400024F), CubicBezierEasingFunction_0());
                // Frame 175.
                result.InsertKeyFrame(0.729166687F, new Vector2(0.996060014F, 0.996060014F), CubicBezierEasingFunction_0());
                // Frame 176.
                result.InsertKeyFrame(0.733333349F, new Vector2(0.997449994F, 0.997449994F), CubicBezierEasingFunction_0());
                // Frame 177.
                result.InsertKeyFrame(0.737500012F, new Vector2(0.998549998F, 0.998549998F), CubicBezierEasingFunction_0());
                // Frame 178.
                result.InsertKeyFrame(0.741666675F, new Vector2(0.999350011F, 0.999350011F), CubicBezierEasingFunction_0());
                // Frame 183.
                result.InsertKeyFrame(0.762499988F, new Vector2(0.998549998F, 0.998549998F), CubicBezierEasingFunction_0());
                // Frame 184.
                result.InsertKeyFrame(0.766666651F, new Vector2(0.997449994F, 0.997449994F), CubicBezierEasingFunction_0());
                // Frame 185.
                result.InsertKeyFrame(0.770833313F, new Vector2(0.996060014F, 0.996060014F), CubicBezierEasingFunction_0());
                // Frame 186.
                result.InsertKeyFrame(0.774999976F, new Vector2(0.994400024F, 0.994400024F), CubicBezierEasingFunction_0());
                // Frame 187.
                result.InsertKeyFrame(0.779166639F, new Vector2(0.992470026F, 0.992470026F), CubicBezierEasingFunction_0());
                // Frame 188.
                result.InsertKeyFrame(0.783333361F, new Vector2(0.990279973F, 0.990279973F), CubicBezierEasingFunction_0());
                // Frame 189.
                result.InsertKeyFrame(0.787500024F, new Vector2(0.98785001F, 0.98785001F), CubicBezierEasingFunction_0());
                // Frame 190.
                result.InsertKeyFrame(0.791666687F, new Vector2(0.985189974F, 0.985189974F), CubicBezierEasingFunction_0());
                // Frame 191.
                result.InsertKeyFrame(0.795833349F, new Vector2(0.982299984F, 0.982299984F), CubicBezierEasingFunction_0());
                // Frame 192.
                result.InsertKeyFrame(0.800000012F, new Vector2(0.979200006F, 0.979200006F), CubicBezierEasingFunction_0());
                // Frame 193.
                result.InsertKeyFrame(0.804166675F, new Vector2(0.975899994F, 0.975899994F), CubicBezierEasingFunction_0());
                // Frame 194.
                result.InsertKeyFrame(0.808333337F, new Vector2(0.972410023F, 0.972410023F), CubicBezierEasingFunction_0());
                // Frame 195.
                result.InsertKeyFrame(0.8125F, new Vector2(0.96875F, 0.96875F), CubicBezierEasingFunction_0());
                // Frame 196.
                result.InsertKeyFrame(0.816666663F, new Vector2(0.964919984F, 0.964919984F), CubicBezierEasingFunction_0());
                // Frame 197.
                result.InsertKeyFrame(0.820833325F, new Vector2(0.96092999F, 0.96092999F), CubicBezierEasingFunction_0());
                // Frame 198.
                result.InsertKeyFrame(0.824999988F, new Vector2(0.956799984F, 0.956799984F), CubicBezierEasingFunction_0());
                // Frame 199.
                result.InsertKeyFrame(0.829166651F, new Vector2(0.95253998F, 0.95253998F), CubicBezierEasingFunction_0());
                // Frame 200.
                result.InsertKeyFrame(0.833333313F, new Vector2(0.948149979F, 0.948149979F), CubicBezierEasingFunction_0());
                // Frame 201.
                result.InsertKeyFrame(0.837499976F, new Vector2(0.943650007F, 0.943650007F), CubicBezierEasingFunction_0());
                // Frame 202.
                result.InsertKeyFrame(0.841666639F, new Vector2(0.939050019F, 0.939050019F), CubicBezierEasingFunction_0());
                // Frame 203.
                result.InsertKeyFrame(0.845833361F, new Vector2(0.934360027F, 0.934360027F), CubicBezierEasingFunction_0());
                // Frame 204.
                result.InsertKeyFrame(0.850000024F, new Vector2(0.9296F, 0.9296F), CubicBezierEasingFunction_0());
                // Frame 205.
                result.InsertKeyFrame(0.854166687F, new Vector2(0.924769998F, 0.924769998F), CubicBezierEasingFunction_0());
                // Frame 206.
                result.InsertKeyFrame(0.858333349F, new Vector2(0.919879973F, 0.919879973F), CubicBezierEasingFunction_0());
                // Frame 207.
                result.InsertKeyFrame(0.862500012F, new Vector2(0.914950013F, 0.914950013F), CubicBezierEasingFunction_0());
                // Frame 208.
                result.InsertKeyFrame(0.866666675F, new Vector2(0.909990013F, 0.909990013F), CubicBezierEasingFunction_0());
                // Frame 209.
                result.InsertKeyFrame(0.870833337F, new Vector2(0.904999971F, 0.904999971F), CubicBezierEasingFunction_0());
                // Frame 211.
                result.InsertKeyFrame(0.879166663F, new Vector2(0.894999981F, 0.894999981F), CubicBezierEasingFunction_0());
                // Frame 212.
                result.InsertKeyFrame(0.883333325F, new Vector2(0.890009999F, 0.890009999F), CubicBezierEasingFunction_0());
                // Frame 213.
                result.InsertKeyFrame(0.887499988F, new Vector2(0.885049999F, 0.885049999F), CubicBezierEasingFunction_0());
                // Frame 214.
                result.InsertKeyFrame(0.891666651F, new Vector2(0.880119979F, 0.880119979F), CubicBezierEasingFunction_0());
                // Frame 215.
                result.InsertKeyFrame(0.895833313F, new Vector2(0.875230014F, 0.875230014F), CubicBezierEasingFunction_0());
                // Frame 216.
                result.InsertKeyFrame(0.899999976F, new Vector2(0.870400012F, 0.870400012F), CubicBezierEasingFunction_0());
                // Frame 217.
                result.InsertKeyFrame(0.904166639F, new Vector2(0.865639985F, 0.865639985F), CubicBezierEasingFunction_0());
                // Frame 218.
                result.InsertKeyFrame(0.908333361F, new Vector2(0.860949993F, 0.860949993F), CubicBezierEasingFunction_0());
                // Frame 219.
                result.InsertKeyFrame(0.912500024F, new Vector2(0.856350005F, 0.856350005F), CubicBezierEasingFunction_0());
                // Frame 220.
                result.InsertKeyFrame(0.916666687F, new Vector2(0.851849973F, 0.851849973F), CubicBezierEasingFunction_0());
                // Frame 221.
                result.InsertKeyFrame(0.920833349F, new Vector2(0.847459972F, 0.847459972F), CubicBezierEasingFunction_0());
                // Frame 222.
                result.InsertKeyFrame(0.925000012F, new Vector2(0.843200028F, 0.843200028F), CubicBezierEasingFunction_0());
                // Frame 223.
                result.InsertKeyFrame(0.929166675F, new Vector2(0.839070022F, 0.839070022F), CubicBezierEasingFunction_0());
                // Frame 224.
                result.InsertKeyFrame(0.933333337F, new Vector2(0.835080028F, 0.835080028F), CubicBezierEasingFunction_0());
                // Frame 225.
                result.InsertKeyFrame(0.9375F, new Vector2(0.831250012F, 0.831250012F), CubicBezierEasingFunction_0());
                // Frame 226.
                result.InsertKeyFrame(0.941666663F, new Vector2(0.827589989F, 0.827589989F), CubicBezierEasingFunction_0());
                // Frame 227.
                result.InsertKeyFrame(0.945833325F, new Vector2(0.824100018F, 0.824100018F), CubicBezierEasingFunction_0());
                // Frame 228.
                result.InsertKeyFrame(0.949999988F, new Vector2(0.820800006F, 0.820800006F), CubicBezierEasingFunction_0());
                // Frame 229.
                result.InsertKeyFrame(0.954166651F, new Vector2(0.817700028F, 0.817700028F), CubicBezierEasingFunction_0());
                // Frame 230.
                result.InsertKeyFrame(0.958333313F, new Vector2(0.814809978F, 0.814809978F), CubicBezierEasingFunction_0());
                // Frame 231.
                result.InsertKeyFrame(0.962499976F, new Vector2(0.812150002F, 0.812150002F), CubicBezierEasingFunction_0());
                // Frame 232.
                result.InsertKeyFrame(0.966666639F, new Vector2(0.80971998F, 0.80971998F), CubicBezierEasingFunction_0());
                // Frame 233.
                result.InsertKeyFrame(0.970833361F, new Vector2(0.807529986F, 0.807529986F), CubicBezierEasingFunction_0());
                // Frame 234.
                result.InsertKeyFrame(0.975000024F, new Vector2(0.805599988F, 0.805599988F), CubicBezierEasingFunction_0());
                // Frame 235.
                result.InsertKeyFrame(0.979166687F, new Vector2(0.803939998F, 0.803939998F), CubicBezierEasingFunction_0());
                // Frame 236.
                result.InsertKeyFrame(0.983333349F, new Vector2(0.802550018F, 0.802550018F), CubicBezierEasingFunction_0());
                // Frame 237.
                result.InsertKeyFrame(0.987500012F, new Vector2(0.801450014F, 0.801450014F), CubicBezierEasingFunction_0());
                // Frame 238.
                result.InsertKeyFrame(0.991666675F, new Vector2(0.800650001F, 0.800650001F), CubicBezierEasingFunction_0());
                return result;
            }

            // - Layer aggregator
            // Scale
            Vector2KeyFrameAnimation ScaleVector2Animation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), StepThenHoldEasingFunction());
                // Frame 50.
                result.InsertKeyFrame(0.208333328F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 60.
                result.InsertKeyFrame(0.25F, new Vector2(1F, 1F), CubicBezierEasingFunction_1());
                // Frame 200.
                result.InsertKeyFrame(0.833333313F, new Vector2(1F, 1F), CubicBezierEasingFunction_1());
                // Frame 209.83.
                result.InsertKeyFrame(0.874308288F, new Vector2(0F, 0F), CubicBezierEasingFunction_1());
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 1 Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_0()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 10.
                result.InsertKeyFrame(0.0416666679F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 180.
                result.InsertKeyFrame(0.75F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 2 Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_1()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 20.
                result.InsertKeyFrame(0.0833333358F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 170.
                result.InsertKeyFrame(0.708333313F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 3 Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_2()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 30.
                result.InsertKeyFrame(0.125F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 160.
                result.InsertKeyFrame(0.666666687F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // - - - PreComp layer: pin
            // - Layer aggregator
            // Layer: pin 4 Outlines
            Vector2KeyFrameAnimation ShapeVisibilityAnimation_3()
            {
                // Frame 0.
                var result = CreateVector2KeyFrameAnimation(0F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                // Frame 40.
                result.InsertKeyFrame(0.166666672F, new Vector2(1F, 1F), HoldThenStepEasingFunction());
                // Frame 150.
                result.InsertKeyFrame(0.625F, new Vector2(0F, 0F), HoldThenStepEasingFunction());
                return result;
            }

            // PreComp layer: lock
            // Offset
            Vector3KeyFrameAnimation OffsetVector3Animation_0()
            {
                // Frame 0.
                var result = CreateVector3KeyFrameAnimation(0F, new Vector3(-3.39700007F, -0.199000001F, 0F), StepThenHoldEasingFunction());
                // Frame 1.
                result.InsertKeyFrame(0.00416666688F, new Vector3(-3.39700007F, -0.199000001F, 0F), HoldThenStepEasingFunction());
                // Frame 2.
                result.InsertKeyFrame(0.00833333377F, new Vector3(-3.84500003F, 0.219999999F, 0F), CubicBezierEasingFunction_0());
                // Frame 3.
                result.InsertKeyFrame(0.0125000002F, new Vector3(-4.28299999F, 0.630999982F, 0F), CubicBezierEasingFunction_0());
                // Frame 4.
                result.InsertKeyFrame(0.0166666675F, new Vector3(-4.71000004F, 1.03199995F, 0F), CubicBezierEasingFunction_0());
                // Frame 5.
                result.InsertKeyFrame(0.020833334F, new Vector3(-5.12200022F, 1.42299998F, 0F), CubicBezierEasingFunction_0());
                // Frame 6.
                result.InsertKeyFrame(0.0250000004F, new Vector3(-5.5170002F, 1.79999995F, 0F), CubicBezierEasingFunction_0());
                // Frame 7.
                result.InsertKeyFrame(0.0291666668F, new Vector3(-5.8920002F, 2.16199994F, 0F), CubicBezierEasingFunction_0());
                // Frame 8.
                result.InsertKeyFrame(0.0333333351F, new Vector3(-6.24399996F, 2.50600004F, 0F), CubicBezierEasingFunction_0());
                // Frame 9.
                result.InsertKeyFrame(0.0375000015F, new Vector3(-6.5710001F, 2.82999992F, 0F), CubicBezierEasingFunction_0());
                // Frame 11.
                result.InsertKeyFrame(0.0458333343F, new Vector3(-7.13199997F, 3.40899992F, 0F), CubicBezierEasingFunction_0());
                // Frame 14.
                result.InsertKeyFrame(0.0583333336F, new Vector3(-7.69299984F, 4.08500004F, 0F), CubicBezierEasingFunction_0());
                // Frame 21.
                result.InsertKeyFrame(0.0874999985F, new Vector3(-7.421F, 5.24800014F, 0F), CubicBezierEasingFunction_0());
                // Frame 23.
                result.InsertKeyFrame(0.0958333313F, new Vector3(-7.00600004F, 5.48400021F, 0F), CubicBezierEasingFunction_0());
                // Frame 25.
                result.InsertKeyFrame(0.104166664F, new Vector3(-6.47300005F, 5.67399979F, 0F), CubicBezierEasingFunction_0());
                // Frame 26.
                result.InsertKeyFrame(0.108333334F, new Vector3(-6.16800022F, 5.75199986F, 0F), CubicBezierEasingFunction_0());
                // Frame 27.
                result.InsertKeyFrame(0.112499997F, new Vector3(-5.83900023F, 5.81799984F, 0F), CubicBezierEasingFunction_0());
                // Frame 28.
                result.InsertKeyFrame(0.116666667F, new Vector3(-5.48999977F, 5.87200022F, 0F), CubicBezierEasingFunction_0());
                // Frame 29.
                result.InsertKeyFrame(0.12083333F, new Vector3(-5.12099981F, 5.91400003F, 0F), CubicBezierEasingFunction_0());
                // Frame 30.
                result.InsertKeyFrame(0.125F, new Vector3(-4.73500013F, 5.94500017F, 0F), CubicBezierEasingFunction_0());
                // Frame 31.
                result.InsertKeyFrame(0.129166663F, new Vector3(-4.33400011F, 5.96400023F, 0F), CubicBezierEasingFunction_0());
                // Frame 32.
                result.InsertKeyFrame(0.13333334F, new Vector3(-3.91899991F, 5.97100019F, 0F), CubicBezierEasingFunction_0());
                // Frame 33.
                result.InsertKeyFrame(0.137500003F, new Vector3(-3.49300003F, 5.96700001F, 0F), CubicBezierEasingFunction_0());
                // Frame 34.
                result.InsertKeyFrame(0.141666666F, new Vector3(-3.05699992F, 5.95200014F, 0F), CubicBezierEasingFunction_0());
                // Frame 35.
                result.InsertKeyFrame(0.145833328F, new Vector3(-2.61299992F, 5.92500019F, 0F), CubicBezierEasingFunction_0());
                // Frame 36.
                result.InsertKeyFrame(0.150000006F, new Vector3(-2.16400003F, 5.88800001F, 0F), CubicBezierEasingFunction_0());
                // Frame 37.
                result.InsertKeyFrame(0.154166669F, new Vector3(-1.71000004F, 5.84100008F, 0F), CubicBezierEasingFunction_0());
                // Frame 38.
                result.InsertKeyFrame(0.158333331F, new Vector3(-1.25300002F, 5.78299999F, 0F), CubicBezierEasingFunction_0());
                // Frame 39.
                result.InsertKeyFrame(0.162499994F, new Vector3(-0.796000004F, 5.71600008F, 0F), CubicBezierEasingFunction_0());
                // Frame 40.
                result.InsertKeyFrame(0.166666672F, new Vector3(-0.338999987F, 5.63899994F, 0F), CubicBezierEasingFunction_0());
                // Frame 41.
                result.InsertKeyFrame(0.170833334F, new Vector3(0.115000002F, 5.55299997F, 0F), CubicBezierEasingFunction_0());
                // Frame 42.
                result.InsertKeyFrame(0.174999997F, new Vector3(0.565999985F, 5.45900011F, 0F), CubicBezierEasingFunction_0());
                // Frame 43.
                result.InsertKeyFrame(0.17916666F, new Vector3(1.00999999F, 5.35599995F, 0F), CubicBezierEasingFunction_0());
                // Frame 44.
                result.InsertKeyFrame(0.183333337F, new Vector3(1.44799995F, 5.24599981F, 0F), CubicBezierEasingFunction_0());
                // Frame 45.
                result.InsertKeyFrame(0.1875F, new Vector3(1.87699997F, 5.12900019F, 0F), CubicBezierEasingFunction_0());
                // Frame 46.
                result.InsertKeyFrame(0.191666663F, new Vector3(2.296F, 5.00600004F, 0F), CubicBezierEasingFunction_0());
                // Frame 47.
                result.InsertKeyFrame(0.19583334F, new Vector3(2.704F, 4.87699986F, 0F), CubicBezierEasingFunction_0());
                // Frame 48.
                result.InsertKeyFrame(0.200000003F, new Vector3(3.09800005F, 4.7420001F, 0F), CubicBezierEasingFunction_0());
                // Frame 49.
                result.InsertKeyFrame(0.204166666F, new Vector3(3.47900009F, 4.60400009F, 0F), CubicBezierEasingFunction_0());
                // Frame 50.
                result.InsertKeyFrame(0.208333328F, new Vector3(3.84299994F, 4.46099997F, 0F), CubicBezierEasingFunction_0());
                // Frame 51.
                result.InsertKeyFrame(0.212500006F, new Vector3(4.19099998F, 5.09700012F, 0F), CubicBezierEasingFunction_0());
                // Frame 52.
                result.InsertKeyFrame(0.216666669F, new Vector3(4.51999998F, 7.47700024F, 0F), CubicBezierEasingFunction_0());
                // Frame 53.
                result.InsertKeyFrame(0.220833331F, new Vector3(4.82999992F, 11.3769999F, 0F), CubicBezierEasingFunction_0());
                // Frame 54.
                result.InsertKeyFrame(0.224999994F, new Vector3(5.11899996F, 15.8389997F, 0F), CubicBezierEasingFunction_0());
                // Frame 55.
                result.InsertKeyFrame(0.229166672F, new Vector3(5.38600016F, 19.8409996F, 0F), CubicBezierEasingFunction_0());
                // Frame 56.
                result.InsertKeyFrame(0.233333334F, new Vector3(5.63000011F, 22.9249992F, 0F), CubicBezierEasingFunction_0());
                // Frame 57.
                result.InsertKeyFrame(0.237499997F, new Vector3(5.84899998F, 25.0629997F, 0F), CubicBezierEasingFunction_0());
                // Frame 58.
                result.InsertKeyFrame(0.24166666F, new Vector3(6.04300022F, 26.3910007F, 0F), CubicBezierEasingFunction_0());
                // Frame 61.
                result.InsertKeyFrame(0.254166663F, new Vector3(6.46299982F, 26.2460003F, 0F), CubicBezierEasingFunction_0());
                // Frame 62.
                result.InsertKeyFrame(0.258333325F, new Vector3(6.54500008F, 23.6070004F, 0F), CubicBezierEasingFunction_0());
                // Frame 63.
                result.InsertKeyFrame(0.262499988F, new Vector3(6.59700012F, 19.4459991F, 0F), CubicBezierEasingFunction_0());
                // Frame 64.
                result.InsertKeyFrame(0.266666681F, new Vector3(6.6170001F, 14.7250004F, 0F), CubicBezierEasingFunction_0());
                // Frame 65.
                result.InsertKeyFrame(0.270833343F, new Vector3(6.60500002F, 10.493F, 0F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.275000006F, new Vector3(6.55999994F, 7.19000006F, 0F), CubicBezierEasingFunction_0());
                // Frame 67.
                result.InsertKeyFrame(0.279166669F, new Vector3(6.48000002F, 4.84100008F, 0F), CubicBezierEasingFunction_0());
                // Frame 68.
                result.InsertKeyFrame(0.283333331F, new Vector3(6.36600018F, 3.3210001F, 0F), CubicBezierEasingFunction_0());
                // Frame 71.
                result.InsertKeyFrame(0.295833319F, new Vector3(5.80800009F, 2.24900007F, 0F), CubicBezierEasingFunction_0());
                // Frame 73.
                result.InsertKeyFrame(0.304166675F, new Vector3(5.24800014F, 2.32500005F, 0F), CubicBezierEasingFunction_0());
                // Frame 74.
                result.InsertKeyFrame(0.308333337F, new Vector3(4.93100023F, 2.37899995F, 0F), CubicBezierEasingFunction_0());
                // Frame 75.
                result.InsertKeyFrame(0.3125F, new Vector3(4.60900021F, 2.42799997F, 0F), CubicBezierEasingFunction_0());
                // Frame 76.
                result.InsertKeyFrame(0.316666663F, new Vector3(4.28200006F, 2.47099996F, 0F), CubicBezierEasingFunction_0());
                // Frame 77.
                result.InsertKeyFrame(0.320833325F, new Vector3(3.9519999F, 2.50900006F, 0F), CubicBezierEasingFunction_0());
                // Frame 78.
                result.InsertKeyFrame(0.324999988F, new Vector3(3.61899996F, 2.53999996F, 0F), CubicBezierEasingFunction_0());
                // Frame 79.
                result.InsertKeyFrame(0.329166681F, new Vector3(3.28500009F, 2.56599998F, 0F), CubicBezierEasingFunction_0());
                // Frame 80.
                result.InsertKeyFrame(0.333333343F, new Vector3(2.95000005F, 2.58599997F, 0F), CubicBezierEasingFunction_0());
                // Frame 81.
                result.InsertKeyFrame(0.337500006F, new Vector3(2.61599994F, 2.59899998F, 0F), CubicBezierEasingFunction_0());
                // Frame 82.
                result.InsertKeyFrame(0.341666669F, new Vector3(2.28399992F, 2.60599995F, 0F), CubicBezierEasingFunction_0());
                // Frame 83.
                result.InsertKeyFrame(0.345833331F, new Vector3(1.95299995F, 2.60599995F, 0F), CubicBezierEasingFunction_0());
                // Frame 84.
                result.InsertKeyFrame(0.349999994F, new Vector3(1.625F, 2.59899998F, 0F), CubicBezierEasingFunction_0());
                // Frame 85.
                result.InsertKeyFrame(0.354166657F, new Vector3(1.301F, 2.58599997F, 0F), CubicBezierEasingFunction_0());
                // Frame 86.
                result.InsertKeyFrame(0.358333319F, new Vector3(0.981000006F, 2.56699991F, 0F), CubicBezierEasingFunction_0());
                // Frame 87.
                result.InsertKeyFrame(0.362500012F, new Vector3(0.666000009F, 2.53999996F, 0F), CubicBezierEasingFunction_0());
                // Frame 88.
                result.InsertKeyFrame(0.366666675F, new Vector3(0.356999993F, 2.50699997F, 0F), CubicBezierEasingFunction_0());
                // Frame 90.
                result.InsertKeyFrame(0.375F, new Vector3(-0.243000001F, 2.421F, 0F), CubicBezierEasingFunction_0());
                // Frame 92.
                result.InsertKeyFrame(0.383333325F, new Vector3(-0.81400001F, 2.30900002F, 0F), CubicBezierEasingFunction_0());
                // Frame 94.
                result.InsertKeyFrame(0.391666681F, new Vector3(-1.35300004F, 2.171F, 0F), CubicBezierEasingFunction_0());
                // Frame 96.
                result.InsertKeyFrame(0.400000006F, new Vector3(-1.85800004F, 2.00900006F, 0F), CubicBezierEasingFunction_0());
                // Frame 98.
                result.InsertKeyFrame(0.408333331F, new Vector3(-2.3269999F, 1.82299995F, 0F), CubicBezierEasingFunction_0());
                // Frame 100.
                result.InsertKeyFrame(0.416666657F, new Vector3(-2.7579999F, 1.61600006F, 0F), CubicBezierEasingFunction_0());
                // Frame 103.
                result.InsertKeyFrame(0.429166675F, new Vector3(-3.33299994F, 1.26800001F, 0F), CubicBezierEasingFunction_0());
                // Frame 106.
                result.InsertKeyFrame(0.441666663F, new Vector3(-3.82399988F, 0.883000016F, 0F), CubicBezierEasingFunction_0());
                // Frame 110.
                result.InsertKeyFrame(0.458333343F, new Vector3(-4.35200024F, 0.328999996F, 0F), CubicBezierEasingFunction_0());
                // Frame 116.
                result.InsertKeyFrame(0.483333319F, new Vector3(-4.92299986F, -0.537999988F, 0F), CubicBezierEasingFunction_0());
                // Frame 124.
                result.InsertKeyFrame(0.516666651F, new Vector3(-5.45300007F, -1.58800006F, 0F), CubicBezierEasingFunction_0());
                // Frame 131.
                result.InsertKeyFrame(0.545833349F, new Vector3(-6.00400019F, -2.17499995F, 0F), CubicBezierEasingFunction_0());
                // Frame 136.
                result.InsertKeyFrame(0.566666663F, new Vector3(-6.54899979F, -2.31500006F, 0F), CubicBezierEasingFunction_0());
                // Frame 153.
                result.InsertKeyFrame(0.637499988F, new Vector3(-6.09899998F, -2.43799996F, 0F), CubicBezierEasingFunction_0());
                // Frame 156.
                result.InsertKeyFrame(0.649999976F, new Vector3(-5.57700014F, -2.44499993F, 0F), CubicBezierEasingFunction_0());
                // Frame 158.
                result.InsertKeyFrame(0.658333361F, new Vector3(-5.15799999F, -2.45000005F, 0F), CubicBezierEasingFunction_0());
                // Frame 160.
                result.InsertKeyFrame(0.666666687F, new Vector3(-4.6869998F, -2.45700002F, 0F), CubicBezierEasingFunction_0());
                // Frame 162.
                result.InsertKeyFrame(0.675000012F, new Vector3(-4.16699982F, -2.46700001F, 0F), CubicBezierEasingFunction_0());
                // Frame 164.
                result.InsertKeyFrame(0.683333337F, new Vector3(-3.602F, -2.47900009F, 0F), CubicBezierEasingFunction_0());
                // Frame 165.
                result.InsertKeyFrame(0.6875F, new Vector3(-3.30500007F, -2.48699999F, 0F), CubicBezierEasingFunction_0());
                // Frame 166.
                result.InsertKeyFrame(0.691666663F, new Vector3(-2.99799991F, -2.49499989F, 0F), CubicBezierEasingFunction_0());
                // Frame 167.
                result.InsertKeyFrame(0.695833325F, new Vector3(-2.68400002F, -2.50399995F, 0F), CubicBezierEasingFunction_0());
                // Frame 168.
                result.InsertKeyFrame(0.699999988F, new Vector3(-2.36199999F, -2.5150001F, 0F), CubicBezierEasingFunction_0());
                // Frame 169.
                result.InsertKeyFrame(0.704166651F, new Vector3(-2.03399992F, -2.52600002F, 0F), CubicBezierEasingFunction_0());
                // Frame 170.
                result.InsertKeyFrame(0.708333313F, new Vector3(-1.70000005F, -2.53800011F, 0F), CubicBezierEasingFunction_0());
                // Frame 171.
                result.InsertKeyFrame(0.712499976F, new Vector3(-1.36099994F, -2.55200005F, 0F), CubicBezierEasingFunction_0());
                // Frame 172.
                result.InsertKeyFrame(0.716666639F, new Vector3(-1.01900005F, -2.56699991F, 0F), CubicBezierEasingFunction_0());
                // Frame 173.
                result.InsertKeyFrame(0.720833361F, new Vector3(-0.674000025F, -2.58200002F, 0F), CubicBezierEasingFunction_0());
                // Frame 174.
                result.InsertKeyFrame(0.725000024F, new Vector3(-0.328000009F, -2.5999999F, 0F), CubicBezierEasingFunction_0());
                // Frame 175.
                result.InsertKeyFrame(0.729166687F, new Vector3(0.0179999992F, -2.61800003F, 0F), CubicBezierEasingFunction_0());
                // Frame 176.
                result.InsertKeyFrame(0.733333349F, new Vector3(0.363000005F, -2.63800001F, 0F), CubicBezierEasingFunction_0());
                // Frame 177.
                result.InsertKeyFrame(0.737500012F, new Vector3(0.70599997F, -2.65899992F, 0F), CubicBezierEasingFunction_0());
                // Frame 178.
                result.InsertKeyFrame(0.741666675F, new Vector3(1.046F, -2.68099999F, 0F), CubicBezierEasingFunction_0());
                // Frame 179.
                result.InsertKeyFrame(0.745833337F, new Vector3(1.38F, -2.704F, 0F), CubicBezierEasingFunction_0());
                // Frame 180.
                result.InsertKeyFrame(0.75F, new Vector3(1.70899999F, -2.72900009F, 0F), CubicBezierEasingFunction_0());
                // Frame 181.
                result.InsertKeyFrame(0.754166663F, new Vector3(2.02900004F, -2.75500011F, 0F), CubicBezierEasingFunction_0());
                // Frame 182.
                result.InsertKeyFrame(0.758333325F, new Vector3(2.34100008F, -2.78299999F, 0F), CubicBezierEasingFunction_0());
                // Frame 184.
                result.InsertKeyFrame(0.766666651F, new Vector3(2.93000007F, -2.84200001F, 0F), CubicBezierEasingFunction_0());
                // Frame 186.
                result.InsertKeyFrame(0.774999976F, new Vector3(3.46300006F, -2.9059999F, 0F), CubicBezierEasingFunction_0());
                // Frame 188.
                result.InsertKeyFrame(0.783333361F, new Vector3(3.92700005F, -2.9749999F, 0F), CubicBezierEasingFunction_0());
                // Frame 191.
                result.InsertKeyFrame(0.795833349F, new Vector3(4.46099997F, -2.85700011F, 0F), CubicBezierEasingFunction_0());
                // Frame 192.
                result.InsertKeyFrame(0.800000012F, new Vector3(4.58799982F, -2.12100005F, 0F), CubicBezierEasingFunction_0());
                // Frame 193.
                result.InsertKeyFrame(0.804166675F, new Vector3(4.68599987F, -0.723999977F, 0F), CubicBezierEasingFunction_0());
                // Frame 194.
                result.InsertKeyFrame(0.808333337F, new Vector3(4.75400019F, 1.48699999F, 0F), CubicBezierEasingFunction_0());
                // Frame 195.
                result.InsertKeyFrame(0.8125F, new Vector3(4.79199982F, 4.65399981F, 0F), CubicBezierEasingFunction_0());
                // Frame 196.
                result.InsertKeyFrame(0.816666663F, new Vector3(4.80100012F, 8.78299999F, 0F), CubicBezierEasingFunction_0());
                // Frame 197.
                result.InsertKeyFrame(0.820833325F, new Vector3(4.78399992F, 13.4519997F, 0F), CubicBezierEasingFunction_0());
                // Frame 198.
                result.InsertKeyFrame(0.824999988F, new Vector3(4.74300003F, 17.5830002F, 0F), CubicBezierEasingFunction_0());
                // Frame 199.
                result.InsertKeyFrame(0.829166651F, new Vector3(4.6789999F, 20.1580009F, 0F), CubicBezierEasingFunction_0());
                // Frame 202.
                result.InsertKeyFrame(0.841666639F, new Vector3(4.36600018F, 20.0569992F, 0F), CubicBezierEasingFunction_0());
                // Frame 203.
                result.InsertKeyFrame(0.845833361F, new Vector3(4.22700024F, 18.6760006F, 0F), CubicBezierEasingFunction_0());
                // Frame 204.
                result.InsertKeyFrame(0.850000024F, new Vector3(4.07299995F, 16.4950008F, 0F), CubicBezierEasingFunction_0());
                // Frame 205.
                result.InsertKeyFrame(0.854166687F, new Vector3(3.9059999F, 13.3690004F, 0F), CubicBezierEasingFunction_0());
                // Frame 206.
                result.InsertKeyFrame(0.858333349F, new Vector3(3.727F, 9.29500008F, 0F), CubicBezierEasingFunction_0());
                // Frame 207.
                result.InsertKeyFrame(0.862500012F, new Vector3(3.53800011F, 4.71400023F, 0F), CubicBezierEasingFunction_0());
                // Frame 208.
                result.InsertKeyFrame(0.866666675F, new Vector3(3.33899999F, 0.67900002F, 0F), CubicBezierEasingFunction_0());
                // Frame 209.
                result.InsertKeyFrame(0.870833337F, new Vector3(3.13400006F, -1.79799998F, 0F), CubicBezierEasingFunction_0());
                // Frame 211.
                result.InsertKeyFrame(0.879166663F, new Vector3(2.704F, -2.40899992F, 0F), CubicBezierEasingFunction_0());
                // Frame 213.
                result.InsertKeyFrame(0.887499988F, new Vector3(2.25999999F, -2.22600007F, 0F), CubicBezierEasingFunction_0());
                // Frame 215.
                result.InsertKeyFrame(0.895833313F, new Vector3(1.80999994F, -2.03800011F, 0F), CubicBezierEasingFunction_0());
                // Frame 217.
                result.InsertKeyFrame(0.904166639F, new Vector3(1.36300004F, -1.85099995F, 0F), CubicBezierEasingFunction_0());
                // Frame 219.
                result.InsertKeyFrame(0.912500024F, new Vector3(0.927999973F, -1.66799998F, 0F), CubicBezierEasingFunction_0());
                // Frame 221.
                result.InsertKeyFrame(0.920833349F, new Vector3(0.513000011F, -1.49000001F, 0F), CubicBezierEasingFunction_0());
                // Frame 224.
                result.InsertKeyFrame(0.933333337F, new Vector3(-0.057F, -1.24399996F, 0F), CubicBezierEasingFunction_0());
                // Frame 227.
                result.InsertKeyFrame(0.945833325F, new Vector3(-0.546000004F, -1.02900004F, 0F), CubicBezierEasingFunction_0());
                // Frame 232.
                result.InsertKeyFrame(0.966666639F, new Vector3(-1.12899995F, -0.760999978F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            // PreComp layer: security
            // Offset
            Vector3KeyFrameAnimation OffsetVector3Animation_1()
            {
                // Frame 0.
                var result = CreateVector3KeyFrameAnimation(0F, new Vector3(-2.78999996F, -0.326999992F, 0F), StepThenHoldEasingFunction());
                // Frame 8.
                result.InsertKeyFrame(0.0333333351F, new Vector3(-2.78999996F, -0.326999992F, 0F), HoldThenStepEasingFunction());
                // Frame 11.
                result.InsertKeyFrame(0.0458333343F, new Vector3(-2.49600005F, -0.898999989F, 0F), CubicBezierEasingFunction_0());
                // Frame 14.
                result.InsertKeyFrame(0.0583333336F, new Vector3(-2.125F, -1.60099995F, 0F), CubicBezierEasingFunction_0());
                // Frame 16.
                result.InsertKeyFrame(0.0666666701F, new Vector3(-1.84099996F, -2.1329999F, 0F), CubicBezierEasingFunction_0());
                // Frame 18.
                result.InsertKeyFrame(0.075000003F, new Vector3(-1.53199995F, -2.70700002F, 0F), CubicBezierEasingFunction_0());
                // Frame 20.
                result.InsertKeyFrame(0.0833333358F, new Vector3(-1.204F, -3.31699991F, 0F), CubicBezierEasingFunction_0());
                // Frame 22.
                result.InsertKeyFrame(0.0916666687F, new Vector3(-0.85799998F, -3.96000004F, 0F), CubicBezierEasingFunction_0());
                // Frame 24.
                result.InsertKeyFrame(0.100000001F, new Vector3(-0.499000013F, -4.63000011F, 0F), CubicBezierEasingFunction_0());
                // Frame 26.
                result.InsertKeyFrame(0.108333334F, new Vector3(-0.131999999F, -5.31799984F, 0F), CubicBezierEasingFunction_0());
                // Frame 28.
                result.InsertKeyFrame(0.116666667F, new Vector3(0.238000005F, -6.01999998F, 0F), CubicBezierEasingFunction_0());
                // Frame 30.
                result.InsertKeyFrame(0.125F, new Vector3(0.60799998F, -6.73000002F, 0F), CubicBezierEasingFunction_0());
                // Frame 32.
                result.InsertKeyFrame(0.13333334F, new Vector3(0.973999977F, -7.44199991F, 0F), CubicBezierEasingFunction_0());
                // Frame 34.
                result.InsertKeyFrame(0.141666666F, new Vector3(1.33099997F, -8.15200043F, 0F), CubicBezierEasingFunction_0());
                // Frame 36.
                result.InsertKeyFrame(0.150000006F, new Vector3(1.676F, -8.85299969F, 0F), CubicBezierEasingFunction_0());
                // Frame 38.
                result.InsertKeyFrame(0.158333331F, new Vector3(2.00300002F, -9.53999996F, 0F), CubicBezierEasingFunction_0());
                // Frame 40.
                result.InsertKeyFrame(0.166666672F, new Vector3(2.30800009F, -10.2030001F, 0F), CubicBezierEasingFunction_0());
                // Frame 42.
                result.InsertKeyFrame(0.174999997F, new Vector3(2.58599997F, -10.8389997F, 0F), CubicBezierEasingFunction_0());
                // Frame 45.
                result.InsertKeyFrame(0.1875F, new Vector3(2.94400001F, -11.7299995F, 0F), CubicBezierEasingFunction_0());
                // Frame 48.
                result.InsertKeyFrame(0.200000003F, new Vector3(3.21199989F, -12.5240002F, 0F), CubicBezierEasingFunction_0());
                // Frame 52.
                result.InsertKeyFrame(0.216666669F, new Vector3(3.39199996F, -13.3950005F, 0F), CubicBezierEasingFunction_0());
                // Frame 62.
                result.InsertKeyFrame(0.258333325F, new Vector3(3.05800009F, -14.0799999F, 0F), CubicBezierEasingFunction_0());
                // Frame 65.
                result.InsertKeyFrame(0.270833343F, new Vector3(2.71499991F, -14.132F, 0F), CubicBezierEasingFunction_0());
                // Frame 66.
                result.InsertKeyFrame(0.275000006F, new Vector3(2.53800011F, -14.1359997F, 0F), CubicBezierEasingFunction_0());
                // Frame 67.
                result.InsertKeyFrame(0.279166669F, new Vector3(2.33299994F, -14.125F, 0F), CubicBezierEasingFunction_0());
                // Frame 68.
                result.InsertKeyFrame(0.283333331F, new Vector3(2.102F, -14.0939999F, 0F), CubicBezierEasingFunction_0());
                // Frame 69.
                result.InsertKeyFrame(0.287499994F, new Vector3(1.84599996F, -14.0389996F, 0F), CubicBezierEasingFunction_0());
                // Frame 70.
                result.InsertKeyFrame(0.291666657F, new Vector3(1.57000005F, -13.96F, 0F), CubicBezierEasingFunction_0());
                // Frame 71.
                result.InsertKeyFrame(0.295833319F, new Vector3(1.27699995F, -13.8559999F, 0F), CubicBezierEasingFunction_0());
                // Frame 72.
                result.InsertKeyFrame(0.300000012F, new Vector3(0.971000016F, -13.7270002F, 0F), CubicBezierEasingFunction_0());
                // Frame 73.
                result.InsertKeyFrame(0.304166675F, new Vector3(0.652999997F, -13.5740004F, 0F), CubicBezierEasingFunction_0());
                // Frame 74.
                result.InsertKeyFrame(0.308333337F, new Vector3(0.324000001F, -13.3970003F, 0F), CubicBezierEasingFunction_0());
                // Frame 75.
                result.InsertKeyFrame(0.3125F, new Vector3(-0.0149999997F, -13.198F, 0F), CubicBezierEasingFunction_0());
                // Frame 76.
                result.InsertKeyFrame(0.316666663F, new Vector3(-0.361999989F, -12.9790001F, 0F), CubicBezierEasingFunction_0());
                // Frame 77.
                result.InsertKeyFrame(0.320833325F, new Vector3(-0.714999974F, -12.7399998F, 0F), CubicBezierEasingFunction_0());
                // Frame 78.
                result.InsertKeyFrame(0.324999988F, new Vector3(-1.07500005F, -12.4829998F, 0F), CubicBezierEasingFunction_0());
                // Frame 79.
                result.InsertKeyFrame(0.329166681F, new Vector3(-1.43900001F, -12.2110004F, 0F), CubicBezierEasingFunction_0());
                // Frame 80.
                result.InsertKeyFrame(0.333333343F, new Vector3(-1.80799997F, -11.9230003F, 0F), CubicBezierEasingFunction_0());
                // Frame 81.
                result.InsertKeyFrame(0.337500006F, new Vector3(-2.18099999F, -11.6210003F, 0F), CubicBezierEasingFunction_0());
                // Frame 82.
                result.InsertKeyFrame(0.341666669F, new Vector3(-2.55699992F, -11.3059998F, 0F), CubicBezierEasingFunction_0());
                // Frame 83.
                result.InsertKeyFrame(0.345833331F, new Vector3(-2.93700004F, -10.9799995F, 0F), CubicBezierEasingFunction_0());
                // Frame 84.
                result.InsertKeyFrame(0.349999994F, new Vector3(-3.31800008F, -10.6420002F, 0F), CubicBezierEasingFunction_0());
                // Frame 85.
                result.InsertKeyFrame(0.354166657F, new Vector3(-3.7019999F, -10.2959995F, 0F), CubicBezierEasingFunction_0());
                // Frame 86.
                result.InsertKeyFrame(0.358333319F, new Vector3(-4.08599997F, -9.94200039F, 0F), CubicBezierEasingFunction_0());
                // Frame 87.
                result.InsertKeyFrame(0.362500012F, new Vector3(-4.47100019F, -9.58100033F, 0F), CubicBezierEasingFunction_0());
                // Frame 88.
                result.InsertKeyFrame(0.366666675F, new Vector3(-4.85500002F, -9.21500015F, 0F), CubicBezierEasingFunction_0());
                // Frame 89.
                result.InsertKeyFrame(0.370833337F, new Vector3(-5.23899984F, -8.84500027F, 0F), CubicBezierEasingFunction_0());
                // Frame 90.
                result.InsertKeyFrame(0.375F, new Vector3(-5.62099981F, -8.47200012F, 0F), CubicBezierEasingFunction_0());
                // Frame 91.
                result.InsertKeyFrame(0.379166663F, new Vector3(-6.00099993F, -8.09700012F, 0F), CubicBezierEasingFunction_0());
                // Frame 92.
                result.InsertKeyFrame(0.383333325F, new Vector3(-6.37900019F, -7.72200012F, 0F), CubicBezierEasingFunction_0());
                // Frame 93.
                result.InsertKeyFrame(0.387499988F, new Vector3(-6.75400019F, -7.34600019F, 0F), CubicBezierEasingFunction_0());
                // Frame 94.
                result.InsertKeyFrame(0.391666681F, new Vector3(-7.12599993F, -6.97300005F, 0F), CubicBezierEasingFunction_0());
                // Frame 95.
                result.InsertKeyFrame(0.395833343F, new Vector3(-7.49399996F, -6.60200024F, 0F), CubicBezierEasingFunction_0());
                // Frame 96.
                result.InsertKeyFrame(0.400000006F, new Vector3(-7.85699987F, -6.23600006F, 0F), CubicBezierEasingFunction_0());
                // Frame 97.
                result.InsertKeyFrame(0.404166669F, new Vector3(-8.21500015F, -5.875F, 0F), CubicBezierEasingFunction_0());
                // Frame 98.
                result.InsertKeyFrame(0.408333331F, new Vector3(-8.56799984F, -5.52099991F, 0F), CubicBezierEasingFunction_0());
                // Frame 99.
                result.InsertKeyFrame(0.412499994F, new Vector3(-8.91499996F, -5.17299986F, 0F), CubicBezierEasingFunction_0());
                // Frame 100.
                result.InsertKeyFrame(0.416666657F, new Vector3(-9.25599957F, -4.83300018F, 0F), CubicBezierEasingFunction_0());
                // Frame 101.
                result.InsertKeyFrame(0.420833319F, new Vector3(-9.5909996F, -4.50299978F, 0F), CubicBezierEasingFunction_0());
                // Frame 102.
                result.InsertKeyFrame(0.425000012F, new Vector3(-9.91800022F, -4.18499994F, 0F), CubicBezierEasingFunction_0());
                // Frame 103.
                result.InsertKeyFrame(0.429166675F, new Vector3(-10.2370005F, -3.87800002F, 0F), CubicBezierEasingFunction_0());
                // Frame 104.
                result.InsertKeyFrame(0.433333337F, new Vector3(-10.5469999F, -3.58699989F, 0F), CubicBezierEasingFunction_0());
                // Frame 105.
                result.InsertKeyFrame(0.4375F, new Vector3(-10.8470001F, -3.30999994F, 0F), CubicBezierEasingFunction_0());
                // Frame 106.
                result.InsertKeyFrame(0.441666663F, new Vector3(-11.1379995F, -3.04999995F, 0F), CubicBezierEasingFunction_0());
                // Frame 107.
                result.InsertKeyFrame(0.445833325F, new Vector3(-11.4200001F, -2.80699992F, 0F), CubicBezierEasingFunction_0());
                // Frame 108.
                result.InsertKeyFrame(0.449999988F, new Vector3(-11.6929998F, -2.58200002F, 0F), CubicBezierEasingFunction_0());
                // Frame 109.
                result.InsertKeyFrame(0.454166681F, new Vector3(-11.9560003F, -2.37899995F, 0F), CubicBezierEasingFunction_0());
                // Frame 110.
                result.InsertKeyFrame(0.458333343F, new Vector3(-12.2080002F, -2.19799995F, 0F), CubicBezierEasingFunction_0());
                // Frame 111.
                result.InsertKeyFrame(0.462500006F, new Vector3(-12.448F, -2.04399991F, 0F), CubicBezierEasingFunction_0());
                // Frame 112.
                result.InsertKeyFrame(0.466666669F, new Vector3(-12.677F, -1.91900003F, 0F), CubicBezierEasingFunction_0());
                // Frame 113.
                result.InsertKeyFrame(0.470833331F, new Vector3(-12.8920002F, -1.829F, 0F), CubicBezierEasingFunction_0());
                // Frame 114.
                result.InsertKeyFrame(0.474999994F, new Vector3(-13.092F, -1.78199995F, 0F), CubicBezierEasingFunction_0());
                // Frame 116.
                result.InsertKeyFrame(0.483333319F, new Vector3(-13.4020004F, -1.84399998F, 0F), CubicBezierEasingFunction_0());
                // Frame 127.
                result.InsertKeyFrame(0.529166639F, new Vector3(-13.698F, -2.61199999F, 0F), CubicBezierEasingFunction_0());
                // Frame 131.
                result.InsertKeyFrame(0.545833349F, new Vector3(-13.7399998F, -3.38700008F, 0F), CubicBezierEasingFunction_0());
                // Frame 134.
                result.InsertKeyFrame(0.558333337F, new Vector3(-13.6929998F, -4.14099979F, 0F), CubicBezierEasingFunction_0());
                // Frame 137.
                result.InsertKeyFrame(0.570833325F, new Vector3(-13.5749998F, -5.00699997F, 0F), CubicBezierEasingFunction_0());
                // Frame 139.
                result.InsertKeyFrame(0.579166651F, new Vector3(-13.4580002F, -5.6329999F, 0F), CubicBezierEasingFunction_0());
                // Frame 141.
                result.InsertKeyFrame(0.587499976F, new Vector3(-13.3120003F, -6.29199982F, 0F), CubicBezierEasingFunction_0());
                // Frame 143.
                result.InsertKeyFrame(0.595833361F, new Vector3(-13.1379995F, -6.97800016F, 0F), CubicBezierEasingFunction_0());
                // Frame 145.
                result.InsertKeyFrame(0.604166687F, new Vector3(-12.941F, -7.68100023F, 0F), CubicBezierEasingFunction_0());
                // Frame 147.
                result.InsertKeyFrame(0.612500012F, new Vector3(-12.7220001F, -8.39500046F, 0F), CubicBezierEasingFunction_0());
                // Frame 149.
                result.InsertKeyFrame(0.620833337F, new Vector3(-12.4840002F, -9.11200047F, 0F), CubicBezierEasingFunction_0());
                // Frame 151.
                result.InsertKeyFrame(0.629166663F, new Vector3(-12.2279997F, -9.82800007F, 0F), CubicBezierEasingFunction_0());
                // Frame 153.
                result.InsertKeyFrame(0.637499988F, new Vector3(-11.9589996F, -10.5340004F, 0F), CubicBezierEasingFunction_0());
                // Frame 155.
                result.InsertKeyFrame(0.645833313F, new Vector3(-11.677F, -11.2259998F, 0F), CubicBezierEasingFunction_0());
                // Frame 157.
                result.InsertKeyFrame(0.654166639F, new Vector3(-11.3850002F, -11.8959999F, 0F), CubicBezierEasingFunction_0());
                // Frame 159.
                result.InsertKeyFrame(0.662500024F, new Vector3(-11.0880003F, -12.5360003F, 0F), CubicBezierEasingFunction_0());
                // Frame 161.
                result.InsertKeyFrame(0.670833349F, new Vector3(-10.7860003F, -13.1400003F, 0F), CubicBezierEasingFunction_0());
                // Frame 163.
                result.InsertKeyFrame(0.679166675F, new Vector3(-10.4820004F, -13.7019997F, 0F), CubicBezierEasingFunction_0());
                // Frame 165.
                result.InsertKeyFrame(0.6875F, new Vector3(-10.1789999F, -14.2139997F, 0F), CubicBezierEasingFunction_0());
                // Frame 167.
                result.InsertKeyFrame(0.695833325F, new Vector3(-9.88000011F, -14.6680002F, 0F), CubicBezierEasingFunction_0());
                // Frame 169.
                result.InsertKeyFrame(0.704166651F, new Vector3(-9.58699989F, -15.0559998F, 0F), CubicBezierEasingFunction_0());
                // Frame 171.
                result.InsertKeyFrame(0.712499976F, new Vector3(-9.30300045F, -15.3690004F, 0F), CubicBezierEasingFunction_0());
                // Frame 173.
                result.InsertKeyFrame(0.720833361F, new Vector3(-9.03199959F, -15.5970001F, 0F), CubicBezierEasingFunction_0());
                // Frame 176.
                result.InsertKeyFrame(0.733333349F, new Vector3(-8.68900013F, -15.7539997F, 0F), CubicBezierEasingFunction_0());
                // Frame 183.
                result.InsertKeyFrame(0.762499988F, new Vector3(-8.38599968F, -15.7049999F, 0F), CubicBezierEasingFunction_0());
                // Frame 186.
                result.InsertKeyFrame(0.774999976F, new Vector3(-8.10999966F, -15.4750004F, 0F), CubicBezierEasingFunction_0());
                // Frame 189.
                result.InsertKeyFrame(0.787500024F, new Vector3(-7.78000021F, -15.0139999F, 0F), CubicBezierEasingFunction_0());
                // Frame 192.
                result.InsertKeyFrame(0.800000012F, new Vector3(-7.43100023F, -14.3520002F, 0F), CubicBezierEasingFunction_0());
                // Frame 195.
                result.InsertKeyFrame(0.8125F, new Vector3(-7.0710001F, -13.5209999F, 0F), CubicBezierEasingFunction_0());
                // Frame 197.
                result.InsertKeyFrame(0.820833325F, new Vector3(-6.82800007F, -12.8889999F, 0F), CubicBezierEasingFunction_0());
                // Frame 199.
                result.InsertKeyFrame(0.829166651F, new Vector3(-6.58300018F, -12.2049999F, 0F), CubicBezierEasingFunction_0());
                // Frame 201.
                result.InsertKeyFrame(0.837499976F, new Vector3(-6.33900023F, -11.4770002F, 0F), CubicBezierEasingFunction_0());
                // Frame 203.
                result.InsertKeyFrame(0.845833361F, new Vector3(-6.09399986F, -10.7089996F, 0F), CubicBezierEasingFunction_0());
                // Frame 205.
                result.InsertKeyFrame(0.854166687F, new Vector3(-5.85099983F, -9.91300011F, 0F), CubicBezierEasingFunction_0());
                // Frame 207.
                result.InsertKeyFrame(0.862500012F, new Vector3(-5.61000013F, -9.09700012F, 0F), CubicBezierEasingFunction_0());
                // Frame 209.
                result.InsertKeyFrame(0.870833337F, new Vector3(-5.37400007F, -8.26900005F, 0F), CubicBezierEasingFunction_0());
                // Frame 211.
                result.InsertKeyFrame(0.879166663F, new Vector3(-5.14300013F, -7.4369998F, 0F), CubicBezierEasingFunction_0());
                // Frame 213.
                result.InsertKeyFrame(0.887499988F, new Vector3(-4.91699982F, -6.6079998F, 0F), CubicBezierEasingFunction_0());
                // Frame 215.
                result.InsertKeyFrame(0.895833313F, new Vector3(-4.69799995F, -5.78800011F, 0F), CubicBezierEasingFunction_0());
                // Frame 217.
                result.InsertKeyFrame(0.904166639F, new Vector3(-4.48500013F, -4.98500013F, 0F), CubicBezierEasingFunction_0());
                // Frame 219.
                result.InsertKeyFrame(0.912500024F, new Vector3(-4.28100014F, -4.20599985F, 0F), CubicBezierEasingFunction_0());
                // Frame 221.
                result.InsertKeyFrame(0.920833349F, new Vector3(-4.08699989F, -3.46199989F, 0F), CubicBezierEasingFunction_0());
                // Frame 223.
                result.InsertKeyFrame(0.929166675F, new Vector3(-3.90499997F, -2.75900006F, 0F), CubicBezierEasingFunction_0());
                // Frame 225.
                result.InsertKeyFrame(0.9375F, new Vector3(-3.73300004F, -2.10500002F, 0F), CubicBezierEasingFunction_0());
                // Frame 228.
                result.InsertKeyFrame(0.949999988F, new Vector3(-3.50099993F, -1.22899997F, 0F), CubicBezierEasingFunction_0());
                // Frame 232.
                result.InsertKeyFrame(0.966666639F, new Vector3(-3.24499989F, -0.301999986F, 0F), CubicBezierEasingFunction_0());
                return result;
            }

            internal LoginAnimation_AnimatedVisual(
                Compositor compositor
                )
            {
                _c = compositor;
                _reusableExpressionAnimation = compositor.CreateExpressionAnimation();
                Root();
            }

            public Visual RootVisual => _root;
            public TimeSpan Duration => TimeSpan.FromTicks(c_durationTicks);
            public Vector2 Size => new Vector2(1200F, 1200F);
            void IDisposable.Dispose() => _root?.Dispose();

            public void CreateAnimations()
            {
                _containerShape_0.StartAnimation("Scale", ScaleVector2Animation_1(), AnimationController_0());
                _containerShape_1.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_0_to_0(), AnimationController_0());
                _containerShape_1.StartAnimation("Offset", OffsetVector2Animation_0(), AnimationController_0());
                _containerShape_2.StartAnimation("Scale", ShapeVisibilityAnimation_0(), AnimationController_0());
                _containerShape_3.StartAnimation("Scale", ShapeVisibilityAnimation_1(), AnimationController_0());
                _containerShape_4.StartAnimation("Scale", ShapeVisibilityAnimation_2(), AnimationController_0());
                _containerShape_5.StartAnimation("Scale", ShapeVisibilityAnimation_3(), AnimationController_0());
                _containerShape_6.StartAnimation("Offset", OffsetVector2Animation_1(), AnimationController_0());
                _pathGeometry_10.StartAnimation("TrimEnd", TrimEndScalarAnimation_0_to_0(), AnimationController_0());
                _spriteShape_00.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _spriteShape_01.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _spriteShape_02.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _spriteShape_03.StartAnimation("Scale", ScaleVector2Animation_0(), AnimationController_0());
                _containerVisual_0.StartAnimation("Offset", OffsetVector3Animation_0(), AnimationController_0());
                _containerVisual_2.StartAnimation("RotationAngleInDegrees", RotationAngleInDegreesScalarAnimation_m2_to_m1p997(), AnimationController_0());
                _containerVisual_4.StartAnimation("Offset", OffsetVector3Animation_1(), AnimationController_0());
                _root.Properties.StartAnimation("t0", t0ScalarAnimation_0_to_1(), AnimationController_0());
                _root.Properties.StartAnimation("t1", t1ScalarAnimation_0_to_1(), AnimationController_0());
                _root.Properties.StartAnimation("t2", t2ScalarAnimation_0_to_1(), AnimationController_0());
            }

            public void DestroyAnimations()
            {
                _containerShape_0.StopAnimation("Scale");
                _containerShape_1.StopAnimation("RotationAngleInDegrees");
                _containerShape_1.StopAnimation("Offset");
                _containerShape_2.StopAnimation("Scale");
                _containerShape_3.StopAnimation("Scale");
                _containerShape_4.StopAnimation("Scale");
                _containerShape_5.StopAnimation("Scale");
                _containerShape_6.StopAnimation("Offset");
                _pathGeometry_10.StopAnimation("TrimEnd");
                _spriteShape_00.StopAnimation("Scale");
                _spriteShape_01.StopAnimation("Scale");
                _spriteShape_02.StopAnimation("Scale");
                _spriteShape_03.StopAnimation("Scale");
                _containerVisual_0.StopAnimation("Offset");
                _containerVisual_2.StopAnimation("RotationAngleInDegrees");
                _containerVisual_4.StopAnimation("Offset");
                _root.Properties.StopAnimation("t0");
                _root.Properties.StopAnimation("t1");
                _root.Properties.StopAnimation("t2");
            }

        }
    }
}
